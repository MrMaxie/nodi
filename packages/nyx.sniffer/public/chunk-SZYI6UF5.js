var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __reExport = (target, module, copyDefault, desc) => {
  if (module && typeof module === "object" || typeof module === "function") {
    for (let key of __getOwnPropNames(module))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", !isNodeMode && module && module.__esModule ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
};

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "node_modules/react/cjs/react.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var _assign = require_object_assign();
        var ReactVersion = "17.0.2";
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        exports.Fragment = 60107;
        exports.StrictMode = 60108;
        exports.Profiler = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        exports.Suspense = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          exports.Fragment = symbolFor("react.fragment");
          exports.StrictMode = symbolFor("react.strict_mode");
          exports.Profiler = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          exports.Suspense = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: 0
        };
        var ReactCurrentOwner = {
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var IsSomeRendererActing = {
          current: false
        };
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner,
          IsSomeRendererActing,
          assign: _assign
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
        }
        function warn(format) {
          {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            printWarning("warn", format, args);
          }
        }
        function error(format) {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return "" + item;
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          isMounted: function(publicInstance) {
            return false;
          },
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback) {
          if (!(typeof partialState === "object" || typeof partialState === "function" || partialState == null)) {
            {
              throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            }
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        _assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case exports.Fragment:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case exports.Profiler:
              return "Profiler";
            case exports.StrictMode:
              return "StrictMode";
            case exports.Suspense:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentName(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
              var componentName = getComponentName(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement(type, config, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config);
              }
            }
            if (hasValidKey(config)) {
              key = "" + config.key;
            }
            self2 = config.__self === void 0 ? null : config.__self;
            source = config.__source === void 0 ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          if (!!(element === null || element === void 0)) {
            {
              throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
            }
          }
          var propName;
          var props = _assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              key = "" + config.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self2, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            return escape("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
          var type = typeof children;
          if (type === "undefined" || type === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (Array.isArray(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                mappedChild = cloneAndReplaceKey(mappedChild, escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getElementKey(child, i);
              subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii++);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else if (type === "object") {
              var childrenString = "" + children;
              {
                {
                  throw Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
                }
              }
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count = 0;
          mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
          });
          return result;
        }
        function countChildren(children) {
          var n = 0;
          mapChildren(children, function() {
            n++;
          });
          return n;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            {
              throw Error("React.Children.only expected to receive a single React element child.");
            }
          }
          return children;
        }
        function createContext(defaultValue, calculateChangedBits) {
          if (calculateChangedBits === void 0) {
            calculateChangedBits = null;
          } else {
            {
              if (calculateChangedBits !== null && typeof calculateChangedBits !== "function") {
                error("createContext: Expected the optional second argument to be a function. Instead received: %s", calculateChangedBits);
              }
            }
          }
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            _calculateChangedBits: calculateChangedBits,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context,
              _calculateChangedBits: context._calculateChangedBits
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context.Provider;
                },
                set: function(_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context._currentValue;
                },
                set: function(_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context._currentValue2;
                },
                set: function(_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context._threadCount;
                },
                set: function(_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            var pending = payload;
            pending._status = Pending;
            pending._result = thenable;
            thenable.then(function(moduleObject) {
              if (payload._status === Pending) {
                var defaultExport = moduleObject.default;
                {
                  if (defaultExport === void 0) {
                    error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                  }
                }
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = defaultExport;
              }
            }, function(error2) {
              if (payload._status === Pending) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error2;
              }
            });
          }
          if (payload._status === Resolved) {
            return payload._result;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            _status: -1,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render !== "function") {
              error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
            } else {
              if (render.length !== 0 && render.length !== 2) {
                error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render != null) {
              if (render.defaultProps != null || render.propTypes != null) {
                error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (render.displayName == null) {
                  render.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var enableScopeAPI = false;
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (type.displayName == null) {
                  type.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          if (!(dispatcher !== null)) {
            {
              throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext(Context, unstable_observedBits) {
          var dispatcher = resolveDispatcher();
          {
            if (unstable_observedBits !== void 0) {
              error("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", unstable_observedBits, typeof unstable_observedBits === "number" && Array.isArray(arguments[2]) ? "\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks" : "");
            }
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context, unstable_observedBits);
        }
        function useState(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: _assign({}, props, {
                  value: prevLog
                }),
                info: _assign({}, props, {
                  value: prevInfo
                }),
                warn: _assign({}, props, {
                  value: prevWarn
                }),
                error: _assign({}, props, {
                  value: prevError
                }),
                group: _assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: _assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: _assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case exports.Suspense:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(Object.prototype.hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentName(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (Array.isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentName(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentName(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (Array.isArray(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentName(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element = createElement.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === exports.Fragment) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        {
          try {
            var frozenObject = Object.freeze({});
            /* @__PURE__ */ new Map([[frozenObject, null]]);
            /* @__PURE__ */ new Set([frozenObject]);
          } catch (e) {
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray,
          only: onlyChild
        };
        exports.Children = Children;
        exports.Component = Component;
        exports.PureComponent = PureComponent;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports.cloneElement = cloneElement$1;
        exports.createContext = createContext;
        exports.createElement = createElement$1;
        exports.createFactory = createFactory;
        exports.createRef = createRef;
        exports.forwardRef = forwardRef;
        exports.isValidElement = isValidElement;
        exports.lazy = lazy;
        exports.memo = memo;
        exports.useCallback = useCallback;
        exports.useContext = useContext;
        exports.useDebugValue = useDebugValue;
        exports.useEffect = useEffect;
        exports.useImperativeHandle = useImperativeHandle;
        exports.useLayoutEffect = useLayoutEffect;
        exports.useMemo = useMemo;
        exports.useReducer = useReducer;
        exports.useRef = useRef;
        exports.useState = useState;
        exports.version = ReactVersion;
      })();
    }
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_development();
    }
  }
});

// node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var requestHostCallback;
        var requestHostTimeout;
        var cancelHostTimeout;
        var requestPaint;
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        if (typeof window === "undefined" || typeof MessageChannel !== "function") {
          var _callback = null;
          var _timeoutID = null;
          var _flushCallback = function() {
            if (_callback !== null) {
              try {
                var currentTime = exports.unstable_now();
                var hasRemainingTime = true;
                _callback(hasRemainingTime, currentTime);
                _callback = null;
              } catch (e) {
                setTimeout(_flushCallback, 0);
                throw e;
              }
            }
          };
          requestHostCallback = function(cb) {
            if (_callback !== null) {
              setTimeout(requestHostCallback, 0, cb);
            } else {
              _callback = cb;
              setTimeout(_flushCallback, 0);
            }
          };
          requestHostTimeout = function(cb, ms) {
            _timeoutID = setTimeout(cb, ms);
          };
          cancelHostTimeout = function() {
            clearTimeout(_timeoutID);
          };
          exports.unstable_shouldYield = function() {
            return false;
          };
          requestPaint = exports.unstable_forceFrameRate = function() {
          };
        } else {
          var _setTimeout = window.setTimeout;
          var _clearTimeout = window.clearTimeout;
          if (typeof console !== "undefined") {
            var requestAnimationFrame2 = window.requestAnimationFrame;
            var cancelAnimationFrame2 = window.cancelAnimationFrame;
            if (typeof requestAnimationFrame2 !== "function") {
              console["error"]("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
            if (typeof cancelAnimationFrame2 !== "function") {
              console["error"]("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            }
          }
          var isMessageLoopRunning = false;
          var scheduledHostCallback = null;
          var taskTimeoutID = -1;
          var yieldInterval = 5;
          var deadline = 0;
          {
            exports.unstable_shouldYield = function() {
              return exports.unstable_now() >= deadline;
            };
            requestPaint = function() {
            };
          }
          exports.unstable_forceFrameRate = function(fps) {
            if (fps < 0 || fps > 125) {
              console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
              return;
            }
            if (fps > 0) {
              yieldInterval = Math.floor(1e3 / fps);
            } else {
              yieldInterval = 5;
            }
          };
          var performWorkUntilDeadline = function() {
            if (scheduledHostCallback !== null) {
              var currentTime = exports.unstable_now();
              deadline = currentTime + yieldInterval;
              var hasTimeRemaining = true;
              try {
                var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                if (!hasMoreWork) {
                  isMessageLoopRunning = false;
                  scheduledHostCallback = null;
                } else {
                  port.postMessage(null);
                }
              } catch (error) {
                port.postMessage(null);
                throw error;
              }
            } else {
              isMessageLoopRunning = false;
            }
          };
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          requestHostCallback = function(callback) {
            scheduledHostCallback = callback;
            if (!isMessageLoopRunning) {
              isMessageLoopRunning = true;
              port.postMessage(null);
            }
          };
          requestHostTimeout = function(callback, ms) {
            taskTimeoutID = _setTimeout(function() {
              callback(exports.unstable_now());
            }, ms);
          };
          cancelHostTimeout = function() {
            _clearTimeout(taskTimeoutID);
            taskTimeoutID = -1;
          };
        }
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          var first = heap[0];
          return first === void 0 ? null : first;
        }
        function pop(heap) {
          var first = heap[0];
          if (first !== void 0) {
            var last = heap.pop();
            if (last !== first) {
              heap[0] = last;
              siftDown(heap, last, 0);
            }
            return first;
          } else {
            return null;
          }
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (true) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (parent !== void 0 && compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          while (index < length) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (left !== void 0 && compare(left, node) < 0) {
              if (right !== void 0 && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (right !== void 0 && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
              priorityLevel = NormalPriority;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime = currentTime + delay;
            } else {
              startTime = currentTime;
            }
          } else {
            startTime = currentTime;
          }
          var timeout;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority:
            default:
              timeout = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime + timeout;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime,
            expirationTime,
            sortIndex: -1
          };
          if (startTime > currentTime) {
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_wrapCallback = unstable_wrapCallback;
      })();
    }
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development();
    }
  }
});

// node_modules/scheduler/cjs/scheduler-tracing.development.js
var require_scheduler_tracing_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler-tracing.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var DEFAULT_THREAD_ID = 0;
        var interactionIDCounter = 0;
        var threadIDCounter = 0;
        exports.__interactionsRef = null;
        exports.__subscriberRef = null;
        {
          exports.__interactionsRef = {
            current: /* @__PURE__ */ new Set()
          };
          exports.__subscriberRef = {
            current: null
          };
        }
        function unstable_clear(callback) {
          var prevInteractions = exports.__interactionsRef.current;
          exports.__interactionsRef.current = /* @__PURE__ */ new Set();
          try {
            return callback();
          } finally {
            exports.__interactionsRef.current = prevInteractions;
          }
        }
        function unstable_getCurrent() {
          {
            return exports.__interactionsRef.current;
          }
        }
        function unstable_getThreadID() {
          return ++threadIDCounter;
        }
        function unstable_trace(name, timestamp, callback) {
          var threadID = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : DEFAULT_THREAD_ID;
          var interaction = {
            __count: 1,
            id: interactionIDCounter++,
            name,
            timestamp
          };
          var prevInteractions = exports.__interactionsRef.current;
          var interactions = new Set(prevInteractions);
          interactions.add(interaction);
          exports.__interactionsRef.current = interactions;
          var subscriber = exports.__subscriberRef.current;
          var returnValue;
          try {
            if (subscriber !== null) {
              subscriber.onInteractionTraced(interaction);
            }
          } finally {
            try {
              if (subscriber !== null) {
                subscriber.onWorkStarted(interactions, threadID);
              }
            } finally {
              try {
                returnValue = callback();
              } finally {
                exports.__interactionsRef.current = prevInteractions;
                try {
                  if (subscriber !== null) {
                    subscriber.onWorkStopped(interactions, threadID);
                  }
                } finally {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                }
              }
            }
          }
          return returnValue;
        }
        function unstable_wrap(callback) {
          var threadID = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_THREAD_ID;
          var wrappedInteractions = exports.__interactionsRef.current;
          var subscriber = exports.__subscriberRef.current;
          if (subscriber !== null) {
            subscriber.onWorkScheduled(wrappedInteractions, threadID);
          }
          wrappedInteractions.forEach(function(interaction) {
            interaction.__count++;
          });
          var hasRun = false;
          function wrapped() {
            var prevInteractions = exports.__interactionsRef.current;
            exports.__interactionsRef.current = wrappedInteractions;
            subscriber = exports.__subscriberRef.current;
            try {
              var returnValue;
              try {
                if (subscriber !== null) {
                  subscriber.onWorkStarted(wrappedInteractions, threadID);
                }
              } finally {
                try {
                  returnValue = callback.apply(void 0, arguments);
                } finally {
                  exports.__interactionsRef.current = prevInteractions;
                  if (subscriber !== null) {
                    subscriber.onWorkStopped(wrappedInteractions, threadID);
                  }
                }
              }
              return returnValue;
            } finally {
              if (!hasRun) {
                hasRun = true;
                wrappedInteractions.forEach(function(interaction) {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    subscriber.onInteractionScheduledWorkCompleted(interaction);
                  }
                });
              }
            }
          }
          wrapped.cancel = function cancel() {
            subscriber = exports.__subscriberRef.current;
            try {
              if (subscriber !== null) {
                subscriber.onWorkCanceled(wrappedInteractions, threadID);
              }
            } finally {
              wrappedInteractions.forEach(function(interaction) {
                interaction.__count--;
                if (subscriber && interaction.__count === 0) {
                  subscriber.onInteractionScheduledWorkCompleted(interaction);
                }
              });
            }
          };
          return wrapped;
        }
        var subscribers = null;
        {
          subscribers = /* @__PURE__ */ new Set();
        }
        function unstable_subscribe(subscriber) {
          {
            subscribers.add(subscriber);
            if (subscribers.size === 1) {
              exports.__subscriberRef.current = {
                onInteractionScheduledWorkCompleted,
                onInteractionTraced,
                onWorkCanceled,
                onWorkScheduled,
                onWorkStarted,
                onWorkStopped
              };
            }
          }
        }
        function unstable_unsubscribe(subscriber) {
          {
            subscribers.delete(subscriber);
            if (subscribers.size === 0) {
              exports.__subscriberRef.current = null;
            }
          }
        }
        function onInteractionTraced(interaction) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onInteractionTraced(interaction);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onInteractionScheduledWorkCompleted(interaction) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkScheduled(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkScheduled(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkStarted(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkStarted(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkStopped(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkStopped(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        function onWorkCanceled(interactions, threadID) {
          var didCatchError = false;
          var caughtError = null;
          subscribers.forEach(function(subscriber) {
            try {
              subscriber.onWorkCanceled(interactions, threadID);
            } catch (error) {
              if (!didCatchError) {
                didCatchError = true;
                caughtError = error;
              }
            }
          });
          if (didCatchError) {
            throw caughtError;
          }
        }
        exports.unstable_clear = unstable_clear;
        exports.unstable_getCurrent = unstable_getCurrent;
        exports.unstable_getThreadID = unstable_getThreadID;
        exports.unstable_subscribe = unstable_subscribe;
        exports.unstable_trace = unstable_trace;
        exports.unstable_unsubscribe = unstable_unsubscribe;
        exports.unstable_wrap = unstable_wrap;
      })();
    }
  }
});

// node_modules/scheduler/tracing.js
var require_tracing = __commonJS({
  "node_modules/scheduler/tracing.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_tracing_development();
    }
  }
});

// node_modules/react-dom/cjs/react-dom.development.js
var require_react_dom_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React2 = require_react();
        var _assign = require_object_assign();
        var Scheduler = require_scheduler();
        var tracing = require_tracing();
        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn(format) {
          {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            printWarning("warn", format, args);
          }
        }
        function error(format) {
          {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }
            printWarning("error", format, args);
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return "" + item;
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        if (!React2) {
          {
            throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
          }
        }
        var FunctionComponent = 0;
        var ClassComponent = 1;
        var IndeterminateComponent = 2;
        var HostRoot = 3;
        var HostPortal = 4;
        var HostComponent = 5;
        var HostText = 6;
        var Fragment = 7;
        var Mode = 8;
        var ContextConsumer = 9;
        var ContextProvider = 10;
        var ForwardRef = 11;
        var Profiler = 12;
        var SuspenseComponent = 13;
        var MemoComponent = 14;
        var SimpleMemoComponent = 15;
        var LazyComponent = 16;
        var IncompleteClassComponent = 17;
        var DehydratedFragment = 18;
        var SuspenseListComponent = 19;
        var FundamentalComponent = 20;
        var ScopeComponent = 21;
        var Block = 22;
        var OffscreenComponent = 23;
        var LegacyHiddenComponent = 24;
        var enableProfilerTimer = true;
        var enableFundamentalAPI = false;
        var enableNewReconciler = false;
        var warnAboutStringRefs = false;
        var allNativeEvents = /* @__PURE__ */ new Set();
        var registrationNameDependencies = {};
        var possibleRegistrationNames = {};
        function registerTwoPhaseEvent(registrationName, dependencies) {
          registerDirectEvent(registrationName, dependencies);
          registerDirectEvent(registrationName + "Capture", dependencies);
        }
        function registerDirectEvent(registrationName, dependencies) {
          {
            if (registrationNameDependencies[registrationName]) {
              error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
            }
          }
          registrationNameDependencies[registrationName] = dependencies;
          {
            var lowerCasedName = registrationName.toLowerCase();
            possibleRegistrationNames[lowerCasedName] = registrationName;
            if (registrationName === "onDoubleClick") {
              possibleRegistrationNames.ondblclick = registrationName;
            }
          }
          for (var i = 0; i < dependencies.length; i++) {
            allNativeEvents.add(dependencies[i]);
          }
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var ROOT_ATTRIBUTE_NAME = "data-reactroot";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
          if (value === null || typeof value === "undefined") {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value;
              case OVERLOADED_BOOLEAN:
                return value === false;
              case NUMERIC:
                return isNaN(value);
              case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
        });
        [
          "allowFullScreen",
          "async",
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
        });
        [
          "checked",
          "multiple",
          "muted",
          "selected"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
        });
        [
          "capture",
          "download"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
        });
        [
          "cols",
          "rows",
          "size",
          "span"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
        });
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        function getValueForProperty(node, name, expected, propertyInfo) {
          {
            if (propertyInfo.mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              return node[propertyName];
            } else {
              if (propertyInfo.sanitizeURL) {
                sanitizeURL("" + expected);
              }
              var attributeName = propertyInfo.attributeName;
              var stringValue = null;
              if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                  var value = node.getAttribute(attributeName);
                  if (value === "") {
                    return true;
                  }
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return value;
                  }
                  if (value === "" + expected) {
                    return expected;
                  }
                  return value;
                }
              } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return node.getAttribute(attributeName);
                }
                if (propertyInfo.type === BOOLEAN) {
                  return expected;
                }
                stringValue = node.getAttribute(attributeName);
              }
              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return stringValue === null ? expected : stringValue;
              } else if (stringValue === "" + expected) {
                return expected;
              } else {
                return stringValue;
              }
            }
          }
        }
        function getValueForAttribute(node, name, expected) {
          {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (isOpaqueHydratingObject(expected)) {
              return expected;
            }
            if (!node.hasAttribute(name)) {
              return expected === void 0 ? void 0 : null;
            }
            var value = node.getAttribute(name);
            if (value === "" + expected) {
              return expected;
            }
            return value;
          }
        }
        function setValueForProperty(node, name, value, isCustomComponentTag) {
          var propertyInfo = getPropertyInfo(name);
          if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
            return;
          }
          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
            value = null;
          }
          if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
              var _attributeName = name;
              if (value === null) {
                node.removeAttribute(_attributeName);
              } else {
                node.setAttribute(_attributeName, "" + value);
              }
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
              var type = propertyInfo.type;
              node[propertyName] = type === BOOLEAN ? false : "";
            } else {
              node[propertyName] = value;
            }
            return;
          }
          var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
          if (value === null) {
            node.removeAttribute(attributeName);
          } else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
              attributeValue = "";
            } else {
              {
                attributeValue = "" + value;
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL(attributeValue.toString());
              }
            }
            if (attributeNamespace) {
              node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            } else {
              node.setAttribute(attributeName, attributeValue);
            }
          }
        }
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: _assign({}, props, {
                  value: prevLog
                }),
                info: _assign({}, props, {
                  value: prevInfo
                }),
                warn: _assign({}, props, {
                  value: prevWarn
                }),
                error: _assign({}, props, {
                  value: prevError
                }),
                group: _assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: _assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: _assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        function describeFiber(fiber) {
          var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
          var source = fiber._debugSource;
          switch (fiber.tag) {
            case HostComponent:
              return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
              return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
              return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
              return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
              return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
              return describeFunctionComponentFrame(fiber.type.render);
            case Block:
              return describeFunctionComponentFrame(fiber.type._render);
            case ClassComponent:
              return describeClassComponentFrame(fiber.type);
            default:
              return "";
          }
        }
        function getStackByFiberInDevAndProd(workInProgress2) {
          try {
            var info = "";
            var node = workInProgress2;
            do {
              info += describeFiber(node);
              node = node.return;
            } while (node);
            return info;
          } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentName(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                return getComponentName(type.type);
              case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentName(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var current = null;
        var isRendering = false;
        function getCurrentFiberOwnerNameInDevOrNull() {
          {
            if (current === null) {
              return null;
            }
            var owner = current._debugOwner;
            if (owner !== null && typeof owner !== "undefined") {
              return getComponentName(owner.type);
            }
          }
          return null;
        }
        function getCurrentFiberStackInDev() {
          {
            if (current === null) {
              return "";
            }
            return getStackByFiberInDevAndProd(current);
          }
        }
        function resetCurrentFiber() {
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            current = null;
            isRendering = false;
          }
        }
        function setCurrentFiber(fiber) {
          {
            ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
            current = fiber;
            isRendering = false;
          }
        }
        function setIsRendering(rendering) {
          {
            isRendering = rendering;
          }
        }
        function getIsRendering() {
          {
            return isRendering;
          }
        }
        function toString(value) {
          return "" + value;
        }
        function getToStringValue(value) {
          switch (typeof value) {
            case "boolean":
            case "number":
            case "object":
            case "string":
            case "undefined":
              return value;
            default:
              return "";
          }
        }
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCheckable(elem) {
          var type = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
        }
        function getTracker(node) {
          return node._valueTracker;
        }
        function detachTracker(node) {
          node._valueTracker = null;
        }
        function getValueFromNode(node) {
          var value = "";
          if (!node) {
            return value;
          }
          if (isCheckable(node)) {
            value = node.checked ? "true" : "false";
          } else {
            value = node.value;
          }
          return value;
        }
        function trackValueOnNode(node) {
          var valueField = isCheckable(node) ? "checked" : "value";
          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
          var currentValue = "" + node[valueField];
          if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
            return;
          }
          var get2 = descriptor.get, set2 = descriptor.set;
          Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
              return get2.call(this);
            },
            set: function(value) {
              currentValue = "" + value;
              set2.call(this, value);
            }
          });
          Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
          });
          var tracker = {
            getValue: function() {
              return currentValue;
            },
            setValue: function(value) {
              currentValue = "" + value;
            },
            stopTracking: function() {
              detachTracker(node);
              delete node[valueField];
            }
          };
          return tracker;
        }
        function track(node) {
          if (getTracker(node)) {
            return;
          }
          node._valueTracker = trackValueOnNode(node);
        }
        function updateValueIfChanged(node) {
          if (!node) {
            return false;
          }
          var tracker = getTracker(node);
          if (!tracker) {
            return true;
          }
          var lastValue = tracker.getValue();
          var nextValue = getValueFromNode(node);
          if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
          }
          return false;
        }
        function getActiveElement(doc) {
          doc = doc || (typeof document !== "undefined" ? document : void 0);
          if (typeof doc === "undefined") {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e) {
            return doc.body;
          }
        }
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;
        function isControlled(props) {
          var usesChecked = props.type === "checkbox" || props.type === "radio";
          return usesChecked ? props.checked != null : props.value != null;
        }
        function getHostProps(element, props) {
          var node = element;
          var checked = props.checked;
          var hostProps = _assign({}, props, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: checked != null ? checked : node._wrapperState.initialChecked
          });
          return hostProps;
        }
        function initWrapperState(element, props) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
              error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnCheckedDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
              error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnValueDefaultValue = true;
            }
          }
          var node = element;
          var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
          node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
          };
        }
        function updateChecked(element, props) {
          var node = element;
          var checked = props.checked;
          if (checked != null) {
            setValueForProperty(node, "checked", checked, false);
          }
        }
        function updateWrapper(element, props) {
          var node = element;
          {
            var controlled = isControlled(props);
            if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
              error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnUncontrolledToControlled = true;
            }
            if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
              error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnControlledToUncontrolled = true;
            }
          }
          updateChecked(element, props);
          var value = getToStringValue(props.value);
          var type = props.type;
          if (value != null) {
            if (type === "number") {
              if (value === 0 && node.value === "" || node.value != value) {
                node.value = toString(value);
              }
            } else if (node.value !== toString(value)) {
              node.value = toString(value);
            }
          } else if (type === "submit" || type === "reset") {
            node.removeAttribute("value");
            return;
          }
          {
            if (props.hasOwnProperty("value")) {
              setDefaultValue(node, props.type, value);
            } else if (props.hasOwnProperty("defaultValue")) {
              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
            }
          }
          {
            if (props.checked == null && props.defaultChecked != null) {
              node.defaultChecked = !!props.defaultChecked;
            }
          }
        }
        function postMountWrapper(element, props, isHydrating2) {
          var node = element;
          if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset";
            if (isButton && (props.value === void 0 || props.value === null)) {
              return;
            }
            var initialValue = toString(node._wrapperState.initialValue);
            if (!isHydrating2) {
              {
                if (initialValue !== node.value) {
                  node.value = initialValue;
                }
              }
            }
            {
              node.defaultValue = initialValue;
            }
          }
          var name = node.name;
          if (name !== "") {
            node.name = "";
          }
          {
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !!node._wrapperState.initialChecked;
          }
          if (name !== "") {
            node.name = name;
          }
        }
        function restoreControlledState(element, props) {
          var node = element;
          updateWrapper(node, props);
          updateNamedCousins(node, props);
        }
        function updateNamedCousins(rootNode, props) {
          var name = props.name;
          if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for (var i = 0; i < group.length; i++) {
              var otherNode = group[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              var otherProps = getFiberCurrentPropsFromNode(otherNode);
              if (!otherProps) {
                {
                  throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                }
              }
              updateValueIfChanged(otherNode);
              updateWrapper(otherNode, otherProps);
            }
          }
        }
        function setDefaultValue(node, type, value) {
          if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) {
              node.defaultValue = toString(node._wrapperState.initialValue);
            } else if (node.defaultValue !== toString(value)) {
              node.defaultValue = toString(value);
            }
          }
        }
        var didWarnSelectedSetOnOption = false;
        var didWarnInvalidChild = false;
        function flattenChildren(children) {
          var content = "";
          React2.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
          });
          return content;
        }
        function validateProps(element, props) {
          {
            if (typeof props.children === "object" && props.children !== null) {
              React2.Children.forEach(props.children, function(child) {
                if (child == null) {
                  return;
                }
                if (typeof child === "string" || typeof child === "number") {
                  return;
                }
                if (typeof child.type !== "string") {
                  return;
                }
                if (!didWarnInvalidChild) {
                  didWarnInvalidChild = true;
                  error("Only strings and numbers are supported as <option> children.");
                }
              });
            }
            if (props.selected != null && !didWarnSelectedSetOnOption) {
              error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
              didWarnSelectedSetOnOption = true;
            }
          }
        }
        function postMountWrapper$1(element, props) {
          if (props.value != null) {
            element.setAttribute("value", toString(getToStringValue(props.value)));
          }
        }
        function getHostProps$1(element, props) {
          var hostProps = _assign({
            children: void 0
          }, props);
          var content = flattenChildren(props.children);
          if (content) {
            hostProps.children = content;
          }
          return hostProps;
        }
        var didWarnValueDefaultValue$1;
        {
          didWarnValueDefaultValue$1 = false;
        }
        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();
          if (ownerName) {
            return "\n\nCheck the render method of `" + ownerName + "`.";
          }
          return "";
        }
        var valuePropNames = ["value", "defaultValue"];
        function checkSelectPropTypes(props) {
          {
            checkControlledValueProps("select", props);
            for (var i = 0; i < valuePropNames.length; i++) {
              var propName = valuePropNames[i];
              if (props[propName] == null) {
                continue;
              }
              var isArray2 = Array.isArray(props[propName]);
              if (props.multiple && !isArray2) {
                error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
              } else if (!props.multiple && isArray2) {
                error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
              }
            }
          }
        }
        function updateOptions(node, multiple, propValue, setDefaultSelected) {
          var options2 = node.options;
          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i = 0; i < selectedValues.length; i++) {
              selectedValue["$" + selectedValues[i]] = true;
            }
            for (var _i = 0; _i < options2.length; _i++) {
              var selected = selectedValue.hasOwnProperty("$" + options2[_i].value);
              if (options2[_i].selected !== selected) {
                options2[_i].selected = selected;
              }
              if (selected && setDefaultSelected) {
                options2[_i].defaultSelected = true;
              }
            }
          } else {
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for (var _i2 = 0; _i2 < options2.length; _i2++) {
              if (options2[_i2].value === _selectedValue) {
                options2[_i2].selected = true;
                if (setDefaultSelected) {
                  options2[_i2].defaultSelected = true;
                }
                return;
              }
              if (defaultSelected === null && !options2[_i2].disabled) {
                defaultSelected = options2[_i2];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }
        function getHostProps$2(element, props) {
          return _assign({}, props, {
            value: void 0
          });
        }
        function initWrapperState$1(element, props) {
          var node = element;
          {
            checkSelectPropTypes(props);
          }
          node._wrapperState = {
            wasMultiple: !!props.multiple
          };
          {
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
              error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnValueDefaultValue$1 = true;
            }
          }
        }
        function postMountWrapper$2(element, props) {
          var node = element;
          node.multiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (props.defaultValue != null) {
            updateOptions(node, !!props.multiple, props.defaultValue, true);
          }
        }
        function postUpdateWrapper(element, props) {
          var node = element;
          var wasMultiple = node._wrapperState.wasMultiple;
          node._wrapperState.wasMultiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (wasMultiple !== !!props.multiple) {
            if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            } else {
              updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
            }
          }
        }
        function restoreControlledState$1(element, props) {
          var node = element;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          }
        }
        var didWarnValDefaultVal = false;
        function getHostProps$3(element, props) {
          var node = element;
          if (!(props.dangerouslySetInnerHTML == null)) {
            {
              throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
            }
          }
          var hostProps = _assign({}, props, {
            value: void 0,
            defaultValue: void 0,
            children: toString(node._wrapperState.initialValue)
          });
          return hostProps;
        }
        function initWrapperState$2(element, props) {
          var node = element;
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
              error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
              didWarnValDefaultVal = true;
            }
          }
          var initialValue = props.value;
          if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
              {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
              }
              {
                if (!(defaultValue == null)) {
                  {
                    throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                  }
                }
                if (Array.isArray(children)) {
                  if (!(children.length <= 1)) {
                    {
                      throw Error("<textarea> can only have at most one child.");
                    }
                  }
                  children = children[0];
                }
                defaultValue = children;
              }
            }
            if (defaultValue == null) {
              defaultValue = "";
            }
            initialValue = defaultValue;
          }
          node._wrapperState = {
            initialValue: getToStringValue(initialValue)
          };
        }
        function updateWrapper$1(element, props) {
          var node = element;
          var value = getToStringValue(props.value);
          var defaultValue = getToStringValue(props.defaultValue);
          if (value != null) {
            var newValue = toString(value);
            if (newValue !== node.value) {
              node.value = newValue;
            }
            if (props.defaultValue == null && node.defaultValue !== newValue) {
              node.defaultValue = newValue;
            }
          }
          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        }
        function postMountWrapper$3(element, props) {
          var node = element;
          var textContent = node.textContent;
          if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) {
              node.value = textContent;
            }
          }
        }
        function restoreControlledState$2(element, props) {
          updateWrapper$1(element, props);
        }
        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        var Namespaces = {
          html: HTML_NAMESPACE,
          mathml: MATH_NAMESPACE,
          svg: SVG_NAMESPACE
        };
        function getIntrinsicNamespace(type) {
          switch (type) {
            case "svg":
              return SVG_NAMESPACE;
            case "math":
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }
        function getChildNamespace(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
            return HTML_NAMESPACE;
          }
          return parentNamespace;
        }
        var createMicrosoftUnsafeLocalFunction = function(func) {
          if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
            return function(arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func;
          }
        };
        var reusableSVGContainer;
        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
          if (node.namespaceURI === Namespaces.svg) {
            if (!("innerHTML" in node)) {
              reusableSVGContainer = reusableSVGContainer || document.createElement("div");
              reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
              var svgNode = reusableSVGContainer.firstChild;
              while (node.firstChild) {
                node.removeChild(node.firstChild);
              }
              while (svgNode.firstChild) {
                node.appendChild(svgNode.firstChild);
              }
              return;
            }
          }
          node.innerHTML = html;
        });
        var ELEMENT_NODE = 1;
        var TEXT_NODE = 3;
        var COMMENT_NODE = 8;
        var DOCUMENT_NODE = 9;
        var DOCUMENT_FRAGMENT_NODE = 11;
        var setTextContent = function(node, text) {
          if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node.textContent = text;
        };
        var shorthandToLonghand = {
          animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
          background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
          backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
          border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
          borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
          borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
          borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
          borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
          borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
          borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
          borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
          borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
          borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
          borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
          borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
          columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
          columns: ["columnCount", "columnWidth"],
          flex: ["flexBasis", "flexGrow", "flexShrink"],
          flexFlow: ["flexDirection", "flexWrap"],
          font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
          fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
          gap: ["columnGap", "rowGap"],
          grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
          gridColumn: ["gridColumnEnd", "gridColumnStart"],
          gridColumnGap: ["columnGap"],
          gridGap: ["columnGap", "rowGap"],
          gridRow: ["gridRowEnd", "gridRowStart"],
          gridRowGap: ["rowGap"],
          gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
          margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
          marker: ["markerEnd", "markerMid", "markerStart"],
          mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
          maskPosition: ["maskPositionX", "maskPositionY"],
          outline: ["outlineColor", "outlineStyle", "outlineWidth"],
          overflow: ["overflowX", "overflowY"],
          padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
          placeContent: ["alignContent", "justifyContent"],
          placeItems: ["alignItems", "justifyItems"],
          placeSelf: ["alignSelf", "justifySelf"],
          textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
          textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
          transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
          wordWrap: ["overflowWrap"]
        };
        var isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        function dangerousStyleValue(name, value, isCustomProperty) {
          var isEmpty = value == null || typeof value === "boolean" || value === "";
          if (isEmpty) {
            return "";
          }
          if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
            return value + "px";
          }
          return ("" + value).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported style property %s. Did you mean %s?", name, camelize(name.replace(msPattern$1, "ms-")));
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        function createDangerousStringForStyles(styles) {
          {
            var serialized = "";
            var delimiter = "";
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
              }
            }
            return serialized || null;
          }
        }
        function setValueForStyles(node, styles) {
          var style2 = node.style;
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf("--") === 0;
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styles[styleName]);
              }
            }
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") {
              styleName = "cssFloat";
            }
            if (isCustomProperty) {
              style2.setProperty(styleName, styleValue);
            } else {
              style2[styleName] = styleValue;
            }
          }
        }
        function isValueEmpty(value) {
          return value == null || typeof value === "boolean" || value === "";
        }
        function expandShorthandMap(styles) {
          var expanded = {};
          for (var key in styles) {
            var longhands = shorthandToLonghand[key] || [key];
            for (var i = 0; i < longhands.length; i++) {
              expanded[longhands[i]] = key;
            }
          }
          return expanded;
        }
        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
          {
            if (!nextStyles) {
              return;
            }
            var expandedUpdates = expandShorthandMap(styleUpdates);
            var expandedStyles = expandShorthandMap(nextStyles);
            var warnedAbout = {};
            for (var key in expandedUpdates) {
              var originalKey = expandedUpdates[key];
              var correctOriginalKey = expandedStyles[key];
              if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) {
                  continue;
                }
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
              }
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };
        var voidElementTags = _assign({
          menuitem: true
        }, omittedCloseTags);
        var HTML = "__html";
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
              {
                throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              }
            }
          }
          if (props.dangerouslySetInnerHTML != null) {
            if (!(props.children == null)) {
              {
                throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
              }
            }
            if (!(typeof props.dangerouslySetInnerHTML === "object" && HTML in props.dangerouslySetInnerHTML)) {
              {
                throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
              }
            }
          }
          {
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
          }
          if (!(props.style == null || typeof props.style === "object")) {
            {
              throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var possibleStandardNames = {
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var ariaProperties = {
          "aria-current": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          "aria-hidden": 0,
          "aria-invalid": 0,
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var _hasOwnProperty = Object.prototype.hasOwnProperty;
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies2.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
              if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
        var IS_NON_DELEGATED = 1 << 1;
        var IS_CAPTURE_PHASE = 1 << 2;
        var IS_REPLAYED = 1 << 4;
        var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }
          return target.nodeType === TEXT_NODE ? target.parentNode : target;
        }
        var restoreImpl = null;
        var restoreTarget = null;
        var restoreQueue = null;
        function restoreStateOfTarget(target) {
          var internalInstance = getInstanceFromNode(target);
          if (!internalInstance) {
            return;
          }
          if (!(typeof restoreImpl === "function")) {
            {
              throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          var stateNode = internalInstance.stateNode;
          if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
          }
        }
        function setRestoreImplementation(impl) {
          restoreImpl = impl;
        }
        function enqueueStateRestore(target) {
          if (restoreTarget) {
            if (restoreQueue) {
              restoreQueue.push(target);
            } else {
              restoreQueue = [target];
            }
          } else {
            restoreTarget = target;
          }
        }
        function needsStateRestore() {
          return restoreTarget !== null || restoreQueue !== null;
        }
        function restoreStateIfNeeded() {
          if (!restoreTarget) {
            return;
          }
          var target = restoreTarget;
          var queuedTargets = restoreQueue;
          restoreTarget = null;
          restoreQueue = null;
          restoreStateOfTarget(target);
          if (queuedTargets) {
            for (var i = 0; i < queuedTargets.length; i++) {
              restoreStateOfTarget(queuedTargets[i]);
            }
          }
        }
        var batchedUpdatesImpl = function(fn, bookkeeping) {
          return fn(bookkeeping);
        };
        var discreteUpdatesImpl = function(fn, a, b, c, d) {
          return fn(a, b, c, d);
        };
        var flushDiscreteUpdatesImpl = function() {
        };
        var batchedEventUpdatesImpl = batchedUpdatesImpl;
        var isInsideEventHandler = false;
        var isBatchingEventUpdates = false;
        function finishEventHandler() {
          var controlledComponentsHavePendingUpdates = needsStateRestore();
          if (controlledComponentsHavePendingUpdates) {
            flushDiscreteUpdatesImpl();
            restoreStateIfNeeded();
          }
        }
        function batchedUpdates(fn, bookkeeping) {
          if (isInsideEventHandler) {
            return fn(bookkeeping);
          }
          isInsideEventHandler = true;
          try {
            return batchedUpdatesImpl(fn, bookkeeping);
          } finally {
            isInsideEventHandler = false;
            finishEventHandler();
          }
        }
        function batchedEventUpdates(fn, a, b) {
          if (isBatchingEventUpdates) {
            return fn(a, b);
          }
          isBatchingEventUpdates = true;
          try {
            return batchedEventUpdatesImpl(fn, a, b);
          } finally {
            isBatchingEventUpdates = false;
            finishEventHandler();
          }
        }
        function discreteUpdates(fn, a, b, c, d) {
          var prevIsInsideEventHandler = isInsideEventHandler;
          isInsideEventHandler = true;
          try {
            return discreteUpdatesImpl(fn, a, b, c, d);
          } finally {
            isInsideEventHandler = prevIsInsideEventHandler;
            if (!isInsideEventHandler) {
              finishEventHandler();
            }
          }
        }
        function flushDiscreteUpdatesIfNeeded(timeStamp) {
          {
            if (!isInsideEventHandler) {
              flushDiscreteUpdatesImpl();
            }
          }
        }
        function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
          batchedUpdatesImpl = _batchedUpdatesImpl;
          discreteUpdatesImpl = _discreteUpdatesImpl;
          flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
          batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
        }
        function isInteractive(tag) {
          return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
        }
        function shouldPreventMouseEvent(name, type, props) {
          switch (name) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }
        function getListener(inst, registrationName) {
          var stateNode = inst.stateNode;
          if (stateNode === null) {
            return null;
          }
          var props = getFiberCurrentPropsFromNode(stateNode);
          if (props === null) {
            return null;
          }
          var listener = props[registrationName];
          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
            return null;
          }
          if (!(!listener || typeof listener === "function")) {
            {
              throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
            }
          }
          return listener;
        }
        var passiveBrowserEventsSupported = false;
        if (canUseDOM) {
          try {
            var options = {};
            Object.defineProperty(options, "passive", {
              get: function() {
                passiveBrowserEventsSupported = true;
              }
            });
            window.addEventListener("test", options, options);
            window.removeEventListener("test", options, options);
          } catch (e) {
            passiveBrowserEventsSupported = false;
          }
        }
        function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func.apply(context, funcArgs);
          } catch (error2) {
            this.onError(error2);
          }
        }
        var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
        {
          if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
            var fakeNode = document.createElement("react");
            invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
              if (!(typeof document !== "undefined")) {
                {
                  throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
                }
              }
              var evt = document.createEvent("Event");
              var didCall = false;
              var didError = true;
              var windowEvent = window.event;
              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
              function restoreAfterDispatch() {
                fakeNode.removeEventListener(evtType, callCallback2, false);
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                  window.event = windowEvent;
                }
              }
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback2() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
              }
              var error2;
              var didSetError = false;
              var isCrossOriginError = false;
              function handleWindowError(event) {
                error2 = event.error;
                didSetError = true;
                if (error2 === null && event.colno === 0 && event.lineno === 0) {
                  isCrossOriginError = true;
                }
                if (event.defaultPrevented) {
                  if (error2 != null && typeof error2 === "object") {
                    try {
                      error2._suppressLogging = true;
                    } catch (inner) {
                    }
                  }
                }
              }
              var evtType = "react-" + (name ? name : "invokeguardedcallback");
              window.addEventListener("error", handleWindowError);
              fakeNode.addEventListener(evtType, callCallback2, false);
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              if (windowEventDescriptor) {
                Object.defineProperty(window, "event", windowEventDescriptor);
              }
              if (didCall && didError) {
                if (!didSetError) {
                  error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                } else if (isCrossOriginError) {
                  error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                }
                this.onError(error2);
              }
              window.removeEventListener("error", handleWindowError);
              if (!didCall) {
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
              }
            };
          }
        }
        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
        var hasError = false;
        var caughtError = null;
        var hasRethrowError = false;
        var rethrowError = null;
        var reporter = {
          onError: function(error2) {
            hasError = true;
            caughtError = error2;
          }
        };
        function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
          hasError = false;
          caughtError = null;
          invokeGuardedCallbackImpl$1.apply(reporter, arguments);
        }
        function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
          invokeGuardedCallback.apply(this, arguments);
          if (hasError) {
            var error2 = clearCaughtError();
            if (!hasRethrowError) {
              hasRethrowError = true;
              rethrowError = error2;
            }
          }
        }
        function rethrowCaughtError() {
          if (hasRethrowError) {
            var error2 = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error2;
          }
        }
        function hasCaughtError() {
          return hasError;
        }
        function clearCaughtError() {
          if (hasError) {
            var error2 = caughtError;
            hasError = false;
            caughtError = null;
            return error2;
          } else {
            {
              {
                throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
        }
        function get(key) {
          return key._reactInternals;
        }
        function has(key) {
          return key._reactInternals !== void 0;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var NoFlags = 0;
        var PerformedWork = 1;
        var Placement = 2;
        var Update = 4;
        var PlacementAndUpdate = 6;
        var Deletion = 8;
        var ContentReset = 16;
        var Callback = 32;
        var DidCapture = 64;
        var Ref = 128;
        var Snapshot = 256;
        var Passive = 512;
        var PassiveUnmountPendingDev = 8192;
        var Hydrating = 1024;
        var HydratingAndUpdate = 1028;
        var LifecycleEffectMask = 932;
        var HostEffectMask = 2047;
        var Incomplete = 2048;
        var ShouldCapture = 4096;
        var ForceUpdateForLegacySuspense = 16384;
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        function getNearestMountedFiber(fiber) {
          var node = fiber;
          var nearestMounted = fiber;
          if (!fiber.alternate) {
            var nextNode = node;
            do {
              node = nextNode;
              if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                nearestMounted = node.return;
              }
              nextNode = node.return;
            } while (nextNode);
          } else {
            while (node.return) {
              node = node.return;
            }
          }
          if (node.tag === HostRoot) {
            return nearestMounted;
          }
          return null;
        }
        function getSuspenseInstanceFromFiber(fiber) {
          if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
              var current2 = fiber.alternate;
              if (current2 !== null) {
                suspenseState = current2.memoizedState;
              }
            }
            if (suspenseState !== null) {
              return suspenseState.dehydrated;
            }
          }
          return null;
        }
        function getContainerFromFiber(fiber) {
          return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
        }
        function isFiberMounted(fiber) {
          return getNearestMountedFiber(fiber) === fiber;
        }
        function isMounted(component) {
          {
            var owner = ReactCurrentOwner.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance = ownerFiber.stateNode;
              if (!instance._warnedAboutRefsInRender) {
                error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(ownerFiber.type) || "A component");
              }
              instance._warnedAboutRefsInRender = true;
            }
          }
          var fiber = get(component);
          if (!fiber) {
            return false;
          }
          return getNearestMountedFiber(fiber) === fiber;
        }
        function assertIsMounted(fiber) {
          if (!(getNearestMountedFiber(fiber) === fiber)) {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
        }
        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            var nearestMounted = getNearestMountedFiber(fiber);
            if (!(nearestMounted !== null)) {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
            if (nearestMounted !== fiber) {
              return null;
            }
            return fiber;
          }
          var a = fiber;
          var b = alternate;
          while (true) {
            var parentA = a.return;
            if (parentA === null) {
              break;
            }
            var parentB = parentA.alternate;
            if (parentB === null) {
              var nextParent = parentA.return;
              if (nextParent !== null) {
                a = b = nextParent;
                continue;
              }
              break;
            }
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a) {
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b) {
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              {
                {
                  throw Error("Unable to find node on an unmounted component.");
                }
              }
            }
            if (a.return !== b.return) {
              a = parentA;
              b = parentB;
            } else {
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a) {
                  didFindChild = true;
                  a = parentA;
                  b = parentB;
                  break;
                }
                if (_child === b) {
                  didFindChild = true;
                  b = parentA;
                  a = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                _child = parentB.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentB;
                    b = parentA;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentB;
                    a = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  {
                    throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                  }
                }
              }
            }
            if (!(a.alternate === b)) {
              {
                throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          if (!(a.tag === HostRoot)) {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
          if (a.stateNode.current === a) {
            return fiber;
          }
          return alternate;
        }
        function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText) {
              return node;
            } else if (node.child) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node.return || node.return === currentParent) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI) {
              return node;
            } else if (node.child && node.tag !== HostPortal) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node.return || node.return === currentParent) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        function doesFiberContain(parentFiber, childFiber) {
          var node = childFiber;
          var parentFiberAlternate = parentFiber.alternate;
          while (node !== null) {
            if (node === parentFiber || node === parentFiberAlternate) {
              return true;
            }
            node = node.return;
          }
          return false;
        }
        var attemptUserBlockingHydration;
        function setAttemptUserBlockingHydration(fn) {
          attemptUserBlockingHydration = fn;
        }
        var attemptContinuousHydration;
        function setAttemptContinuousHydration(fn) {
          attemptContinuousHydration = fn;
        }
        var attemptHydrationAtCurrentPriority;
        function setAttemptHydrationAtCurrentPriority(fn) {
          attemptHydrationAtCurrentPriority = fn;
        }
        var attemptHydrationAtPriority;
        function setAttemptHydrationAtPriority(fn) {
          attemptHydrationAtPriority = fn;
        }
        var hasScheduledReplayAttempt = false;
        var queuedDiscreteEvents = [];
        var queuedFocus = null;
        var queuedDrag = null;
        var queuedMouse = null;
        var queuedPointers = /* @__PURE__ */ new Map();
        var queuedPointerCaptures = /* @__PURE__ */ new Map();
        var queuedExplicitHydrationTargets = [];
        function hasQueuedDiscreteEvents() {
          return queuedDiscreteEvents.length > 0;
        }
        var discreteReplayableEvents = [
          "mousedown",
          "mouseup",
          "touchcancel",
          "touchend",
          "touchstart",
          "auxclick",
          "dblclick",
          "pointercancel",
          "pointerdown",
          "pointerup",
          "dragend",
          "dragstart",
          "drop",
          "compositionend",
          "compositionstart",
          "keydown",
          "keypress",
          "keyup",
          "input",
          "textInput",
          "copy",
          "cut",
          "paste",
          "click",
          "change",
          "contextmenu",
          "reset",
          "submit"
        ];
        function isReplayableDiscreteEvent(eventType) {
          return discreteReplayableEvents.indexOf(eventType) > -1;
        }
        function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return {
            blockedOn,
            domEventName,
            eventSystemFlags: eventSystemFlags | IS_REPLAYED,
            nativeEvent,
            targetContainers: [targetContainer]
          };
        }
        function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
          queuedDiscreteEvents.push(queuedEvent);
        }
        function clearIfContinuousEvent(domEventName, nativeEvent) {
          switch (domEventName) {
            case "focusin":
            case "focusout":
              queuedFocus = null;
              break;
            case "dragenter":
            case "dragleave":
              queuedDrag = null;
              break;
            case "mouseover":
            case "mouseout":
              queuedMouse = null;
              break;
            case "pointerover":
            case "pointerout": {
              var pointerId = nativeEvent.pointerId;
              queuedPointers.delete(pointerId);
              break;
            }
            case "gotpointercapture":
            case "lostpointercapture": {
              var _pointerId = nativeEvent.pointerId;
              queuedPointerCaptures.delete(_pointerId);
              break;
            }
          }
        }
        function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
              var _fiber2 = getInstanceFromNode(blockedOn);
              if (_fiber2 !== null) {
                attemptContinuousHydration(_fiber2);
              }
            }
            return queuedEvent;
          }
          existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
          var targetContainers = existingQueuedEvent.targetContainers;
          if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
            targetContainers.push(targetContainer);
          }
          return existingQueuedEvent;
        }
        function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          switch (domEventName) {
            case "focusin": {
              var focusEvent = nativeEvent;
              queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
              return true;
            }
            case "dragenter": {
              var dragEvent = nativeEvent;
              queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
              return true;
            }
            case "mouseover": {
              var mouseEvent = nativeEvent;
              queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
              return true;
            }
            case "pointerover": {
              var pointerEvent = nativeEvent;
              var pointerId = pointerEvent.pointerId;
              queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
              return true;
            }
            case "gotpointercapture": {
              var _pointerEvent = nativeEvent;
              var _pointerId2 = _pointerEvent.pointerId;
              queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
              return true;
            }
          }
          return false;
        }
        function attemptExplicitHydrationTarget(queuedTarget) {
          var targetInst = getClosestInstanceFromNode(queuedTarget.target);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  queuedTarget.blockedOn = instance;
                  attemptHydrationAtPriority(queuedTarget.lanePriority, function() {
                    Scheduler.unstable_runWithPriority(queuedTarget.priority, function() {
                      attemptHydrationAtCurrentPriority(nearestMounted);
                    });
                  });
                  return;
                }
              } else if (tag === HostRoot) {
                var root2 = nearestMounted.stateNode;
                if (root2.hydrate) {
                  queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                  return;
                }
              }
            }
          }
          queuedTarget.blockedOn = null;
        }
        function attemptReplayContinuousQueuedEvent(queuedEvent) {
          if (queuedEvent.blockedOn !== null) {
            return false;
          }
          var targetContainers = queuedEvent.targetContainers;
          while (targetContainers.length > 0) {
            var targetContainer = targetContainers[0];
            var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn !== null) {
              var _fiber3 = getInstanceFromNode(nextBlockedOn);
              if (_fiber3 !== null) {
                attemptContinuousHydration(_fiber3);
              }
              queuedEvent.blockedOn = nextBlockedOn;
              return false;
            }
            targetContainers.shift();
          }
          return true;
        }
        function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
          if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
            map.delete(key);
          }
        }
        function replayUnblockedEvents() {
          hasScheduledReplayAttempt = false;
          while (queuedDiscreteEvents.length > 0) {
            var nextDiscreteEvent = queuedDiscreteEvents[0];
            if (nextDiscreteEvent.blockedOn !== null) {
              var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);
              if (_fiber4 !== null) {
                attemptUserBlockingHydration(_fiber4);
              }
              break;
            }
            var targetContainers = nextDiscreteEvent.targetContainers;
            while (targetContainers.length > 0) {
              var targetContainer = targetContainers[0];
              var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);
              if (nextBlockedOn !== null) {
                nextDiscreteEvent.blockedOn = nextBlockedOn;
                break;
              }
              targetContainers.shift();
            }
            if (nextDiscreteEvent.blockedOn === null) {
              queuedDiscreteEvents.shift();
            }
          }
          if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
            queuedFocus = null;
          }
          if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
            queuedDrag = null;
          }
          if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
            queuedMouse = null;
          }
          queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
          queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
        }
        function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
              hasScheduledReplayAttempt = true;
              Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
          }
        }
        function retryIfBlockedOn(unblocked) {
          if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
            for (var i = 1; i < queuedDiscreteEvents.length; i++) {
              var queuedEvent = queuedDiscreteEvents[i];
              if (queuedEvent.blockedOn === unblocked) {
                queuedEvent.blockedOn = null;
              }
            }
          }
          if (queuedFocus !== null) {
            scheduleCallbackIfUnblocked(queuedFocus, unblocked);
          }
          if (queuedDrag !== null) {
            scheduleCallbackIfUnblocked(queuedDrag, unblocked);
          }
          if (queuedMouse !== null) {
            scheduleCallbackIfUnblocked(queuedMouse, unblocked);
          }
          var unblock = function(queuedEvent2) {
            return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
          };
          queuedPointers.forEach(unblock);
          queuedPointerCaptures.forEach(unblock);
          for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) {
              queuedTarget.blockedOn = null;
            }
          }
          while (queuedExplicitHydrationTargets.length > 0) {
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) {
              break;
            } else {
              attemptExplicitHydrationTarget(nextExplicitTarget);
              if (nextExplicitTarget.blockedOn === null) {
                queuedExplicitHydrationTargets.shift();
              }
            }
          }
        }
        var DiscreteEvent = 0;
        var UserBlockingEvent = 1;
        var ContinuousEvent = 2;
        function makePrefixMap(styleProp, eventName) {
          var prefixes2 = {};
          prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes2["Webkit" + styleProp] = "webkit" + eventName;
          prefixes2["Moz" + styleProp] = "moz" + eventName;
          return prefixes2;
        }
        var vendorPrefixes = {
          animationend: makePrefixMap("Animation", "AnimationEnd"),
          animationiteration: makePrefixMap("Animation", "AnimationIteration"),
          animationstart: makePrefixMap("Animation", "AnimationStart"),
          transitionend: makePrefixMap("Transition", "TransitionEnd")
        };
        var prefixedEventNames = {};
        var style = {};
        if (canUseDOM) {
          style = document.createElement("div").style;
          if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }
          if (!("TransitionEvent" in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }
          var prefixMap = vendorPrefixes[eventName];
          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }
          return eventName;
        }
        var ANIMATION_END = getVendorPrefixedEventName("animationend");
        var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
        var ANIMATION_START = getVendorPrefixedEventName("animationstart");
        var TRANSITION_END = getVendorPrefixedEventName("transitionend");
        var topLevelEventsToReactNames = /* @__PURE__ */ new Map();
        var eventPriorities = /* @__PURE__ */ new Map();
        var discreteEventPairsForSimpleEventPlugin = [
          "cancel",
          "cancel",
          "click",
          "click",
          "close",
          "close",
          "contextmenu",
          "contextMenu",
          "copy",
          "copy",
          "cut",
          "cut",
          "auxclick",
          "auxClick",
          "dblclick",
          "doubleClick",
          "dragend",
          "dragEnd",
          "dragstart",
          "dragStart",
          "drop",
          "drop",
          "focusin",
          "focus",
          "focusout",
          "blur",
          "input",
          "input",
          "invalid",
          "invalid",
          "keydown",
          "keyDown",
          "keypress",
          "keyPress",
          "keyup",
          "keyUp",
          "mousedown",
          "mouseDown",
          "mouseup",
          "mouseUp",
          "paste",
          "paste",
          "pause",
          "pause",
          "play",
          "play",
          "pointercancel",
          "pointerCancel",
          "pointerdown",
          "pointerDown",
          "pointerup",
          "pointerUp",
          "ratechange",
          "rateChange",
          "reset",
          "reset",
          "seeked",
          "seeked",
          "submit",
          "submit",
          "touchcancel",
          "touchCancel",
          "touchend",
          "touchEnd",
          "touchstart",
          "touchStart",
          "volumechange",
          "volumeChange"
        ];
        var otherDiscreteEvents = ["change", "selectionchange", "textInput", "compositionstart", "compositionend", "compositionupdate"];
        var userBlockingPairsForSimpleEventPlugin = ["drag", "drag", "dragenter", "dragEnter", "dragexit", "dragExit", "dragleave", "dragLeave", "dragover", "dragOver", "mousemove", "mouseMove", "mouseout", "mouseOut", "mouseover", "mouseOver", "pointermove", "pointerMove", "pointerout", "pointerOut", "pointerover", "pointerOver", "scroll", "scroll", "toggle", "toggle", "touchmove", "touchMove", "wheel", "wheel"];
        var continuousPairsForSimpleEventPlugin = ["abort", "abort", ANIMATION_END, "animationEnd", ANIMATION_ITERATION, "animationIteration", ANIMATION_START, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", TRANSITION_END, "transitionEnd", "waiting", "waiting"];
        function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
          for (var i = 0; i < eventTypes.length; i += 2) {
            var topEvent = eventTypes[i];
            var event = eventTypes[i + 1];
            var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
            var reactName = "on" + capitalizedEvent;
            eventPriorities.set(topEvent, priority);
            topLevelEventsToReactNames.set(topEvent, reactName);
            registerTwoPhaseEvent(reactName, [topEvent]);
          }
        }
        function setEventPriorities(eventTypes, priority) {
          for (var i = 0; i < eventTypes.length; i++) {
            eventPriorities.set(eventTypes[i], priority);
          }
        }
        function getEventPriorityForPluginSystem(domEventName) {
          var priority = eventPriorities.get(domEventName);
          return priority === void 0 ? ContinuousEvent : priority;
        }
        function registerSimpleEvents() {
          registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
          registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
          registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
          setEventPriorities(otherDiscreteEvents, DiscreteEvent);
        }
        var Scheduler_now = Scheduler.unstable_now;
        {
          if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
            {
              throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
            }
          }
        }
        var ImmediatePriority = 99;
        var UserBlockingPriority = 98;
        var NormalPriority = 97;
        var LowPriority = 96;
        var IdlePriority = 95;
        var NoPriority = 90;
        var initialTimeMs = Scheduler_now();
        var SyncLanePriority = 15;
        var SyncBatchedLanePriority = 14;
        var InputDiscreteHydrationLanePriority = 13;
        var InputDiscreteLanePriority = 12;
        var InputContinuousHydrationLanePriority = 11;
        var InputContinuousLanePriority = 10;
        var DefaultHydrationLanePriority = 9;
        var DefaultLanePriority = 8;
        var TransitionHydrationPriority = 7;
        var TransitionPriority = 6;
        var RetryLanePriority = 5;
        var SelectiveHydrationLanePriority = 4;
        var IdleHydrationLanePriority = 3;
        var IdleLanePriority = 2;
        var OffscreenLanePriority = 1;
        var NoLanePriority = 0;
        var TotalLanes = 31;
        var NoLanes = 0;
        var NoLane = 0;
        var SyncLane = 1;
        var SyncBatchedLane = 2;
        var InputDiscreteHydrationLane = 4;
        var InputDiscreteLanes = 24;
        var InputContinuousHydrationLane = 32;
        var InputContinuousLanes = 192;
        var DefaultHydrationLane = 256;
        var DefaultLanes = 3584;
        var TransitionHydrationLane = 4096;
        var TransitionLanes = 4186112;
        var RetryLanes = 62914560;
        var SomeRetryLane = 33554432;
        var SelectiveHydrationLane = 67108864;
        var NonIdleLanes = 134217727;
        var IdleHydrationLane = 134217728;
        var IdleLanes = 805306368;
        var OffscreenLane = 1073741824;
        var NoTimestamp = -1;
        function setCurrentUpdateLanePriority(newLanePriority) {
        }
        var return_highestLanePriority = DefaultLanePriority;
        function getHighestPriorityLanes(lanes) {
          if ((SyncLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncLanePriority;
            return SyncLane;
          }
          if ((SyncBatchedLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncBatchedLanePriority;
            return SyncBatchedLane;
          }
          if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
            return_highestLanePriority = InputDiscreteHydrationLanePriority;
            return InputDiscreteHydrationLane;
          }
          var inputDiscreteLanes = InputDiscreteLanes & lanes;
          if (inputDiscreteLanes !== NoLanes) {
            return_highestLanePriority = InputDiscreteLanePriority;
            return inputDiscreteLanes;
          }
          if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
            return_highestLanePriority = InputContinuousHydrationLanePriority;
            return InputContinuousHydrationLane;
          }
          var inputContinuousLanes = InputContinuousLanes & lanes;
          if (inputContinuousLanes !== NoLanes) {
            return_highestLanePriority = InputContinuousLanePriority;
            return inputContinuousLanes;
          }
          if ((lanes & DefaultHydrationLane) !== NoLanes) {
            return_highestLanePriority = DefaultHydrationLanePriority;
            return DefaultHydrationLane;
          }
          var defaultLanes = DefaultLanes & lanes;
          if (defaultLanes !== NoLanes) {
            return_highestLanePriority = DefaultLanePriority;
            return defaultLanes;
          }
          if ((lanes & TransitionHydrationLane) !== NoLanes) {
            return_highestLanePriority = TransitionHydrationPriority;
            return TransitionHydrationLane;
          }
          var transitionLanes = TransitionLanes & lanes;
          if (transitionLanes !== NoLanes) {
            return_highestLanePriority = TransitionPriority;
            return transitionLanes;
          }
          var retryLanes = RetryLanes & lanes;
          if (retryLanes !== NoLanes) {
            return_highestLanePriority = RetryLanePriority;
            return retryLanes;
          }
          if (lanes & SelectiveHydrationLane) {
            return_highestLanePriority = SelectiveHydrationLanePriority;
            return SelectiveHydrationLane;
          }
          if ((lanes & IdleHydrationLane) !== NoLanes) {
            return_highestLanePriority = IdleHydrationLanePriority;
            return IdleHydrationLane;
          }
          var idleLanes = IdleLanes & lanes;
          if (idleLanes !== NoLanes) {
            return_highestLanePriority = IdleLanePriority;
            return idleLanes;
          }
          if ((OffscreenLane & lanes) !== NoLanes) {
            return_highestLanePriority = OffscreenLanePriority;
            return OffscreenLane;
          }
          {
            error("Should have found matching lanes. This is a bug in React.");
          }
          return_highestLanePriority = DefaultLanePriority;
          return lanes;
        }
        function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
          switch (schedulerPriorityLevel) {
            case ImmediatePriority:
              return SyncLanePriority;
            case UserBlockingPriority:
              return InputContinuousLanePriority;
            case NormalPriority:
            case LowPriority:
              return DefaultLanePriority;
            case IdlePriority:
              return IdleLanePriority;
            default:
              return NoLanePriority;
          }
        }
        function lanePriorityToSchedulerPriority(lanePriority) {
          switch (lanePriority) {
            case SyncLanePriority:
            case SyncBatchedLanePriority:
              return ImmediatePriority;
            case InputDiscreteHydrationLanePriority:
            case InputDiscreteLanePriority:
            case InputContinuousHydrationLanePriority:
            case InputContinuousLanePriority:
              return UserBlockingPriority;
            case DefaultHydrationLanePriority:
            case DefaultLanePriority:
            case TransitionHydrationPriority:
            case TransitionPriority:
            case SelectiveHydrationLanePriority:
            case RetryLanePriority:
              return NormalPriority;
            case IdleHydrationLanePriority:
            case IdleLanePriority:
            case OffscreenLanePriority:
              return IdlePriority;
            case NoLanePriority:
              return NoPriority;
            default: {
              {
                throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
              }
            }
          }
        }
        function getNextLanes(root2, wipLanes) {
          var pendingLanes = root2.pendingLanes;
          if (pendingLanes === NoLanes) {
            return_highestLanePriority = NoLanePriority;
            return NoLanes;
          }
          var nextLanes = NoLanes;
          var nextLanePriority = NoLanePriority;
          var expiredLanes = root2.expiredLanes;
          var suspendedLanes = root2.suspendedLanes;
          var pingedLanes = root2.pingedLanes;
          if (expiredLanes !== NoLanes) {
            nextLanes = expiredLanes;
            nextLanePriority = return_highestLanePriority = SyncLanePriority;
          } else {
            var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
            if (nonIdlePendingLanes !== NoLanes) {
              var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
              if (nonIdleUnblockedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
                nextLanePriority = return_highestLanePriority;
              } else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                  nextLanePriority = return_highestLanePriority;
                }
              }
            } else {
              var unblockedLanes = pendingLanes & ~suspendedLanes;
              if (unblockedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(unblockedLanes);
                nextLanePriority = return_highestLanePriority;
              } else {
                if (pingedLanes !== NoLanes) {
                  nextLanes = getHighestPriorityLanes(pingedLanes);
                  nextLanePriority = return_highestLanePriority;
                }
              }
            }
          }
          if (nextLanes === NoLanes) {
            return NoLanes;
          }
          nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes);
          if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {
            getHighestPriorityLanes(wipLanes);
            var wipLanePriority = return_highestLanePriority;
            if (nextLanePriority <= wipLanePriority) {
              return wipLanes;
            } else {
              return_highestLanePriority = nextLanePriority;
            }
          }
          var entangledLanes = root2.entangledLanes;
          if (entangledLanes !== NoLanes) {
            var entanglements = root2.entanglements;
            var lanes = nextLanes & entangledLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              nextLanes |= entanglements[index2];
              lanes &= ~lane;
            }
          }
          return nextLanes;
        }
        function getMostRecentEventTime(root2, lanes) {
          var eventTimes = root2.eventTimes;
          var mostRecentEventTime = NoTimestamp;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var eventTime = eventTimes[index2];
            if (eventTime > mostRecentEventTime) {
              mostRecentEventTime = eventTime;
            }
            lanes &= ~lane;
          }
          return mostRecentEventTime;
        }
        function computeExpirationTime(lane, currentTime) {
          getHighestPriorityLanes(lane);
          var priority = return_highestLanePriority;
          if (priority >= InputContinuousLanePriority) {
            return currentTime + 250;
          } else if (priority >= TransitionPriority) {
            return currentTime + 5e3;
          } else {
            return NoTimestamp;
          }
        }
        function markStarvedLanesAsExpired(root2, currentTime) {
          var pendingLanes = root2.pendingLanes;
          var suspendedLanes = root2.suspendedLanes;
          var pingedLanes = root2.pingedLanes;
          var expirationTimes = root2.expirationTimes;
          var lanes = pendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var expirationTime = expirationTimes[index2];
            if (expirationTime === NoTimestamp) {
              if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                expirationTimes[index2] = computeExpirationTime(lane, currentTime);
              }
            } else if (expirationTime <= currentTime) {
              root2.expiredLanes |= lane;
            }
            lanes &= ~lane;
          }
        }
        function getLanesToRetrySynchronouslyOnError(root2) {
          var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
          if (everythingButOffscreen !== NoLanes) {
            return everythingButOffscreen;
          }
          if (everythingButOffscreen & OffscreenLane) {
            return OffscreenLane;
          }
          return NoLanes;
        }
        function returnNextLanesPriority() {
          return return_highestLanePriority;
        }
        function includesNonIdleWork(lanes) {
          return (lanes & NonIdleLanes) !== NoLanes;
        }
        function includesOnlyRetries(lanes) {
          return (lanes & RetryLanes) === lanes;
        }
        function includesOnlyTransitions(lanes) {
          return (lanes & TransitionLanes) === lanes;
        }
        function findUpdateLane(lanePriority, wipLanes) {
          switch (lanePriority) {
            case NoLanePriority:
              break;
            case SyncLanePriority:
              return SyncLane;
            case SyncBatchedLanePriority:
              return SyncBatchedLane;
            case InputDiscreteLanePriority: {
              var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);
              if (_lane === NoLane) {
                return findUpdateLane(InputContinuousLanePriority, wipLanes);
              }
              return _lane;
            }
            case InputContinuousLanePriority: {
              var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);
              if (_lane2 === NoLane) {
                return findUpdateLane(DefaultLanePriority, wipLanes);
              }
              return _lane2;
            }
            case DefaultLanePriority: {
              var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);
              if (_lane3 === NoLane) {
                _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);
                if (_lane3 === NoLane) {
                  _lane3 = pickArbitraryLane(DefaultLanes);
                }
              }
              return _lane3;
            }
            case TransitionPriority:
            case RetryLanePriority:
              break;
            case IdleLanePriority:
              var lane = pickArbitraryLane(IdleLanes & ~wipLanes);
              if (lane === NoLane) {
                lane = pickArbitraryLane(IdleLanes);
              }
              return lane;
          }
          {
            {
              throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
            }
          }
        }
        function findTransitionLane(wipLanes, pendingLanes) {
          var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);
          if (lane === NoLane) {
            lane = pickArbitraryLane(TransitionLanes & ~wipLanes);
            if (lane === NoLane) {
              lane = pickArbitraryLane(TransitionLanes);
            }
          }
          return lane;
        }
        function findRetryLane(wipLanes) {
          var lane = pickArbitraryLane(RetryLanes & ~wipLanes);
          if (lane === NoLane) {
            lane = pickArbitraryLane(RetryLanes);
          }
          return lane;
        }
        function getHighestPriorityLane(lanes) {
          return lanes & -lanes;
        }
        function getLowestPriorityLane(lanes) {
          var index2 = 31 - clz32(lanes);
          return index2 < 0 ? NoLanes : 1 << index2;
        }
        function getEqualOrHigherPriorityLanes(lanes) {
          return (getLowestPriorityLane(lanes) << 1) - 1;
        }
        function pickArbitraryLane(lanes) {
          return getHighestPriorityLane(lanes);
        }
        function pickArbitraryLaneIndex(lanes) {
          return 31 - clz32(lanes);
        }
        function laneToIndex(lane) {
          return pickArbitraryLaneIndex(lane);
        }
        function includesSomeLane(a, b) {
          return (a & b) !== NoLanes;
        }
        function isSubsetOfLanes(set2, subset) {
          return (set2 & subset) === subset;
        }
        function mergeLanes(a, b) {
          return a | b;
        }
        function removeLanes(set2, subset) {
          return set2 & ~subset;
        }
        function laneToLanes(lane) {
          return lane;
        }
        function higherPriorityLane(a, b) {
          return a !== NoLane && a < b ? a : b;
        }
        function createLaneMap(initial) {
          var laneMap = [];
          for (var i = 0; i < TotalLanes; i++) {
            laneMap.push(initial);
          }
          return laneMap;
        }
        function markRootUpdated(root2, updateLane, eventTime) {
          root2.pendingLanes |= updateLane;
          var higherPriorityLanes = updateLane - 1;
          root2.suspendedLanes &= higherPriorityLanes;
          root2.pingedLanes &= higherPriorityLanes;
          var eventTimes = root2.eventTimes;
          var index2 = laneToIndex(updateLane);
          eventTimes[index2] = eventTime;
        }
        function markRootSuspended(root2, suspendedLanes) {
          root2.suspendedLanes |= suspendedLanes;
          root2.pingedLanes &= ~suspendedLanes;
          var expirationTimes = root2.expirationTimes;
          var lanes = suspendedLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootPinged(root2, pingedLanes, eventTime) {
          root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
        }
        function markDiscreteUpdatesExpired(root2) {
          root2.expiredLanes |= InputDiscreteLanes & root2.pendingLanes;
        }
        function hasDiscreteLanes(lanes) {
          return (lanes & InputDiscreteLanes) !== NoLanes;
        }
        function markRootMutableRead(root2, updateLane) {
          root2.mutableReadLanes |= updateLane & root2.pendingLanes;
        }
        function markRootFinished(root2, remainingLanes) {
          var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
          root2.pendingLanes = remainingLanes;
          root2.suspendedLanes = 0;
          root2.pingedLanes = 0;
          root2.expiredLanes &= remainingLanes;
          root2.mutableReadLanes &= remainingLanes;
          root2.entangledLanes &= remainingLanes;
          var entanglements = root2.entanglements;
          var eventTimes = root2.eventTimes;
          var expirationTimes = root2.expirationTimes;
          var lanes = noLongerPendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] = NoLanes;
            eventTimes[index2] = NoTimestamp;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootEntangled(root2, entangledLanes) {
          root2.entangledLanes |= entangledLanes;
          var entanglements = root2.entanglements;
          var lanes = entangledLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] |= entangledLanes;
            lanes &= ~lane;
          }
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(lanes) {
          if (lanes === 0) {
            return 32;
          }
          return 31 - (log(lanes) / LN2 | 0) | 0;
        }
        var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority, runWithPriority = Scheduler.unstable_runWithPriority;
        var _enabled = true;
        function setEnabled(enabled) {
          _enabled = !!enabled;
        }
        function isEnabled() {
          return _enabled;
        }
        function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
          var eventPriority = getEventPriorityForPluginSystem(domEventName);
          var listenerWrapper;
          switch (eventPriority) {
            case DiscreteEvent:
              listenerWrapper = dispatchDiscreteEvent;
              break;
            case UserBlockingEvent:
              listenerWrapper = dispatchUserBlockingUpdate;
              break;
            case ContinuousEvent:
            default:
              listenerWrapper = dispatchEvent;
              break;
          }
          return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        }
        function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
          {
            flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
          }
          discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
        }
        function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
          {
            runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
          }
        }
        function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (!_enabled) {
            return;
          }
          var allowReplay = true;
          {
            allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
          }
          if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
            queueDiscreteEvent(null, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            return;
          }
          var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          if (blockedOn === null) {
            if (allowReplay) {
              clearIfContinuousEvent(domEventName, nativeEvent);
            }
            return;
          }
          if (allowReplay) {
            if (isReplayableDiscreteEvent(domEventName)) {
              queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
              return;
            }
            if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
              return;
            }
            clearIfContinuousEvent(domEventName, nativeEvent);
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
        function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var targetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) {
              targetInst = null;
            } else {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  return instance;
                }
                targetInst = null;
              } else if (tag === HostRoot) {
                var root2 = nearestMounted.stateNode;
                if (root2.hydrate) {
                  return getContainerFromFiber(nearestMounted);
                }
                targetInst = null;
              } else if (nearestMounted !== targetInst) {
                targetInst = null;
              }
            }
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer);
          return null;
        }
        function addEventBubbleListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, false);
          return listener;
        }
        function addEventCaptureListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, true);
          return listener;
        }
        function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            capture: true,
            passive
          });
          return listener;
        }
        function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            passive
          });
          return listener;
        }
        var root = null;
        var startText = null;
        var fallbackText = null;
        function initialize(nativeEventTarget) {
          root = nativeEventTarget;
          startText = getText();
          return true;
        }
        function reset() {
          root = null;
          startText = null;
          fallbackText = null;
        }
        function getData() {
          if (fallbackText) {
            return fallbackText;
          }
          var start;
          var startValue = startText;
          var startLength = startValue.length;
          var end;
          var endValue = getText();
          var endLength = endValue.length;
          for (start = 0; start < startLength; start++) {
            if (startValue[start] !== endValue[start]) {
              break;
            }
          }
          var minEnd = startLength - start;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }
          var sliceTail = end > 1 ? 1 - end : void 0;
          fallbackText = endValue.slice(start, sliceTail);
          return fallbackText;
        }
        function getText() {
          if ("value" in root) {
            return root.value;
          }
          return root.textContent;
        }
        function getEventCharCode(nativeEvent) {
          var charCode;
          var keyCode = nativeEvent.keyCode;
          if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode;
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            charCode = keyCode;
          }
          if (charCode === 10) {
            charCode = 13;
          }
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }
          return 0;
        }
        function functionThatReturnsTrue() {
          return true;
        }
        function functionThatReturnsFalse() {
          return false;
        }
        function createSyntheticEvent(Interface) {
          function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for (var _propName in Interface) {
              if (!Interface.hasOwnProperty(_propName)) {
                continue;
              }
              var normalize = Interface[_propName];
              if (normalize) {
                this[_propName] = normalize(nativeEvent);
              } else {
                this[_propName] = nativeEvent[_propName];
              }
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = functionThatReturnsTrue;
            } else {
              this.isDefaultPrevented = functionThatReturnsFalse;
            }
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
          }
          _assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.preventDefault) {
                event.preventDefault();
              } else if (typeof event.returnValue !== "unknown") {
                event.returnValue = false;
              }
              this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.stopPropagation) {
                event.stopPropagation();
              } else if (typeof event.cancelBubble !== "unknown") {
                event.cancelBubble = true;
              }
              this.isPropagationStopped = functionThatReturnsTrue;
            },
            persist: function() {
            },
            isPersistent: functionThatReturnsTrue
          });
          return SyntheticBaseEvent;
        }
        var EventInterface = {
          eventPhase: 0,
          bubbles: 0,
          cancelable: 0,
          timeStamp: function(event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: 0,
          isTrusted: 0
        };
        var SyntheticEvent = createSyntheticEvent(EventInterface);
        var UIEventInterface = _assign({}, EventInterface, {
          view: 0,
          detail: 0
        });
        var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
        var lastMovementX;
        var lastMovementY;
        var lastMouseEvent;
        function updateMouseMovementPolyfillState(event) {
          if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
              lastMovementX = event.screenX - lastMouseEvent.screenX;
              lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
              lastMovementX = 0;
              lastMovementY = 0;
            }
            lastMouseEvent = event;
          }
        }
        var MouseEventInterface = _assign({}, UIEventInterface, {
          screenX: 0,
          screenY: 0,
          clientX: 0,
          clientY: 0,
          pageX: 0,
          pageY: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          getModifierState: getEventModifierState,
          button: 0,
          buttons: 0,
          relatedTarget: function(event) {
            if (event.relatedTarget === void 0)
              return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
          },
          movementX: function(event) {
            if ("movementX" in event) {
              return event.movementX;
            }
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
          },
          movementY: function(event) {
            if ("movementY" in event) {
              return event.movementY;
            }
            return lastMovementY;
          }
        });
        var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
        var DragEventInterface = _assign({}, MouseEventInterface, {
          dataTransfer: 0
        });
        var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
        var FocusEventInterface = _assign({}, UIEventInterface, {
          relatedTarget: 0
        });
        var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
        var AnimationEventInterface = _assign({}, EventInterface, {
          animationName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
        var ClipboardEventInterface = _assign({}, EventInterface, {
          clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
          }
        });
        var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
        var CompositionEventInterface = _assign({}, EventInterface, {
          data: 0
        });
        var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
        var SyntheticInputEvent = SyntheticCompositionEvent;
        var normalizeKey = {
          Esc: "Escape",
          Spacebar: " ",
          Left: "ArrowLeft",
          Up: "ArrowUp",
          Right: "ArrowRight",
          Down: "ArrowDown",
          Del: "Delete",
          Win: "OS",
          Menu: "ContextMenu",
          Apps: "ContextMenu",
          Scroll: "ScrollLock",
          MozPrintableKey: "Unidentified"
        };
        var translateToKey = {
          "8": "Backspace",
          "9": "Tab",
          "12": "Clear",
          "13": "Enter",
          "16": "Shift",
          "17": "Control",
          "18": "Alt",
          "19": "Pause",
          "20": "CapsLock",
          "27": "Escape",
          "32": " ",
          "33": "PageUp",
          "34": "PageDown",
          "35": "End",
          "36": "Home",
          "37": "ArrowLeft",
          "38": "ArrowUp",
          "39": "ArrowRight",
          "40": "ArrowDown",
          "45": "Insert",
          "46": "Delete",
          "112": "F1",
          "113": "F2",
          "114": "F3",
          "115": "F4",
          "116": "F5",
          "117": "F6",
          "118": "F7",
          "119": "F8",
          "120": "F9",
          "121": "F10",
          "122": "F11",
          "123": "F12",
          "144": "NumLock",
          "145": "ScrollLock",
          "224": "Meta"
        };
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") {
              return key;
            }
          }
          if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent);
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
            return translateToKey[nativeEvent.keyCode] || "Unidentified";
          }
          return "";
        }
        var modifierKeyToProp = {
          Alt: "altKey",
          Control: "ctrlKey",
          Meta: "metaKey",
          Shift: "shiftKey"
        };
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }
        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }
        var KeyboardEventInterface = _assign({}, UIEventInterface, {
          key: getEventKey,
          code: 0,
          location: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          repeat: 0,
          locale: 0,
          getModifierState: getEventModifierState,
          charCode: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            return 0;
          },
          keyCode: function(event) {
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          },
          which: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          }
        });
        var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
        var PointerEventInterface = _assign({}, MouseEventInterface, {
          pointerId: 0,
          width: 0,
          height: 0,
          pressure: 0,
          tangentialPressure: 0,
          tiltX: 0,
          tiltY: 0,
          twist: 0,
          pointerType: 0,
          isPrimary: 0
        });
        var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
        var TouchEventInterface = _assign({}, UIEventInterface, {
          touches: 0,
          targetTouches: 0,
          changedTouches: 0,
          altKey: 0,
          metaKey: 0,
          ctrlKey: 0,
          shiftKey: 0,
          getModifierState: getEventModifierState
        });
        var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
        var TransitionEventInterface = _assign({}, EventInterface, {
          propertyName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
        var WheelEventInterface = _assign({}, MouseEventInterface, {
          deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
          },
          deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
          },
          deltaZ: 0,
          deltaMode: 0
        });
        var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
        var END_KEYCODES = [9, 13, 27, 32];
        var START_KEYCODE = 229;
        var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
        var documentMode = null;
        if (canUseDOM && "documentMode" in document) {
          documentMode = document.documentMode;
        }
        var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode;
        var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
        function registerEvents() {
          registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
          registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
        }
        var hasSpaceKeypress = false;
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }
        function getCompositionEventType(domEventName) {
          switch (domEventName) {
            case "compositionstart":
              return "onCompositionStart";
            case "compositionend":
              return "onCompositionEnd";
            case "compositionupdate":
              return "onCompositionUpdate";
          }
        }
        function isFallbackCompositionStart(domEventName, nativeEvent) {
          return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
        }
        function isFallbackCompositionEnd(domEventName, nativeEvent) {
          switch (domEventName) {
            case "keyup":
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
              return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
              return true;
            default:
              return false;
          }
        }
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if (typeof detail === "object" && "data" in detail) {
            return detail.data;
          }
          return null;
        }
        function isUsingKoreanIME(nativeEvent) {
          return nativeEvent.locale === "ko";
        }
        var isComposing = false;
        function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var eventType;
          var fallbackData;
          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(domEventName);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) {
              eventType = "onCompositionStart";
            }
          } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
            eventType = "onCompositionEnd";
          }
          if (!eventType) {
            return null;
          }
          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            if (!isComposing && eventType === "onCompositionStart") {
              isComposing = initialize(nativeEventTarget);
            } else if (eventType === "onCompositionEnd") {
              if (isComposing) {
                fallbackData = getData();
              }
            }
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
          if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            if (fallbackData) {
              event.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event.data = customData;
              }
            }
          }
        }
        function getNativeBeforeInputChars(domEventName, nativeEvent) {
          switch (domEventName) {
            case "compositionend":
              return getDataFromCustomEvent(nativeEvent);
            case "keypress":
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }
              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;
            case "textInput":
              var chars = nativeEvent.data;
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }
              return chars;
            default:
              return null;
          }
        }
        function getFallbackBeforeInputChars(domEventName, nativeEvent) {
          if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
              var chars = getData();
              reset();
              isComposing = false;
              return chars;
            }
            return null;
          }
          switch (domEventName) {
            case "paste":
              return null;
            case "keypress":
              if (!isKeypressCommand(nativeEvent)) {
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case "compositionend":
              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
              return null;
          }
        }
        function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var chars;
          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(domEventName, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
          }
          if (!chars) {
            return null;
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
          if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            event.data = chars;
          }
        }
        function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          "datetime-local": true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };
        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          if (nodeName === "input") {
            return !!supportedInputTypes[elem.type];
          }
          if (nodeName === "textarea") {
            return true;
          }
          return false;
        }
        function isEventSupported(eventNameSuffix) {
          if (!canUseDOM) {
            return false;
          }
          var eventName = "on" + eventNameSuffix;
          var isSupported = eventName in document;
          if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
          }
          return isSupported;
        }
        function registerEvents$1() {
          registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
        }
        function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
          enqueueStateRestore(target);
          var listeners = accumulateTwoPhaseListeners(inst, "onChange");
          if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        var activeElement = null;
        var activeElementInst = null;
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === "select" || nodeName === "input" && elem.type === "file";
        }
        function manualDispatchChangeEvent(nativeEvent) {
          var dispatchQueue = [];
          createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
          batchedUpdates(runEventInBatch, dispatchQueue);
        }
        function runEventInBatch(dispatchQueue) {
          processDispatchQueue(dispatchQueue, 0);
        }
        function getInstIfValueChanged(targetInst) {
          var targetNode = getNodeFromInstance(targetInst);
          if (updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }
        function getTargetInstForChangeEvent(domEventName, targetInst) {
          if (domEventName === "change") {
            return targetInst;
          }
        }
        var isInputEventSupported = false;
        if (canUseDOM) {
          isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
        }
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent("onpropertychange", handlePropertyChange);
        }
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent("onpropertychange", handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== "value") {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }
        function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
          if (domEventName === "focusin") {
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (domEventName === "focusout") {
            stopWatchingForValueChange();
          }
        }
        function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
          if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
            return getInstIfValueChanged(activeElementInst);
          }
        }
        function shouldUseClickEvent(elem) {
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
        }
        function getTargetInstForClickEvent(domEventName, targetInst) {
          if (domEventName === "click") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
          if (domEventName === "input" || domEventName === "change") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function handleControlledInputBlur(node) {
          var state = node._wrapperState;
          if (!state || !state.controlled || node.type !== "number") {
            return;
          }
          {
            setDefaultValue(node, "number", node.value);
          }
        }
        function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventPolyfill;
              handleEventFunc = handleEventsForInputEventPolyfill;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }
          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
              createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
              return;
            }
          }
          if (handleEventFunc) {
            handleEventFunc(domEventName, targetNode, targetInst);
          }
          if (domEventName === "focusout") {
            handleControlledInputBlur(targetNode);
          }
        }
        function registerEvents$2() {
          registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
          registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
          registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
          registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
        }
        function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
          var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
          if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
              if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                return;
              }
            }
          }
          if (!isOutEvent && !isOverEvent) {
            return;
          }
          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            win = nativeEventTarget;
          } else {
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }
          var from;
          var to;
          if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
              var nearestMounted = getNearestMountedFiber(to);
              if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
                to = null;
              }
            }
          } else {
            from = null;
            to = targetInst;
          }
          if (from === to) {
            return;
          }
          var SyntheticEventCtor = SyntheticMouseEvent;
          var leaveEventType = "onMouseLeave";
          var enterEventType = "onMouseEnter";
          var eventTypePrefix = "mouse";
          if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
          }
          var fromNode = from == null ? win : getNodeFromInstance(from);
          var toNode = to == null ? win : getNodeFromInstance(to);
          var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
          leave.target = fromNode;
          leave.relatedTarget = toNode;
          var enter = null;
          var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
          }
          accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
        function shallowEqual(objA, objB) {
          if (objectIs(objA, objB)) {
            return true;
          }
          if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
            return false;
          }
          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);
          if (keysA.length !== keysB.length) {
            return false;
          }
          for (var i = 0; i < keysA.length; i++) {
            if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) {
              return false;
            }
          }
          return true;
        }
        function getLeafNode(node) {
          while (node && node.firstChild) {
            node = node.firstChild;
          }
          return node;
        }
        function getSiblingNode(node) {
          while (node) {
            if (node.nextSibling) {
              return node.nextSibling;
            }
            node = node.parentNode;
          }
        }
        function getNodeForCharacterOffset(root2, offset) {
          var node = getLeafNode(root2);
          var nodeStart = 0;
          var nodeEnd = 0;
          while (node) {
            if (node.nodeType === TEXT_NODE) {
              nodeEnd = nodeStart + node.textContent.length;
              if (nodeStart <= offset && nodeEnd >= offset) {
                return {
                  node,
                  offset: offset - nodeStart
                };
              }
              nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
          }
        }
        function getOffsets(outerNode) {
          var ownerDocument = outerNode.ownerDocument;
          var win = ownerDocument && ownerDocument.defaultView || window;
          var selection = win.getSelection && win.getSelection();
          if (!selection || selection.rangeCount === 0) {
            return null;
          }
          var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
          try {
            anchorNode.nodeType;
            focusNode.nodeType;
          } catch (e) {
            return null;
          }
          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
        }
        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
          var length = 0;
          var start = -1;
          var end = -1;
          var indexWithinAnchor = 0;
          var indexWithinFocus = 0;
          var node = outerNode;
          var parentNode = null;
          outer:
            while (true) {
              var next = null;
              while (true) {
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                  start = length + anchorOffset;
                }
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                  end = length + focusOffset;
                }
                if (node.nodeType === TEXT_NODE) {
                  length += node.nodeValue.length;
                }
                if ((next = node.firstChild) === null) {
                  break;
                }
                parentNode = node;
                node = next;
              }
              while (true) {
                if (node === outerNode) {
                  break outer;
                }
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                  start = length;
                }
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                  end = length;
                }
                if ((next = node.nextSibling) !== null) {
                  break;
                }
                node = parentNode;
                parentNode = node.parentNode;
              }
              node = next;
            }
          if (start === -1 || end === -1) {
            return null;
          }
          return {
            start,
            end
          };
        }
        function setOffsets(node, offsets) {
          var doc = node.ownerDocument || document;
          var win = doc && doc.defaultView || window;
          if (!win.getSelection) {
            return;
          }
          var selection = win.getSelection();
          var length = node.textContent.length;
          var start = Math.min(offsets.start, length);
          var end = offsets.end === void 0 ? start : Math.min(offsets.end, length);
          if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
          }
          var startMarker = getNodeForCharacterOffset(node, start);
          var endMarker = getNodeForCharacterOffset(node, end);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
              return;
            }
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
              selection.addRange(range);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range);
            }
          }
        }
        function isTextNode(node) {
          return node && node.nodeType === TEXT_NODE;
        }
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ("contains" in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }
        function isInDocument(node) {
          return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
        }
        function isSameOriginFrame(iframe) {
          try {
            return typeof iframe.contentWindow.location.href === "string";
          } catch (err) {
            return false;
          }
        }
        function getActiveElementDeep() {
          var win = window;
          var element = getActiveElement();
          while (element instanceof win.HTMLIFrameElement) {
            if (isSameOriginFrame(element)) {
              win = element.contentWindow;
            } else {
              return element;
            }
            element = getActiveElement(win.document);
          }
          return element;
        }
        function hasSelectionCapabilities(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
        }
        function getSelectionInformation() {
          var focusedElem = getActiveElementDeep();
          return {
            focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
          };
        }
        function restoreSelection(priorSelectionInformation) {
          var curFocusedElem = getActiveElementDeep();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
              setSelection(priorFocusedElem, priorSelectionRange);
            }
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while (ancestor = ancestor.parentNode) {
              if (ancestor.nodeType === ELEMENT_NODE) {
                ancestors.push({
                  element: ancestor,
                  left: ancestor.scrollLeft,
                  top: ancestor.scrollTop
                });
              }
            }
            if (typeof priorFocusedElem.focus === "function") {
              priorFocusedElem.focus();
            }
            for (var i = 0; i < ancestors.length; i++) {
              var info = ancestors[i];
              info.element.scrollLeft = info.left;
              info.element.scrollTop = info.top;
            }
          }
        }
        function getSelection(input) {
          var selection;
          if ("selectionStart" in input) {
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd
            };
          } else {
            selection = getOffsets(input);
          }
          return selection || {
            start: 0,
            end: 0
          };
        }
        function setSelection(input, offsets) {
          var start = offsets.start;
          var end = offsets.end;
          if (end === void 0) {
            end = start;
          }
          if ("selectionStart" in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
          } else {
            setOffsets(input, offsets);
          }
        }
        var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
        function registerEvents$3() {
          registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
        }
        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;
        function getSelection$1(node) {
          if ("selectionStart" in node && hasSelectionCapabilities(node)) {
            return {
              start: node.selectionStart,
              end: node.selectionEnd
            };
          } else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }
        function getEventTargetDocument(eventTarget) {
          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
        }
        function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
          var doc = getEventTargetDocument(nativeEventTarget);
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
            return;
          }
          var currentSelection = getSelection$1(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              event.target = activeElement$1;
            }
          }
        }
        function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          switch (domEventName) {
            case "focusin":
              if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                activeElement$1 = targetNode;
                activeElementInst$1 = targetInst;
                lastSelection = null;
              }
              break;
            case "focusout":
              activeElement$1 = null;
              activeElementInst$1 = null;
              lastSelection = null;
              break;
            case "mousedown":
              mouseDown = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              mouseDown = false;
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
              break;
            case "selectionchange":
              if (skipSelectionChangeEvent) {
                break;
              }
            case "keydown":
            case "keyup":
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          }
        }
        function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var reactName = topLevelEventsToReactNames.get(domEventName);
          if (reactName === void 0) {
            return;
          }
          var SyntheticEventCtor = SyntheticEvent;
          var reactEventType = domEventName;
          switch (domEventName) {
            case "keypress":
              if (getEventCharCode(nativeEvent) === 0) {
                return;
              }
            case "keydown":
            case "keyup":
              SyntheticEventCtor = SyntheticKeyboardEvent;
              break;
            case "focusin":
              reactEventType = "focus";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "focusout":
              reactEventType = "blur";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "beforeblur":
            case "afterblur":
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "click":
              if (nativeEvent.button === 2) {
                return;
              }
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              SyntheticEventCtor = SyntheticMouseEvent;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              SyntheticEventCtor = SyntheticDragEvent;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              SyntheticEventCtor = SyntheticTouchEvent;
              break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
              SyntheticEventCtor = SyntheticAnimationEvent;
              break;
            case TRANSITION_END:
              SyntheticEventCtor = SyntheticTransitionEvent;
              break;
            case "scroll":
              SyntheticEventCtor = SyntheticUIEvent;
              break;
            case "wheel":
              SyntheticEventCtor = SyntheticWheelEvent;
              break;
            case "copy":
            case "cut":
            case "paste":
              SyntheticEventCtor = SyntheticClipboardEvent;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              SyntheticEventCtor = SyntheticPointerEvent;
              break;
          }
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          {
            var accumulateTargetOnly = !inCapturePhase && domEventName === "scroll";
            var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
            if (_listeners.length > 0) {
              var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: _event,
                listeners: _listeners
              });
            }
          }
        }
        registerSimpleEvents();
        registerEvents$2();
        registerEvents$1();
        registerEvents$3();
        registerEvents();
        function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
          if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
        }
        var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
        var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
        function executeDispatch(event, listener, currentTarget) {
          var type = event.type || "unknown-event";
          event.currentTarget = currentTarget;
          invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event);
          event.currentTarget = null;
        }
        function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
          var previousInstance;
          if (inCapturePhase) {
            for (var i = dispatchListeners.length - 1; i >= 0; i--) {
              var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
              if (instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, listener, currentTarget);
              previousInstance = instance;
            }
          } else {
            for (var _i = 0; _i < dispatchListeners.length; _i++) {
              var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
              if (_instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, _listener, _currentTarget);
              previousInstance = _instance;
            }
          }
        }
        function processDispatchQueue(dispatchQueue, eventSystemFlags) {
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          for (var i = 0; i < dispatchQueue.length; i++) {
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
          }
          rethrowCaughtError();
        }
        function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var dispatchQueue = [];
          extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          processDispatchQueue(dispatchQueue, eventSystemFlags);
        }
        function listenToNonDelegatedEvent(domEventName, targetElement) {
          var isCapturePhaseListener = false;
          var listenerSet = getEventListenerSet(targetElement);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
        function listenToAllSupportedEvents(rootContainerElement) {
          {
            if (rootContainerElement[listeningMarker]) {
              return;
            }
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
              if (!nonDelegatedEvents.has(domEventName)) {
                listenToNativeEvent(domEventName, false, rootContainerElement, null);
              }
              listenToNativeEvent(domEventName, true, rootContainerElement, null);
            });
          }
        }
        function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
          var eventSystemFlags = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
          var target = rootContainerElement;
          if (domEventName === "selectionchange" && rootContainerElement.nodeType !== DOCUMENT_NODE) {
            target = rootContainerElement.ownerDocument;
          }
          if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
            if (domEventName !== "scroll") {
              return;
            }
            eventSystemFlags |= IS_NON_DELEGATED;
            target = targetElement;
          }
          var listenerSet = getEventListenerSet(target);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            if (isCapturePhaseListener) {
              eventSystemFlags |= IS_CAPTURE_PHASE;
            }
            addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
          var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
          var isPassiveListener = void 0;
          if (passiveBrowserEventsSupported) {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
              isPassiveListener = true;
            }
          }
          targetContainer = targetContainer;
          var unsubscribeListener;
          if (isCapturePhaseListener) {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
            }
          } else {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
            }
          }
        }
        function isMatchingRootContainer(grandContainer, targetContainer) {
          return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
        }
        function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var ancestorInst = targetInst;
          if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer;
            if (targetInst !== null) {
              var node = targetInst;
              mainLoop:
                while (true) {
                  if (node === null) {
                    return;
                  }
                  var nodeTag = node.tag;
                  if (nodeTag === HostRoot || nodeTag === HostPortal) {
                    var container = node.stateNode.containerInfo;
                    if (isMatchingRootContainer(container, targetContainerNode)) {
                      break;
                    }
                    if (nodeTag === HostPortal) {
                      var grandNode = node.return;
                      while (grandNode !== null) {
                        var grandTag = grandNode.tag;
                        if (grandTag === HostRoot || grandTag === HostPortal) {
                          var grandContainer = grandNode.stateNode.containerInfo;
                          if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                            return;
                          }
                        }
                        grandNode = grandNode.return;
                      }
                    }
                    while (container !== null) {
                      var parentNode = getClosestInstanceFromNode(container);
                      if (parentNode === null) {
                        return;
                      }
                      var parentTag = parentNode.tag;
                      if (parentTag === HostComponent || parentTag === HostText) {
                        node = ancestorInst = parentNode;
                        continue mainLoop;
                      }
                      container = container.parentNode;
                    }
                  }
                  node = node.return;
                }
            }
          }
          batchedEventUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
          });
        }
        function createDispatchListener(instance, listener, currentTarget) {
          return {
            instance,
            listener,
            currentTarget
          };
        }
        function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
          var captureName = reactName !== null ? reactName + "Capture" : null;
          var reactEventName = inCapturePhase ? captureName : reactName;
          var listeners = [];
          var instance = targetFiber;
          var lastHostComponent = null;
          while (instance !== null) {
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
            if (tag === HostComponent && stateNode !== null) {
              lastHostComponent = stateNode;
              if (reactEventName !== null) {
                var listener = getListener(instance, reactEventName);
                if (listener != null) {
                  listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
              }
            }
            if (accumulateTargetOnly) {
              break;
            }
            instance = instance.return;
          }
          return listeners;
        }
        function accumulateTwoPhaseListeners(targetFiber, reactName) {
          var captureName = reactName + "Capture";
          var listeners = [];
          var instance = targetFiber;
          while (instance !== null) {
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              var captureListener = getListener(instance, captureName);
              if (captureListener != null) {
                listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
              }
              var bubbleListener = getListener(instance, reactName);
              if (bubbleListener != null) {
                listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
              }
            }
            instance = instance.return;
          }
          return listeners;
        }
        function getParent(inst) {
          if (inst === null) {
            return null;
          }
          do {
            inst = inst.return;
          } while (inst && inst.tag !== HostComponent);
          if (inst) {
            return inst;
          }
          return null;
        }
        function getLowestCommonAncestor(instA, instB) {
          var nodeA = instA;
          var nodeB = instB;
          var depthA = 0;
          for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }
          while (depthA - depthB > 0) {
            nodeA = getParent(nodeA);
            depthA--;
          }
          while (depthB - depthA > 0) {
            nodeB = getParent(nodeB);
            depthB--;
          }
          var depth = depthA;
          while (depth--) {
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
              return nodeA;
            }
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
          }
          return null;
        }
        function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
          var registrationName = event._reactName;
          var listeners = [];
          var instance = target;
          while (instance !== null) {
            if (instance === common) {
              break;
            }
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) {
              break;
            }
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              if (inCapturePhase) {
                var captureListener = getListener(instance, registrationName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                }
              } else if (!inCapturePhase) {
                var bubbleListener = getListener(instance, registrationName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
              }
            }
            instance = instance.return;
          }
          if (listeners.length !== 0) {
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
          var common = from && to ? getLowestCommonAncestor(from, to) : null;
          if (from !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
          }
          if (to !== null && enterEvent !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
          }
        }
        function getListenerSetKey(domEventName, capture) {
          return domEventName + "__" + (capture ? "capture" : "bubble");
        }
        var didWarnInvalidHydration = false;
        var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
        var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
        var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
        var AUTOFOCUS = "autoFocus";
        var CHILDREN = "children";
        var STYLE = "style";
        var HTML$1 = "__html";
        var HTML_NAMESPACE$1 = Namespaces.html;
        var warnedUnknownTags;
        var suppressHydrationWarning;
        var validatePropertiesInDevelopment;
        var warnForTextDifference;
        var warnForPropDifference;
        var warnForExtraAttributes;
        var warnForInvalidEventListener;
        var canDiffStyleForHydrationWarning;
        var normalizeMarkupForTextOrAttribute;
        var normalizeHTML;
        {
          warnedUnknownTags = {
            dialog: true,
            webview: true
          };
          validatePropertiesInDevelopment = function(type, props) {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, {
              registrationNameDependencies,
              possibleRegistrationNames
            });
          };
          canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
          var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
          var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
          normalizeMarkupForTextOrAttribute = function(markup) {
            var markupString = typeof markup === "string" ? markup : "" + markup;
            return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
          };
          warnForTextDifference = function(serverText, clientText) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
            var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
            if (normalizedServerText === normalizedClientText) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
          };
          warnForPropDifference = function(propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
            if (normalizedServerValue === normalizedClientValue) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
          };
          warnForExtraAttributes = function(attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function(name) {
              names.push(name);
            });
            error("Extra attributes from the server: %s", names);
          };
          warnForInvalidEventListener = function(registrationName, listener) {
            if (listener === false) {
              error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
            } else {
              error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
            }
          };
          normalizeHTML = function(parent, html) {
            var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html;
            return testElement.innerHTML;
          };
        }
        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
        }
        function noop() {
        }
        function trapClickOnNonInteractiveElement(node) {
          node.onclick = noop;
        }
        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              if (nextHtml != null) {
                setInnerHTML(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                var canSetTextContent = tag !== "textarea" || nextProp !== "";
                if (canSetTextContent) {
                  setTextContent(domElement, nextProp);
                }
              } else if (typeof nextProp === "number") {
                setTextContent(domElement, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (nextProp != null) {
              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
            }
          }
        }
        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          for (var i = 0; i < updatePayload.length; i += 2) {
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) {
              setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent(domElement, propValue);
            } else {
              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
            }
          }
        }
        function createElement(type, props, rootContainerElement, parentNamespace) {
          var isCustomComponentTag;
          var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
          var domElement;
          var namespaceURI = parentNamespace;
          if (namespaceURI === HTML_NAMESPACE$1) {
            namespaceURI = getIntrinsicNamespace(type);
          }
          if (namespaceURI === HTML_NAMESPACE$1) {
            {
              isCustomComponentTag = isCustomComponent(type, props);
              if (!isCustomComponentTag && type !== type.toLowerCase()) {
                error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
            if (type === "script") {
              var div = ownerDocument.createElement("div");
              div.innerHTML = "<script><\/script>";
              var firstChild = div.firstChild;
              domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") {
              domElement = ownerDocument.createElement(type, {
                is: props.is
              });
            } else {
              domElement = ownerDocument.createElement(type);
              if (type === "select") {
                var node = domElement;
                if (props.multiple) {
                  node.multiple = true;
                } else if (props.size) {
                  node.size = props.size;
                }
              }
            }
          } else {
            domElement = ownerDocument.createElementNS(namespaceURI, type);
          }
          {
            if (namespaceURI === HTML_NAMESPACE$1) {
              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
              }
            }
          }
          return domElement;
        }
        function createTextNode(text, rootContainerElement) {
          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
        }
        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
          var isCustomComponentTag = isCustomComponent(tag, rawProps);
          {
            validatePropertiesInDevelopment(tag, rawProps);
          }
          var props;
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              props = rawProps;
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              props = rawProps;
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              props = rawProps;
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              props = rawProps;
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              props = getHostProps(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              props = getHostProps$1(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              props = getHostProps$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              props = getHostProps$3(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            default:
              props = rawProps;
          }
          assertValidProps(tag, props);
          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, false);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "option":
              postMountWrapper$1(domElement, rawProps);
              break;
            case "select":
              postMountWrapper$2(domElement, rawProps);
              break;
            default:
              if (typeof props.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
        }
        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
          {
            validatePropertiesInDevelopment(tag, nextRawProps);
          }
          var updatePayload = null;
          var lastProps;
          var nextProps;
          switch (tag) {
            case "input":
              lastProps = getHostProps(domElement, lastRawProps);
              nextProps = getHostProps(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "option":
              lastProps = getHostProps$1(domElement, lastRawProps);
              nextProps = getHostProps$1(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "select":
              lastProps = getHostProps$2(domElement, lastRawProps);
              nextProps = getHostProps$2(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "textarea":
              lastProps = getHostProps$3(domElement, lastRawProps);
              nextProps = getHostProps$3(domElement, nextRawProps);
              updatePayload = [];
              break;
            default:
              lastProps = lastRawProps;
              nextProps = nextRawProps;
              if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          assertValidProps(tag, nextProps);
          var propKey;
          var styleName;
          var styleUpdates = null;
          for (propKey in lastProps) {
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
              continue;
            }
            if (propKey === STYLE) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  if (!styleUpdates) {
                    styleUpdates = {};
                  }
                  styleUpdates[styleName] = "";
                }
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
              ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (!updatePayload) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, null);
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : void 0;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
              continue;
            }
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              if (lastProp) {
                for (styleName in lastProp) {
                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
                for (styleName in nextProp) {
                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                if (!styleUpdates) {
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                  updatePayload.push(propKey, styleUpdates);
                }
                styleUpdates = nextProp;
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
              if (nextHtml != null) {
                if (lastHtml !== nextHtml) {
                  (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string" || typeof nextProp === "number") {
                (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
              if (!updatePayload && lastProp !== nextProp) {
                updatePayload = [];
              }
            } else if (typeof nextProp === "object" && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {
              nextProp.toString();
            } else {
              (updatePayload = updatePayload || []).push(propKey, nextProp);
            }
          }
          if (styleUpdates) {
            {
              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            }
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
          }
          return updatePayload;
        }
        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
          if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
            updateChecked(domElement, nextRawProps);
          }
          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
          var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
          switch (tag) {
            case "input":
              updateWrapper(domElement, nextRawProps);
              break;
            case "textarea":
              updateWrapper$1(domElement, nextRawProps);
              break;
            case "select":
              postUpdateWrapper(domElement, nextRawProps);
              break;
          }
        }
        function getPossibleStandardName(propName) {
          {
            var lowerCasedName = propName.toLowerCase();
            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              return null;
            }
            return possibleStandardNames[lowerCasedName] || null;
          }
        }
        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
          var isCustomComponentTag;
          var extraAttributeNames;
          {
            suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
            isCustomComponentTag = isCustomComponent(tag, rawProps);
            validatePropertiesInDevelopment(tag, rawProps);
          }
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
          }
          assertValidProps(tag, rawProps);
          {
            extraAttributeNames = /* @__PURE__ */ new Set();
            var attributes = domElement.attributes;
            for (var _i = 0; _i < attributes.length; _i++) {
              var name = attributes[_i].name.toLowerCase();
              switch (name) {
                case "data-reactroot":
                  break;
                case "value":
                  break;
                case "checked":
                  break;
                case "selected":
                  break;
                default:
                  extraAttributeNames.add(attributes[_i].name);
              }
            }
          }
          var updatePayload = null;
          for (var propKey in rawProps) {
            if (!rawProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                if (domElement.textContent !== nextProp) {
                  if (!suppressHydrationWarning) {
                    warnForTextDifference(domElement.textContent, nextProp);
                  }
                  updatePayload = [CHILDREN, nextProp];
                }
              } else if (typeof nextProp === "number") {
                if (domElement.textContent !== "" + nextProp) {
                  if (!suppressHydrationWarning) {
                    warnForTextDifference(domElement.textContent, nextProp);
                  }
                  updatePayload = [CHILDREN, "" + nextProp];
                }
              }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (typeof isCustomComponentTag === "boolean") {
              var serverValue = void 0;
              var propertyInfo = getPropertyInfo(propKey);
              if (suppressHydrationWarning)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === "value" || propKey === "checked" || propKey === "selected")
                ;
              else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var serverHTML = domElement.innerHTML;
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  var expectedHTML = normalizeHTML(domElement, nextHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                }
              } else if (propKey === STYLE) {
                extraAttributeNames.delete(propKey);
                if (canDiffStyleForHydrationWarning) {
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute("style");
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                }
              } else if (isCustomComponentTag) {
                extraAttributeNames.delete(propKey.toLowerCase());
                serverValue = getValueForAttribute(domElement, propKey, nextProp);
                if (nextProp !== serverValue) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                var isMismatchDueToBadCasing = false;
                if (propertyInfo !== null) {
                  extraAttributeNames.delete(propertyInfo.attributeName);
                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                } else {
                  var ownNamespace = parentNamespace;
                  if (ownNamespace === HTML_NAMESPACE$1) {
                    ownNamespace = getIntrinsicNamespace(tag);
                  }
                  if (ownNamespace === HTML_NAMESPACE$1) {
                    extraAttributeNames.delete(propKey.toLowerCase());
                  } else {
                    var standardName = getPossibleStandardName(propKey);
                    if (standardName !== null && standardName !== propKey) {
                      isMismatchDueToBadCasing = true;
                      extraAttributeNames.delete(standardName);
                    }
                    extraAttributeNames.delete(propKey);
                  }
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                }
                if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              }
            }
          }
          {
            if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
              warnForExtraAttributes(extraAttributeNames);
            }
          }
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, true);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "select":
            case "option":
              break;
            default:
              if (typeof rawProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          return updatePayload;
        }
        function diffHydratedText(textNode, text) {
          var isDifferent = textNode.nodeValue !== text;
          return isDifferent;
        }
        function warnForUnmatchedText(textNode, text) {
          {
            warnForTextDifference(textNode.nodeValue, text);
          }
        }
        function warnForDeletedHydratableElement(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
          }
        }
        function warnForDeletedHydratableText(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedElement(parentNode, tag, props) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedText(parentNode, text) {
          {
            if (text === "") {
              return;
            }
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
          }
        }
        function restoreControlledState$3(domElement, tag, props) {
          switch (tag) {
            case "input":
              restoreControlledState(domElement, props);
              return;
            case "textarea":
              restoreControlledState$2(domElement, props);
              return;
            case "select":
              restoreControlledState$1(domElement, props);
              return;
          }
        }
        var validateDOMNesting = function() {
        };
        var updatedAncestorInfo = function() {
        };
        {
          var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
          var inScopeTags = [
            "applet",
            "caption",
            "html",
            "table",
            "td",
            "th",
            "marquee",
            "object",
            "template",
            "foreignObject",
            "desc",
            "title"
          ];
          var buttonScopeTags = inScopeTags.concat(["button"]);
          var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
          var emptyAncestorInfo = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };
          updatedAncestorInfo = function(oldInfo, tag) {
            var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
            var info = {
              tag
            };
            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }
            if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }
            ancestorInfo.current = info;
            if (tag === "form") {
              ancestorInfo.formTag = info;
            }
            if (tag === "a") {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === "button") {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === "nobr") {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === "p") {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === "li") {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === "dd" || tag === "dt") {
              ancestorInfo.dlItemTagAutoclosing = info;
            }
            return ancestorInfo;
          };
          var isTagValidWithParent = function(tag, parentTag) {
            switch (parentTag) {
              case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
              case "optgroup":
                return tag === "option" || tag === "#text";
              case "option":
                return tag === "#text";
              case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
              case "tbody":
              case "thead":
              case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
              case "colgroup":
                return tag === "col" || tag === "template";
              case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
              case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
              case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
              case "frameset":
                return tag === "frame";
              case "#document":
                return tag === "html";
            }
            switch (tag) {
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
              case "rp":
              case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
              case "body":
              case "caption":
              case "col":
              case "colgroup":
              case "frameset":
              case "frame":
              case "head":
              case "html":
              case "tbody":
              case "td":
              case "tfoot":
              case "th":
              case "thead":
              case "tr":
                return parentTag == null;
            }
            return true;
          };
          var findInvalidAncestorForTag = function(tag, ancestorInfo) {
            switch (tag) {
              case "address":
              case "article":
              case "aside":
              case "blockquote":
              case "center":
              case "details":
              case "dialog":
              case "dir":
              case "div":
              case "dl":
              case "fieldset":
              case "figcaption":
              case "figure":
              case "footer":
              case "header":
              case "hgroup":
              case "main":
              case "menu":
              case "nav":
              case "ol":
              case "p":
              case "section":
              case "summary":
              case "ul":
              case "pre":
              case "listing":
              case "table":
              case "hr":
              case "xmp":
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return ancestorInfo.pTagInButtonScope;
              case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
              case "li":
                return ancestorInfo.listItemTagAutoclosing;
              case "dd":
              case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
              case "button":
                return ancestorInfo.buttonTagInScope;
              case "a":
                return ancestorInfo.aTagInScope;
              case "nobr":
                return ancestorInfo.nobrTagInScope;
            }
            return null;
          };
          var didWarn$1 = {};
          validateDOMNesting = function(childTag, childText, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            if (childText != null) {
              if (childTag != null) {
                error("validateDOMNesting: when childText is passed, childTag should be null");
              }
              childTag = "#text";
            }
            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }
            var ancestorTag = invalidParentOrAncestor.tag;
            var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
            if (didWarn$1[warnKey]) {
              return;
            }
            didWarn$1[warnKey] = true;
            var tagDisplayName = childTag;
            var whitespaceInfo = "";
            if (childTag === "#text") {
              if (/\S/.test(childText)) {
                tagDisplayName = "Text nodes";
              } else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
              }
            } else {
              tagDisplayName = "<" + childTag + ">";
            }
            if (invalidParent) {
              var info = "";
              if (ancestorTag === "table" && childTag === "tr") {
                info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
              }
              error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
            } else {
              error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
            }
          };
        }
        var SUPPRESS_HYDRATION_WARNING$1;
        {
          SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
        }
        var SUSPENSE_START_DATA = "$";
        var SUSPENSE_END_DATA = "/$";
        var SUSPENSE_PENDING_START_DATA = "$?";
        var SUSPENSE_FALLBACK_START_DATA = "$!";
        var STYLE$1 = "style";
        var eventsEnabled = null;
        var selectionInformation = null;
        function shouldAutoFocusHostComponent(type, props) {
          switch (type) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!props.autoFocus;
          }
          return false;
        }
        function getRootHostContext(rootContainerInstance) {
          var type;
          var namespace;
          var nodeType = rootContainerInstance.nodeType;
          switch (nodeType) {
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE: {
              type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
              var root2 = rootContainerInstance.documentElement;
              namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
              break;
            }
            default: {
              var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
              var ownNamespace = container.namespaceURI || null;
              type = container.tagName;
              namespace = getChildNamespace(ownNamespace, type);
              break;
            }
          }
          {
            var validatedTag = type.toLowerCase();
            var ancestorInfo = updatedAncestorInfo(null, validatedTag);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getChildHostContext(parentHostContext, type, rootContainerInstance) {
          {
            var parentHostContextDev = parentHostContext;
            var namespace = getChildNamespace(parentHostContextDev.namespace, type);
            var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getPublicInstance(instance) {
          return instance;
        }
        function prepareForCommit(containerInfo) {
          eventsEnabled = isEnabled();
          selectionInformation = getSelectionInformation();
          var activeInstance = null;
          setEnabled(false);
          return activeInstance;
        }
        function resetAfterCommit(containerInfo) {
          restoreSelection(selectionInformation);
          setEnabled(eventsEnabled);
          eventsEnabled = null;
          selectionInformation = null;
        }
        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            validateDOMNesting(type, null, hostContextDev.ancestorInfo);
            if (typeof props.children === "string" || typeof props.children === "number") {
              var string = "" + props.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
            parentNamespace = hostContextDev.namespace;
          }
          var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
          precacheFiberNode(internalInstanceHandle, domElement);
          updateFiberProps(domElement, props);
          return domElement;
        }
        function appendInitialChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
          setInitialProperties(domElement, type, props, rootContainerInstance);
          return shouldAutoFocusHostComponent(type, props);
        }
        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
          {
            var hostContextDev = hostContext;
            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
              var string = "" + newProps.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
          }
          return diffProperties(domElement, type, oldProps, newProps);
        }
        function shouldSetTextContent(type, props) {
          return type === "textarea" || type === "option" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
        }
        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
          {
            var hostContextDev = hostContext;
            validateDOMNesting(null, text, hostContextDev.ancestorInfo);
          }
          var textNode = createTextNode(text, rootContainerInstance);
          precacheFiberNode(internalInstanceHandle, textNode);
          return textNode;
        }
        var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
        var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
        var noTimeout = -1;
        function commitMount(domElement, type, newProps, internalInstanceHandle) {
          if (shouldAutoFocusHostComponent(type, newProps)) {
            domElement.focus();
          }
        }
        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
          updateFiberProps(domElement, newProps);
          updateProperties(domElement, updatePayload, type, oldProps, newProps);
        }
        function resetTextContent(domElement) {
          setTextContent(domElement, "");
        }
        function commitTextUpdate(textInstance, oldText, newText) {
          textInstance.nodeValue = newText;
        }
        function appendChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function appendChildToContainer(container, child) {
          var parentNode;
          if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
          } else {
            parentNode = container;
            parentNode.appendChild(child);
          }
          var reactRootContainer = container._reactRootContainer;
          if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
            trapClickOnNonInteractiveElement(parentNode);
          }
        }
        function insertBefore(parentInstance, child, beforeChild) {
          parentInstance.insertBefore(child, beforeChild);
        }
        function insertInContainerBefore(container, child, beforeChild) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.insertBefore(child, beforeChild);
          } else {
            container.insertBefore(child, beforeChild);
          }
        }
        function removeChild(parentInstance, child) {
          parentInstance.removeChild(child);
        }
        function removeChildFromContainer(container, child) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.removeChild(child);
          } else {
            container.removeChild(child);
          }
        }
        function hideInstance(instance) {
          instance = instance;
          var style2 = instance.style;
          if (typeof style2.setProperty === "function") {
            style2.setProperty("display", "none", "important");
          } else {
            style2.display = "none";
          }
        }
        function hideTextInstance(textInstance) {
          textInstance.nodeValue = "";
        }
        function unhideInstance(instance, props) {
          instance = instance;
          var styleProp = props[STYLE$1];
          var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
          instance.style.display = dangerousStyleValue("display", display);
        }
        function unhideTextInstance(textInstance, text) {
          textInstance.nodeValue = text;
        }
        function clearContainer(container) {
          if (container.nodeType === ELEMENT_NODE) {
            container.textContent = "";
          } else if (container.nodeType === DOCUMENT_NODE) {
            var body = container.body;
            if (body != null) {
              body.textContent = "";
            }
          }
        }
        function canHydrateInstance(instance, type, props) {
          if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
            return null;
          }
          return instance;
        }
        function canHydrateTextInstance(instance, text) {
          if (text === "" || instance.nodeType !== TEXT_NODE) {
            return null;
          }
          return instance;
        }
        function isSuspenseInstancePending(instance) {
          return instance.data === SUSPENSE_PENDING_START_DATA;
        }
        function isSuspenseInstanceFallback(instance) {
          return instance.data === SUSPENSE_FALLBACK_START_DATA;
        }
        function getNextHydratable(node) {
          for (; node != null; node = node.nextSibling) {
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
              break;
            }
          }
          return node;
        }
        function getNextHydratableSibling(instance) {
          return getNextHydratable(instance.nextSibling);
        }
        function getFirstHydratableChild(parentInstance) {
          return getNextHydratable(parentInstance.firstChild);
        }
        function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, instance);
          updateFiberProps(instance, props);
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            parentNamespace = hostContextDev.namespace;
          }
          return diffHydratedProperties(instance, type, props, parentNamespace);
        }
        function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, textInstance);
          return diffHydratedText(textInstance, text);
        }
        function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
          var node = suspenseInstance.nextSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  return getNextHydratableSibling(node);
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                depth++;
              }
            }
            node = node.nextSibling;
          }
          return null;
        }
        function getParentSuspenseInstance(targetInstance) {
          var node = targetInstance.previousSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                if (depth === 0) {
                  return node;
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_END_DATA) {
                depth++;
              }
            }
            node = node.previousSibling;
          }
          return null;
        }
        function commitHydratedContainer(container) {
          retryIfBlockedOn(container);
        }
        function commitHydratedSuspenseInstance(suspenseInstance) {
          retryIfBlockedOn(suspenseInstance);
        }
        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
          {
            warnForUnmatchedText(textInstance, text);
          }
        }
        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            warnForUnmatchedText(textInstance, text);
          }
        }
        function didNotHydrateContainerInstance(parentContainer, instance) {
          {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentContainer, instance);
            } else if (instance.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentContainer, instance);
            }
          }
        }
        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentInstance, instance);
            } else if (instance.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentInstance, instance);
            }
          }
        }
        function didNotFindHydratableContainerInstance(parentContainer, type, props) {
          {
            warnForInsertedHydratedElement(parentContainer, type);
          }
        }
        function didNotFindHydratableContainerTextInstance(parentContainer, text) {
          {
            warnForInsertedHydratedText(parentContainer, text);
          }
        }
        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            warnForInsertedHydratedElement(parentInstance, type);
          }
        }
        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            warnForInsertedHydratedText(parentInstance, text);
          }
        }
        function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true)
            ;
        }
        var clientId = 0;
        function makeClientIdInDEV(warnOnAccessInDEV) {
          var id = "r:" + (clientId++).toString(36);
          return {
            toString: function() {
              warnOnAccessInDEV();
              return id;
            },
            valueOf: function() {
              warnOnAccessInDEV();
              return id;
            }
          };
        }
        function isOpaqueHydratingObject(value) {
          return value !== null && typeof value === "object" && value.$$typeof === REACT_OPAQUE_ID_TYPE;
        }
        function makeOpaqueHydratingObject(attemptToReadValue) {
          return {
            $$typeof: REACT_OPAQUE_ID_TYPE,
            toString: attemptToReadValue,
            valueOf: attemptToReadValue
          };
        }
        function preparePortalMount(portalInstance) {
          {
            listenToAllSupportedEvents(portalInstance);
          }
        }
        var randomKey = Math.random().toString(36).slice(2);
        var internalInstanceKey = "__reactFiber$" + randomKey;
        var internalPropsKey = "__reactProps$" + randomKey;
        var internalContainerInstanceKey = "__reactContainer$" + randomKey;
        var internalEventHandlersKey = "__reactEvents$" + randomKey;
        function precacheFiberNode(hostInst, node) {
          node[internalInstanceKey] = hostInst;
        }
        function markContainerAsRoot(hostRoot, node) {
          node[internalContainerInstanceKey] = hostRoot;
        }
        function unmarkContainerAsRoot(node) {
          node[internalContainerInstanceKey] = null;
        }
        function isContainerMarkedAsRoot(node) {
          return !!node[internalContainerInstanceKey];
        }
        function getClosestInstanceFromNode(targetNode) {
          var targetInst = targetNode[internalInstanceKey];
          if (targetInst) {
            return targetInst;
          }
          var parentNode = targetNode.parentNode;
          while (parentNode) {
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
              var alternate = targetInst.alternate;
              if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                var suspenseInstance = getParentSuspenseInstance(targetNode);
                while (suspenseInstance !== null) {
                  var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                  if (targetSuspenseInst) {
                    return targetSuspenseInst;
                  }
                  suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                }
              }
              return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
          }
          return null;
        }
        function getInstanceFromNode(node) {
          var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
              return inst;
            } else {
              return null;
            }
          }
          return null;
        }
        function getNodeFromInstance(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst.stateNode;
          }
          {
            {
              throw Error("getNodeFromInstance: Invalid argument.");
            }
          }
        }
        function getFiberCurrentPropsFromNode(node) {
          return node[internalPropsKey] || null;
        }
        function updateFiberProps(node, props) {
          node[internalPropsKey] = props;
        }
        function getEventListenerSet(node) {
          var elementListenerSet = node[internalEventHandlersKey];
          if (elementListenerSet === void 0) {
            elementListenerSet = node[internalEventHandlersKey] = /* @__PURE__ */ new Set();
          }
          return elementListenerSet;
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has2 = Function.call.bind(Object.prototype.hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has2(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var valueStack = [];
        var fiberStack;
        {
          fiberStack = [];
        }
        var index = -1;
        function createCursor(defaultValue) {
          return {
            current: defaultValue
          };
        }
        function pop(cursor, fiber) {
          if (index < 0) {
            {
              error("Unexpected pop.");
            }
            return;
          }
          {
            if (fiber !== fiberStack[index]) {
              error("Unexpected Fiber popped.");
            }
          }
          cursor.current = valueStack[index];
          valueStack[index] = null;
          {
            fiberStack[index] = null;
          }
          index--;
        }
        function push(cursor, value, fiber) {
          index++;
          valueStack[index] = cursor.current;
          {
            fiberStack[index] = fiber;
          }
          cursor.current = value;
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        var contextStackCursor = createCursor(emptyContextObject);
        var didPerformWorkStackCursor = createCursor(false);
        var previousContext = emptyContextObject;
        function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
          {
            if (didPushOwnContextIfProvider && isContextProvider(Component)) {
              return previousContext;
            }
            return contextStackCursor.current;
          }
        }
        function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
          {
            var instance = workInProgress2.stateNode;
            instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
            instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
          }
        }
        function getMaskedContext(workInProgress2, unmaskedContext) {
          {
            var type = workInProgress2.type;
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var instance = workInProgress2.stateNode;
            if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
              return instance.__reactInternalMemoizedMaskedChildContext;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentName(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            if (instance) {
              cacheContext(workInProgress2, unmaskedContext, context);
            }
            return context;
          }
        }
        function hasContextChanged() {
          {
            return didPerformWorkStackCursor.current;
          }
        }
        function isContextProvider(type) {
          {
            var childContextTypes = type.childContextTypes;
            return childContextTypes !== null && childContextTypes !== void 0;
          }
        }
        function popContext(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function popTopLevelContextObject(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function pushTopLevelContextObject(fiber, context, didChange) {
          {
            if (!(contextStackCursor.current === emptyContextObject)) {
              {
                throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            push(contextStackCursor, context, fiber);
            push(didPerformWorkStackCursor, didChange, fiber);
          }
        }
        function processChildContext(fiber, type, parentContext) {
          {
            var instance = fiber.stateNode;
            var childContextTypes = type.childContextTypes;
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentName(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                {
                  throw Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                }
              }
            }
            {
              var name = getComponentName(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return _assign({}, parentContext, childContext);
          }
        }
        function pushContextProvider(workInProgress2) {
          {
            var instance = workInProgress2.stateNode;
            var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
            previousContext = contextStackCursor.current;
            push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
            push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
            return true;
          }
        }
        function invalidateContextProvider(workInProgress2, type, didChange) {
          {
            var instance = workInProgress2.stateNode;
            if (!instance) {
              {
                throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            if (didChange) {
              var mergedContext = processChildContext(workInProgress2, type, previousContext);
              instance.__reactInternalMemoizedMergedChildContext = mergedContext;
              pop(didPerformWorkStackCursor, workInProgress2);
              pop(contextStackCursor, workInProgress2);
              push(contextStackCursor, mergedContext, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            } else {
              pop(didPerformWorkStackCursor, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            }
          }
        }
        function findCurrentUnmaskedContext(fiber) {
          {
            if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
              {
                throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            var node = fiber;
            do {
              switch (node.tag) {
                case HostRoot:
                  return node.stateNode.context;
                case ClassComponent: {
                  var Component = node.type;
                  if (isContextProvider(Component)) {
                    return node.stateNode.__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
              }
              node = node.return;
            } while (node !== null);
            {
              {
                throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
        }
        var LegacyRoot = 0;
        var BlockingRoot = 1;
        var ConcurrentRoot = 2;
        var rendererID = null;
        var injectedHook = null;
        var hasLoggedError = false;
        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
        function injectInternals(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (hook.isDisabled) {
            return true;
          }
          if (!hook.supportsFiber) {
            {
              error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            }
            return true;
          }
          try {
            rendererID = hook.inject(internals);
            injectedHook = hook;
          } catch (err) {
            {
              error("React instrumentation encountered an error: %s.", err);
            }
          }
          return true;
        }
        function onScheduleRoot(root2, children) {
          {
            if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
              try {
                injectedHook.onScheduleFiberRoot(rendererID, root2, children);
              } catch (err) {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onCommitRoot(root2, priorityLevel) {
          if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
            try {
              var didError = (root2.current.flags & DidCapture) === DidCapture;
              if (enableProfilerTimer) {
                injectedHook.onCommitFiberRoot(rendererID, root2, priorityLevel, didError);
              } else {
                injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
              }
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onCommitUnmount(fiber) {
          if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
            try {
              injectedHook.onCommitFiberUnmount(rendererID, fiber);
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority, Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback, Scheduler_cancelCallback = Scheduler.unstable_cancelCallback, Scheduler_shouldYield = Scheduler.unstable_shouldYield, Scheduler_requestPaint = Scheduler.unstable_requestPaint, Scheduler_now$1 = Scheduler.unstable_now, Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority, Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, Scheduler_NormalPriority = Scheduler.unstable_NormalPriority, Scheduler_LowPriority = Scheduler.unstable_LowPriority, Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
        {
          if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
            {
              throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
            }
          }
        }
        var fakeCallbackNode = {};
        var ImmediatePriority$1 = 99;
        var UserBlockingPriority$2 = 98;
        var NormalPriority$1 = 97;
        var LowPriority$1 = 96;
        var IdlePriority$1 = 95;
        var NoPriority$1 = 90;
        var shouldYield = Scheduler_shouldYield;
        var requestPaint = Scheduler_requestPaint !== void 0 ? Scheduler_requestPaint : function() {
        };
        var syncQueue = null;
        var immediateQueueCallbackNode = null;
        var isFlushingSyncQueue = false;
        var initialTimeMs$1 = Scheduler_now$1();
        var now = initialTimeMs$1 < 1e4 ? Scheduler_now$1 : function() {
          return Scheduler_now$1() - initialTimeMs$1;
        };
        function getCurrentPriorityLevel() {
          switch (Scheduler_getCurrentPriorityLevel()) {
            case Scheduler_ImmediatePriority:
              return ImmediatePriority$1;
            case Scheduler_UserBlockingPriority:
              return UserBlockingPriority$2;
            case Scheduler_NormalPriority:
              return NormalPriority$1;
            case Scheduler_LowPriority:
              return LowPriority$1;
            case Scheduler_IdlePriority:
              return IdlePriority$1;
            default: {
              {
                throw Error("Unknown priority level.");
              }
            }
          }
        }
        function reactPriorityToSchedulerPriority(reactPriorityLevel) {
          switch (reactPriorityLevel) {
            case ImmediatePriority$1:
              return Scheduler_ImmediatePriority;
            case UserBlockingPriority$2:
              return Scheduler_UserBlockingPriority;
            case NormalPriority$1:
              return Scheduler_NormalPriority;
            case LowPriority$1:
              return Scheduler_LowPriority;
            case IdlePriority$1:
              return Scheduler_IdlePriority;
            default: {
              {
                throw Error("Unknown priority level.");
              }
            }
          }
        }
        function runWithPriority$1(reactPriorityLevel, fn) {
          var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
          return Scheduler_runWithPriority(priorityLevel, fn);
        }
        function scheduleCallback(reactPriorityLevel, callback, options2) {
          var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
          return Scheduler_scheduleCallback(priorityLevel, callback, options2);
        }
        function scheduleSyncCallback(callback) {
          if (syncQueue === null) {
            syncQueue = [callback];
            immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
          } else {
            syncQueue.push(callback);
          }
          return fakeCallbackNode;
        }
        function cancelCallback(callbackNode) {
          if (callbackNode !== fakeCallbackNode) {
            Scheduler_cancelCallback(callbackNode);
          }
        }
        function flushSyncCallbackQueue() {
          if (immediateQueueCallbackNode !== null) {
            var node = immediateQueueCallbackNode;
            immediateQueueCallbackNode = null;
            Scheduler_cancelCallback(node);
          }
          flushSyncCallbackQueueImpl();
        }
        function flushSyncCallbackQueueImpl() {
          if (!isFlushingSyncQueue && syncQueue !== null) {
            isFlushingSyncQueue = true;
            var i = 0;
            {
              try {
                var _isSync2 = true;
                var _queue = syncQueue;
                runWithPriority$1(ImmediatePriority$1, function() {
                  for (; i < _queue.length; i++) {
                    var callback = _queue[i];
                    do {
                      callback = callback(_isSync2);
                    } while (callback !== null);
                  }
                });
                syncQueue = null;
              } catch (error2) {
                if (syncQueue !== null) {
                  syncQueue = syncQueue.slice(i + 1);
                }
                Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
                throw error2;
              } finally {
                isFlushingSyncQueue = false;
              }
            }
          }
        }
        var ReactVersion = "17.0.2";
        var NoMode = 0;
        var StrictMode = 1;
        var BlockingMode = 2;
        var ConcurrentMode = 4;
        var ProfileMode = 8;
        var DebugTracingMode = 16;
        var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
        var NoTransition = 0;
        function requestCurrentTransition() {
          return ReactCurrentBatchConfig.transition;
        }
        var ReactStrictModeWarnings = {
          recordUnsafeLifecycleWarnings: function(fiber, instance) {
          },
          flushPendingUnsafeLifecycleWarnings: function() {
          },
          recordLegacyContextWarning: function(fiber, instance) {
          },
          flushLegacyContextWarning: function() {
          },
          discardPendingWarnings: function() {
          }
        };
        {
          var findStrictRoot = function(fiber) {
            var maybeStrictRoot = null;
            var node = fiber;
            while (node !== null) {
              if (node.mode & StrictMode) {
                maybeStrictRoot = node;
              }
              node = node.return;
            }
            return maybeStrictRoot;
          };
          var setToSortedString = function(set2) {
            var array = [];
            set2.forEach(function(value) {
              array.push(value);
            });
            return array.sort().join(", ");
          };
          var pendingComponentWillMountWarnings = [];
          var pendingUNSAFE_ComponentWillMountWarnings = [];
          var pendingComponentWillReceivePropsWarnings = [];
          var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
          var pendingComponentWillUpdateWarnings = [];
          var pendingUNSAFE_ComponentWillUpdateWarnings = [];
          var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
              return;
            }
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
              pendingComponentWillMountWarnings.push(fiber);
            }
            if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === "function") {
              pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
            }
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
              pendingComponentWillReceivePropsWarnings.push(fiber);
            }
            if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
            }
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
              pendingComponentWillUpdateWarnings.push(fiber);
            }
            if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
              pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
            var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillMountWarnings.length > 0) {
              pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillMountWarnings = [];
            }
            var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
              pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillMountWarnings = [];
            }
            var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillReceivePropsWarnings.length > 0) {
              pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillReceivePropsWarnings = [];
            }
            var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            }
            var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillUpdateWarnings.length > 0) {
              pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillUpdateWarnings = [];
            }
            var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
              pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
            }
            if (UNSAFE_componentWillMountUniqueNames.size > 0) {
              var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
              error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
            }
            if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
              error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
            }
            if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
              error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
            }
            if (componentWillMountUniqueNames.size > 0) {
              var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
              warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
            }
            if (componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
              warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
            }
            if (componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
              warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
            }
          };
          var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
          var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
          ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
              return;
            }
            if (didWarnAboutLegacyContext.has(fiber.type)) {
              return;
            }
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
              if (warningsForRoot === void 0) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
              }
              warningsForRoot.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushLegacyContextWarning = function() {
            pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
              if (fiberArray.length === 0) {
                return;
              }
              var firstFiber = fiberArray[0];
              var uniqueNames = /* @__PURE__ */ new Set();
              fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentName(fiber.type) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
              } finally {
                resetCurrentFiber();
              }
            });
          };
          ReactStrictModeWarnings.discardPendingWarnings = function() {
            pendingComponentWillMountWarnings = [];
            pendingUNSAFE_ComponentWillMountWarnings = [];
            pendingComponentWillReceivePropsWarnings = [];
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            pendingComponentWillUpdateWarnings = [];
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
            pendingLegacyContextWarning = /* @__PURE__ */ new Map();
          };
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = _assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        var MAX_SIGNED_31_BIT_INT = 1073741823;
        var valueCursor = createCursor(null);
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var currentlyRenderingFiber = null;
        var lastContextDependency = null;
        var lastContextWithAllBitsObserved = null;
        var isDisallowedContextReadInDEV = false;
        function resetContextDependencies() {
          currentlyRenderingFiber = null;
          lastContextDependency = null;
          lastContextWithAllBitsObserved = null;
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function enterDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = true;
          }
        }
        function exitDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function pushProvider(providerFiber, nextValue) {
          var context = providerFiber.type._context;
          {
            push(valueCursor, context._currentValue, providerFiber);
            context._currentValue = nextValue;
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
        }
        function popProvider(providerFiber) {
          var currentValue = valueCursor.current;
          pop(valueCursor, providerFiber);
          var context = providerFiber.type._context;
          {
            context._currentValue = currentValue;
          }
        }
        function calculateChangedBits(context, newValue, oldValue) {
          if (objectIs(oldValue, newValue)) {
            return 0;
          } else {
            var changedBits = typeof context._calculateChangedBits === "function" ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
            {
              if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {
                error("calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
              }
            }
            return changedBits | 0;
          }
        }
        function scheduleWorkOnParentPath(parent, renderLanes2) {
          var node = parent;
          while (node !== null) {
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
              node.childLanes = mergeLanes(node.childLanes, renderLanes2);
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              }
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
              alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
            } else {
              break;
            }
            node = node.return;
          }
        }
        function propagateContextChange(workInProgress2, context, changedBits, renderLanes2) {
          var fiber = workInProgress2.child;
          if (fiber !== null) {
            fiber.return = workInProgress2;
          }
          while (fiber !== null) {
            var nextFiber = void 0;
            var list = fiber.dependencies;
            if (list !== null) {
              nextFiber = fiber.child;
              var dependency = list.firstContext;
              while (dependency !== null) {
                if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
                  if (fiber.tag === ClassComponent) {
                    var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes2));
                    update.tag = ForceUpdate;
                    enqueueUpdate(fiber, update);
                  }
                  fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                  var alternate = fiber.alternate;
                  if (alternate !== null) {
                    alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                  }
                  scheduleWorkOnParentPath(fiber.return, renderLanes2);
                  list.lanes = mergeLanes(list.lanes, renderLanes2);
                  break;
                }
                dependency = dependency.next;
              }
            } else if (fiber.tag === ContextProvider) {
              nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
            } else {
              nextFiber = fiber.child;
            }
            if (nextFiber !== null) {
              nextFiber.return = fiber;
            } else {
              nextFiber = fiber;
              while (nextFiber !== null) {
                if (nextFiber === workInProgress2) {
                  nextFiber = null;
                  break;
                }
                var sibling = nextFiber.sibling;
                if (sibling !== null) {
                  sibling.return = nextFiber.return;
                  nextFiber = sibling;
                  break;
                }
                nextFiber = nextFiber.return;
              }
            }
            fiber = nextFiber;
          }
        }
        function prepareToReadContext(workInProgress2, renderLanes2) {
          currentlyRenderingFiber = workInProgress2;
          lastContextDependency = null;
          lastContextWithAllBitsObserved = null;
          var dependencies = workInProgress2.dependencies;
          if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
              if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                markWorkInProgressReceivedUpdate();
              }
              dependencies.firstContext = null;
            }
          }
        }
        function readContext(context, observedBits) {
          {
            if (isDisallowedContextReadInDEV) {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          if (lastContextWithAllBitsObserved === context)
            ;
          else if (observedBits === false || observedBits === 0)
            ;
          else {
            var resolvedObservedBits;
            if (typeof observedBits !== "number" || observedBits === MAX_SIGNED_31_BIT_INT) {
              lastContextWithAllBitsObserved = context;
              resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
            } else {
              resolvedObservedBits = observedBits;
            }
            var contextItem = {
              context,
              observedBits: resolvedObservedBits,
              next: null
            };
            if (lastContextDependency === null) {
              if (!(currentlyRenderingFiber !== null)) {
                {
                  throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                }
              }
              lastContextDependency = contextItem;
              currentlyRenderingFiber.dependencies = {
                lanes: NoLanes,
                firstContext: contextItem,
                responders: null
              };
            } else {
              lastContextDependency = lastContextDependency.next = contextItem;
            }
          }
          return context._currentValue;
        }
        var UpdateState = 0;
        var ReplaceState = 1;
        var ForceUpdate = 2;
        var CaptureUpdate = 3;
        var hasForceUpdate = false;
        var didWarnUpdateInsideUpdate;
        var currentlyProcessingQueue;
        {
          didWarnUpdateInsideUpdate = false;
          currentlyProcessingQueue = null;
        }
        function initializeUpdateQueue(fiber) {
          var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
              pending: null
            },
            effects: null
          };
          fiber.updateQueue = queue;
        }
        function cloneUpdateQueue(current2, workInProgress2) {
          var queue = workInProgress2.updateQueue;
          var currentQueue = current2.updateQueue;
          if (queue === currentQueue) {
            var clone = {
              baseState: currentQueue.baseState,
              firstBaseUpdate: currentQueue.firstBaseUpdate,
              lastBaseUpdate: currentQueue.lastBaseUpdate,
              shared: currentQueue.shared,
              effects: currentQueue.effects
            };
            workInProgress2.updateQueue = clone;
          }
        }
        function createUpdate(eventTime, lane) {
          var update = {
            eventTime,
            lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
          };
          return update;
        }
        function enqueueUpdate(fiber, update) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return;
          }
          var sharedQueue = updateQueue.shared;
          var pending = sharedQueue.pending;
          if (pending === null) {
            update.next = update;
          } else {
            update.next = pending.next;
            pending.next = update;
          }
          sharedQueue.pending = update;
          {
            if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
              error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
              didWarnUpdateInsideUpdate = true;
            }
          }
        }
        function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
          var queue = workInProgress2.updateQueue;
          var current2 = workInProgress2.alternate;
          if (current2 !== null) {
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var newFirst = null;
              var newLast = null;
              var firstBaseUpdate = queue.firstBaseUpdate;
              if (firstBaseUpdate !== null) {
                var update = firstBaseUpdate;
                do {
                  var clone = {
                    eventTime: update.eventTime,
                    lane: update.lane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  if (newLast === null) {
                    newFirst = newLast = clone;
                  } else {
                    newLast.next = clone;
                    newLast = clone;
                  }
                  update = update.next;
                } while (update !== null);
                if (newLast === null) {
                  newFirst = newLast = capturedUpdate;
                } else {
                  newLast.next = capturedUpdate;
                  newLast = capturedUpdate;
                }
              } else {
                newFirst = newLast = capturedUpdate;
              }
              queue = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = queue;
              return;
            }
          }
          var lastBaseUpdate = queue.lastBaseUpdate;
          if (lastBaseUpdate === null) {
            queue.firstBaseUpdate = capturedUpdate;
          } else {
            lastBaseUpdate.next = capturedUpdate;
          }
          queue.lastBaseUpdate = capturedUpdate;
        }
        function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
          switch (update.tag) {
            case ReplaceState: {
              var payload = update.payload;
              if (typeof payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                var nextState = payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictMode) {
                    disableLogs();
                    try {
                      payload.call(instance, prevState, nextProps);
                    } finally {
                      reenableLogs();
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
                return nextState;
              }
              return payload;
            }
            case CaptureUpdate: {
              workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
            }
            case UpdateState: {
              var _payload = update.payload;
              var partialState;
              if (typeof _payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                partialState = _payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictMode) {
                    disableLogs();
                    try {
                      _payload.call(instance, prevState, nextProps);
                    } finally {
                      reenableLogs();
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
              } else {
                partialState = _payload;
              }
              if (partialState === null || partialState === void 0) {
                return prevState;
              }
              return _assign({}, prevState, partialState);
            }
            case ForceUpdate: {
              hasForceUpdate = true;
              return prevState;
            }
          }
          return prevState;
        }
        function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
          var queue = workInProgress2.updateQueue;
          hasForceUpdate = false;
          {
            currentlyProcessingQueue = queue.shared;
          }
          var firstBaseUpdate = queue.firstBaseUpdate;
          var lastBaseUpdate = queue.lastBaseUpdate;
          var pendingQueue = queue.shared.pending;
          if (pendingQueue !== null) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            if (lastBaseUpdate === null) {
              firstBaseUpdate = firstPendingUpdate;
            } else {
              lastBaseUpdate.next = firstPendingUpdate;
            }
            lastBaseUpdate = lastPendingUpdate;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
              if (currentLastBaseUpdate !== lastBaseUpdate) {
                if (currentLastBaseUpdate === null) {
                  currentQueue.firstBaseUpdate = firstPendingUpdate;
                } else {
                  currentLastBaseUpdate.next = firstPendingUpdate;
                }
                currentQueue.lastBaseUpdate = lastPendingUpdate;
              }
            }
          }
          if (firstBaseUpdate !== null) {
            var newState = queue.baseState;
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
              var updateLane = update.lane;
              var updateEventTime = update.eventTime;
              if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                var clone = {
                  eventTime: updateEventTime,
                  lane: updateLane,
                  tag: update.tag,
                  payload: update.payload,
                  callback: update.callback,
                  next: null
                };
                if (newLastBaseUpdate === null) {
                  newFirstBaseUpdate = newLastBaseUpdate = clone;
                  newBaseState = newState;
                } else {
                  newLastBaseUpdate = newLastBaseUpdate.next = clone;
                }
                newLanes = mergeLanes(newLanes, updateLane);
              } else {
                if (newLastBaseUpdate !== null) {
                  var _clone = {
                    eventTime: updateEventTime,
                    lane: NoLane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                }
                newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance);
                var callback = update.callback;
                if (callback !== null) {
                  workInProgress2.flags |= Callback;
                  var effects = queue.effects;
                  if (effects === null) {
                    queue.effects = [update];
                  } else {
                    effects.push(update);
                  }
                }
              }
              update = update.next;
              if (update === null) {
                pendingQueue = queue.shared.pending;
                if (pendingQueue === null) {
                  break;
                } else {
                  var _lastPendingUpdate = pendingQueue;
                  var _firstPendingUpdate = _lastPendingUpdate.next;
                  _lastPendingUpdate.next = null;
                  update = _firstPendingUpdate;
                  queue.lastBaseUpdate = _lastPendingUpdate;
                  queue.shared.pending = null;
                }
              }
            } while (true);
            if (newLastBaseUpdate === null) {
              newBaseState = newState;
            }
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate;
            markSkippedUpdateLanes(newLanes);
            workInProgress2.lanes = newLanes;
            workInProgress2.memoizedState = newState;
          }
          {
            currentlyProcessingQueue = null;
          }
        }
        function callCallback(callback, context) {
          if (!(typeof callback === "function")) {
            {
              throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
            }
          }
          callback.call(context);
        }
        function resetHasForceUpdateBeforeProcessing() {
          hasForceUpdate = false;
        }
        function checkHasForceUpdateAfterProcessing() {
          return hasForceUpdate;
        }
        function commitUpdateQueue(finishedWork, finishedQueue, instance) {
          var effects = finishedQueue.effects;
          finishedQueue.effects = null;
          if (effects !== null) {
            for (var i = 0; i < effects.length; i++) {
              var effect = effects[i];
              var callback = effect.callback;
              if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
              }
            }
          }
        }
        var fakeInternalInstance = {};
        var isArray = Array.isArray;
        var emptyRefsObject = new React2.Component().refs;
        var didWarnAboutStateAssignmentForComponent;
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentName(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
          Object.defineProperty(fakeInternalInstance, "_processChildContext", {
            enumerable: false,
            value: function() {
              {
                {
                  throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
                }
              }
            }
          });
          Object.freeze(fakeInternalInstance);
        }
        function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
          var prevState = workInProgress2.memoizedState;
          {
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                getDerivedStateFromProps(nextProps, prevState);
              } finally {
                reenableLogs();
              }
            }
          }
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var memoizedState = partialState === null || partialState === void 0 ? prevState : _assign({}, prevState, partialState);
          workInProgress2.memoizedState = memoizedState;
          if (workInProgress2.lanes === NoLanes) {
            var updateQueue = workInProgress2.updateQueue;
            updateQueue.baseState = memoizedState;
          }
        }
        var classComponentUpdater = {
          isMounted,
          enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "setState");
              }
              update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "replaceState");
              }
              update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          },
          enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "forceUpdate");
              }
              update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          }
        };
        function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
          var instance = workInProgress2.stateNode;
          if (typeof instance.shouldComponentUpdate === "function") {
            {
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally {
                  reenableLogs();
                }
              }
            }
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            {
              if (shouldUpdate === void 0) {
                error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentName(ctor) || "Component");
              }
            }
            return shouldUpdate;
          }
          if (ctor.prototype && ctor.prototype.isPureReactComponent) {
            return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
          }
          return true;
        }
        function checkClassInstance(workInProgress2, ctor, newProps) {
          var instance = workInProgress2.stateNode;
          {
            var name = getComponentName(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentName(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentName(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function adoptClassInstance(workInProgress2, instance) {
          instance.updater = classComponentUpdater;
          workInProgress2.stateNode = instance;
          set(instance, workInProgress2);
          {
            instance._reactInternalInstance = fakeInternalInstance;
          }
        }
        function constructClassInstance(workInProgress2, ctor, props) {
          var isLegacyContextConsumer = false;
          var unmaskedContext = emptyContextObject;
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
          }
          {
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                new ctor(props, context);
              } finally {
                reenableLogs();
              }
            }
          }
          var instance = new ctor(props, context);
          var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
          adoptClassInstance(workInProgress2, instance);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
              var componentName = getComponentName(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentName(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          if (isLegacyContextConsumer) {
            cacheContext(workInProgress2, unmaskedContext, context);
          }
          return instance;
        }
        function callComponentWillMount(workInProgress2, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentName(workInProgress2.type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
          var oldState = instance.state;
          if (typeof instance.componentWillReceiveProps === "function") {
            instance.componentWillReceiveProps(newProps, nextContext);
          }
          if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
            instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
          }
          if (instance.state !== oldState) {
            {
              var componentName = getComponentName(workInProgress2.type) || "Component";
              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
              }
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          {
            checkClassInstance(workInProgress2, ctor, newProps);
          }
          var instance = workInProgress2.stateNode;
          instance.props = newProps;
          instance.state = workInProgress2.memoizedState;
          instance.refs = emptyRefsObject;
          initializeUpdateQueue(workInProgress2);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            instance.context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentName(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
            if (workInProgress2.mode & StrictMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
            }
            {
              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
            }
          }
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          instance.state = workInProgress2.memoizedState;
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress2, instance);
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof instance.componentDidMount === "function") {
            workInProgress2.flags |= Update;
          }
        }
        function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          var oldProps = workInProgress2.memoizedProps;
          instance.props = oldProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              if (typeof instance.componentWillMount === "function") {
                instance.componentWillMount();
              }
              if (typeof instance.UNSAFE_componentWillMount === "function") {
                instance.UNSAFE_componentWillMount();
              }
            }
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
          } else {
            if (typeof instance.componentDidMount === "function") {
              workInProgress2.flags |= Update;
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          cloneUpdateQueue(current2, workInProgress2);
          var unresolvedOldProps = workInProgress2.memoizedProps;
          var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
          instance.props = oldProps;
          var unresolvedNewProps = workInProgress2.pendingProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
              if (typeof instance.componentWillUpdate === "function") {
                instance.componentWillUpdate(newProps, newState, nextContext);
              }
              if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
              }
            }
            if (typeof instance.componentDidUpdate === "function") {
              workInProgress2.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              workInProgress2.flags |= Snapshot;
            }
          } else {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        var didWarnAboutMaps;
        var didWarnAboutGenerators;
        var didWarnAboutStringRefs;
        var ownerHasKeyUseWarning;
        var ownerHasFunctionTypeWarning;
        var warnForMissingKey = function(child, returnFiber) {
        };
        {
          didWarnAboutMaps = false;
          didWarnAboutGenerators = false;
          didWarnAboutStringRefs = {};
          ownerHasKeyUseWarning = {};
          ownerHasFunctionTypeWarning = {};
          warnForMissingKey = function(child, returnFiber) {
            if (child === null || typeof child !== "object") {
              return;
            }
            if (!child._store || child._store.validated || child.key != null) {
              return;
            }
            if (!(typeof child._store === "object")) {
              {
                throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            child._store.validated = true;
            var componentName = getComponentName(returnFiber.type) || "Component";
            if (ownerHasKeyUseWarning[componentName]) {
              return;
            }
            ownerHasKeyUseWarning[componentName] = true;
            error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
          };
        }
        var isArray$1 = Array.isArray;
        function coerceRef(returnFiber, current2, element) {
          var mixedRef = element.ref;
          if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            {
              if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentName(returnFiber.type) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                  {
                    error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                  }
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
            if (element._owner) {
              var owner = element._owner;
              var inst;
              if (owner) {
                var ownerFiber = owner;
                if (!(ownerFiber.tag === ClassComponent)) {
                  {
                    throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                  }
                }
                inst = ownerFiber.stateNode;
              }
              if (!inst) {
                {
                  throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              var stringRef = "" + mixedRef;
              if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                return current2.ref;
              }
              var ref = function(value) {
                var refs = inst.refs;
                if (refs === emptyRefsObject) {
                  refs = inst.refs = {};
                }
                if (value === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value;
                }
              };
              ref._stringRef = stringRef;
              return ref;
            } else {
              if (!(typeof mixedRef === "string")) {
                {
                  throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                }
              }
              if (!element._owner) {
                {
                  throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
                }
              }
            }
          }
          return mixedRef;
        }
        function throwOnInvalidObjectType(returnFiber, newChild) {
          if (returnFiber.type !== "textarea") {
            {
              {
                throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + "). If you meant to render a collection of children, use an array instead.");
              }
            }
          }
        }
        function warnOnFunctionType(returnFiber) {
          {
            var componentName = getComponentName(returnFiber.type) || "Component";
            if (ownerHasFunctionTypeWarning[componentName]) {
              return;
            }
            ownerHasFunctionTypeWarning[componentName] = true;
            error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
          }
        }
        function ChildReconciler(shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              return;
            }
            var last = returnFiber.lastEffect;
            if (last !== null) {
              last.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
            childToDelete.nextEffect = null;
            childToDelete.flags = Deletion;
          }
          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              return null;
            }
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }
          function mapRemainingChildren(returnFiber, currentFirstChild) {
            var existingChildren = /* @__PURE__ */ new Map();
            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }
          function useFiber(fiber, pendingProps) {
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
          }
          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              return lastPlacedIndex;
            }
            var current2 = newFiber.alternate;
            if (current2 !== null) {
              var oldIndex = current2.index;
              if (oldIndex < lastPlacedIndex) {
                newFiber.flags = Placement;
                return lastPlacedIndex;
              } else {
                return oldIndex;
              }
            } else {
              newFiber.flags = Placement;
              return lastPlacedIndex;
            }
          }
          function placeSingleChild(newFiber) {
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.flags = Placement;
            }
            return newFiber;
          }
          function updateTextNode(returnFiber, current2, textContent, lanes) {
            if (current2 === null || current2.tag !== HostText) {
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, textContent);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateElement(returnFiber, current2, element, lanes) {
            if (current2 !== null) {
              if (current2.elementType === element.type || isCompatibleFamilyForHotReloading(current2, element)) {
                var existing = useFiber(current2, element.props);
                existing.ref = coerceRef(returnFiber, current2, element);
                existing.return = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              }
            }
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current2, element);
            created.return = returnFiber;
            return created;
          }
          function updatePortal(returnFiber, current2, portal, lanes) {
            if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, portal.children || []);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateFragment2(returnFiber, current2, fragment, lanes, key) {
            if (current2 === null || current2.tag !== Fragment) {
              var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, fragment);
              existing.return = returnFiber;
              return existing;
            }
          }
          function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" || typeof newChild === "number") {
              var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                  _created.ref = coerceRef(returnFiber, null, newChild);
                  _created.return = returnFiber;
                  return _created;
                }
                case REACT_PORTAL_TYPE: {
                  var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                  _created2.return = returnFiber;
                  return _created2;
                }
              }
              if (isArray$1(newChild) || getIteratorFn(newChild)) {
                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                _created3.return = returnFiber;
                return _created3;
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" || typeof newChild === "number") {
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  if (newChild.key === key) {
                    if (newChild.type === REACT_FRAGMENT_TYPE) {
                      return updateFragment2(returnFiber, oldFiber, newChild.props.children, lanes, key);
                    }
                    return updateElement(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_PORTAL_TYPE: {
                  if (newChild.key === key) {
                    return updatePortal(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
              }
              if (isArray$1(newChild) || getIteratorFn(newChild)) {
                if (key !== null) {
                  return null;
                }
                return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" || typeof newChild === "number") {
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  if (newChild.type === REACT_FRAGMENT_TYPE) {
                    return updateFragment2(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
                  }
                  return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                }
                case REACT_PORTAL_TYPE: {
                  var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
              }
              if (isArray$1(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber3 = existingChildren.get(newIdx) || null;
                return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function warnOnInvalidKey(child, knownKeys, returnFiber) {
            {
              if (typeof child !== "object" || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child, returnFiber);
                  var key = child.key;
                  if (typeof key !== "string") {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = /* @__PURE__ */ new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                  break;
              }
            }
            return knownKeys;
          }
          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            {
              var knownKeys = null;
              for (var i = 0; i < newChildren.length; i++) {
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                if (_newFiber === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
              if (_newFiber2 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            return resultingFirstChild;
          }
          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (!(typeof iteratorFn === "function")) {
              {
                throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            {
              if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) {
                  error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                }
                didWarnAboutGenerators = true;
              }
              if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) {
                  error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                }
                didWarnAboutMaps = true;
              }
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (!(newChildren != null)) {
              {
                throw Error("An iterable object provided no iterator.");
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (step.done) {
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, lanes);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            return resultingFirstChild;
          }
          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, textContent);
              existing.return = returnFiber;
              return existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                switch (child.tag) {
                  case Fragment: {
                    if (element.type === REACT_FRAGMENT_TYPE) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var existing = useFiber(child, element.props.children);
                      existing.return = returnFiber;
                      {
                        existing._debugSource = element._source;
                        existing._debugOwner = element._owner;
                      }
                      return existing;
                    }
                    break;
                  }
                  case Block:
                  default: {
                    if (child.elementType === element.type || isCompatibleFamilyForHotReloading(child, element)) {
                      deleteRemainingChildren(returnFiber, child.sibling);
                      var _existing3 = useFiber(child, element.props);
                      _existing3.ref = coerceRef(returnFiber, child, element);
                      _existing3.return = returnFiber;
                      {
                        _existing3._debugSource = element._source;
                        _existing3._debugOwner = element._owner;
                      }
                      return _existing3;
                    }
                    break;
                  }
                }
                deleteRemainingChildren(returnFiber, child);
                break;
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
              var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
              created.return = returnFiber;
              return created;
            } else {
              var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
              _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
              _created4.return = returnFiber;
              return _created4;
            }
          }
          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, portal.children || []);
                  existing.return = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) {
              newChild = newChild.props.children;
            }
            var isObject = typeof newChild === "object" && newChild !== null;
            if (isObject) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
              }
            }
            if (typeof newChild === "string" || typeof newChild === "number") {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            }
            if (isArray$1(newChild)) {
              return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
            }
            if (getIteratorFn(newChild)) {
              return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
            }
            if (isObject) {
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            if (typeof newChild === "undefined" && !isUnkeyedTopLevelFragment) {
              switch (returnFiber.tag) {
                case ClassComponent: {
                  {
                    var instance = returnFiber.stateNode;
                    if (instance.render._isMockFunction) {
                      break;
                    }
                  }
                }
                case Block:
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  {
                    {
                      throw Error((getComponentName(returnFiber.type) || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
                    }
                  }
                }
              }
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }
          return reconcileChildFibers2;
        }
        var reconcileChildFibers = ChildReconciler(true);
        var mountChildFibers = ChildReconciler(false);
        function cloneChildFibers(current2, workInProgress2) {
          if (!(current2 === null || workInProgress2.child === current2.child)) {
            {
              throw Error("Resuming work not yet implemented.");
            }
          }
          if (workInProgress2.child === null) {
            return;
          }
          var currentChild = workInProgress2.child;
          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
          workInProgress2.child = newChild;
          newChild.return = workInProgress2;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress2;
          }
          newChild.sibling = null;
        }
        function resetChildFibers(workInProgress2, lanes) {
          var child = workInProgress2.child;
          while (child !== null) {
            resetWorkInProgress(child, lanes);
            child = child.sibling;
          }
        }
        var NO_CONTEXT = {};
        var contextStackCursor$1 = createCursor(NO_CONTEXT);
        var contextFiberStackCursor = createCursor(NO_CONTEXT);
        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
        function requiredContext(c) {
          if (!(c !== NO_CONTEXT)) {
            {
              throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          return c;
        }
        function getRootHostContainer() {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          return rootInstance;
        }
        function pushHostContainer(fiber, nextRootInstance) {
          push(rootInstanceStackCursor, nextRootInstance, fiber);
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, NO_CONTEXT, fiber);
          var nextRootContext = getRootHostContext(nextRootInstance);
          pop(contextStackCursor$1, fiber);
          push(contextStackCursor$1, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
          pop(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
          var context = requiredContext(contextStackCursor$1.current);
          return context;
        }
        function pushHostContext(fiber) {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          var context = requiredContext(contextStackCursor$1.current);
          var nextContext = getChildHostContext(context, fiber.type);
          if (context === nextContext) {
            return;
          }
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, nextContext, fiber);
        }
        function popHostContext(fiber) {
          if (contextFiberStackCursor.current !== fiber) {
            return;
          }
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
        }
        var DefaultSuspenseContext = 0;
        var SubtreeSuspenseContextMask = 1;
        var InvisibleParentSuspenseContext = 1;
        var ForceSuspenseFallback = 2;
        var suspenseStackCursor = createCursor(DefaultSuspenseContext);
        function hasSuspenseContext(parentContext, flag) {
          return (parentContext & flag) !== 0;
        }
        function setDefaultShallowSuspenseContext(parentContext) {
          return parentContext & SubtreeSuspenseContextMask;
        }
        function setShallowSuspenseContext(parentContext, shallowContext) {
          return parentContext & SubtreeSuspenseContextMask | shallowContext;
        }
        function addSubtreeSuspenseContext(parentContext, subtreeContext) {
          return parentContext | subtreeContext;
        }
        function pushSuspenseContext(fiber, newContext) {
          push(suspenseStackCursor, newContext, fiber);
        }
        function popSuspenseContext(fiber) {
          pop(suspenseStackCursor, fiber);
        }
        function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
          var nextState = workInProgress2.memoizedState;
          if (nextState !== null) {
            if (nextState.dehydrated !== null) {
              return true;
            }
            return false;
          }
          var props = workInProgress2.memoizedProps;
          if (props.fallback === void 0) {
            return false;
          }
          if (props.unstable_avoidThisFallback !== true) {
            return true;
          }
          if (hasInvisibleParent) {
            return false;
          }
          return true;
        }
        function findFirstSuspended(row) {
          var node = row;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                var dehydrated = state.dehydrated;
                if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                  return node;
                }
              }
            } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
              var didSuspend = (node.flags & DidCapture) !== NoFlags;
              if (didSuspend) {
                return node;
              }
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === row) {
              return null;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === row) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        var NoFlags$1 = 0;
        var HasEffect = 1;
        var Layout = 2;
        var Passive$1 = 4;
        var hydrationParentFiber = null;
        var nextHydratableInstance = null;
        var isHydrating = false;
        function enterHydrationState(fiber) {
          var parentInstance = fiber.stateNode.containerInfo;
          nextHydratableInstance = getFirstHydratableChild(parentInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          return true;
        }
        function deleteHydratableInstance(returnFiber, instance) {
          {
            switch (returnFiber.tag) {
              case HostRoot:
                didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                break;
              case HostComponent:
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                break;
            }
          }
          var childToDelete = createFiberFromHostInstanceForDeletion();
          childToDelete.stateNode = instance;
          childToDelete.return = returnFiber;
          childToDelete.flags = Deletion;
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = childToDelete;
            returnFiber.lastEffect = childToDelete;
          } else {
            returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
          }
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
          fiber.flags = fiber.flags & ~Hydrating | Placement;
          {
            switch (returnFiber.tag) {
              case HostRoot: {
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch (fiber.tag) {
                  case HostComponent:
                    var type = fiber.type;
                    var props = fiber.pendingProps;
                    didNotFindHydratableContainerInstance(parentContainer, type);
                    break;
                  case HostText:
                    var text = fiber.pendingProps;
                    didNotFindHydratableContainerTextInstance(parentContainer, text);
                    break;
                }
                break;
              }
              case HostComponent: {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch (fiber.tag) {
                  case HostComponent:
                    var _type = fiber.type;
                    var _props = fiber.pendingProps;
                    didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
                    break;
                  case HostText:
                    var _text = fiber.pendingProps;
                    didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                    break;
                  case SuspenseComponent:
                    didNotFindHydratableSuspenseInstance(parentType, parentProps);
                    break;
                }
                break;
              }
              default:
                return;
            }
          }
        }
        function tryHydrate(fiber, nextInstance) {
          switch (fiber.tag) {
            case HostComponent: {
              var type = fiber.type;
              var props = fiber.pendingProps;
              var instance = canHydrateInstance(nextInstance, type);
              if (instance !== null) {
                fiber.stateNode = instance;
                return true;
              }
              return false;
            }
            case HostText: {
              var text = fiber.pendingProps;
              var textInstance = canHydrateTextInstance(nextInstance, text);
              if (textInstance !== null) {
                fiber.stateNode = textInstance;
                return true;
              }
              return false;
            }
            case SuspenseComponent: {
              return false;
            }
            default:
              return false;
          }
        }
        function tryToClaimNextHydratableInstance(fiber) {
          if (!isHydrating) {
            return;
          }
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
          }
          hydrationParentFiber = fiber;
          nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
          var instance = fiber.stateNode;
          var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
          fiber.updateQueue = updatePayload;
          if (updatePayload !== null) {
            return true;
          }
          return false;
        }
        function prepareToHydrateHostTextInstance(fiber) {
          var textInstance = fiber.stateNode;
          var textContent = fiber.memoizedProps;
          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
          {
            if (shouldUpdate) {
              var returnFiber = hydrationParentFiber;
              if (returnFiber !== null) {
                switch (returnFiber.tag) {
                  case HostRoot: {
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                    break;
                  }
                  case HostComponent: {
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                    break;
                  }
                }
              }
            }
          }
          return shouldUpdate;
        }
        function skipPastDehydratedSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            {
              throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
        }
        function popToNextHostParent(fiber) {
          var parent = fiber.return;
          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
            parent = parent.return;
          }
          hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
          if (fiber !== hydrationParentFiber) {
            return false;
          }
          if (!isHydrating) {
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
          }
          var type = fiber.type;
          if (fiber.tag !== HostComponent || type !== "head" && type !== "body" && !shouldSetTextContent(type, fiber.memoizedProps)) {
            var nextInstance = nextHydratableInstance;
            while (nextInstance) {
              deleteHydratableInstance(fiber, nextInstance);
              nextInstance = getNextHydratableSibling(nextInstance);
            }
          }
          popToNextHostParent(fiber);
          if (fiber.tag === SuspenseComponent) {
            nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
          } else {
            nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
          }
          return true;
        }
        function resetHydrationState() {
          hydrationParentFiber = null;
          nextHydratableInstance = null;
          isHydrating = false;
        }
        function getIsHydrating() {
          return isHydrating;
        }
        var workInProgressSources = [];
        var rendererSigil$1;
        {
          rendererSigil$1 = {};
        }
        function markSourceAsDirty(mutableSource) {
          workInProgressSources.push(mutableSource);
        }
        function resetWorkInProgressVersions() {
          for (var i = 0; i < workInProgressSources.length; i++) {
            var mutableSource = workInProgressSources[i];
            {
              mutableSource._workInProgressVersionPrimary = null;
            }
          }
          workInProgressSources.length = 0;
        }
        function getWorkInProgressVersion(mutableSource) {
          {
            return mutableSource._workInProgressVersionPrimary;
          }
        }
        function setWorkInProgressVersion(mutableSource, version) {
          {
            mutableSource._workInProgressVersionPrimary = version;
          }
          workInProgressSources.push(mutableSource);
        }
        function warnAboutMultipleRenderersDEV(mutableSource) {
          {
            {
              if (mutableSource._currentPrimaryRenderer == null) {
                mutableSource._currentPrimaryRenderer = rendererSigil$1;
              } else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) {
                error("Detected multiple renderers concurrently rendering the same mutable source. This is currently unsupported.");
              }
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
        var didWarnAboutMismatchedHooksForComponent;
        var didWarnAboutUseOpaqueIdentifier;
        {
          didWarnAboutUseOpaqueIdentifier = {};
          didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
        }
        var renderLanes = NoLanes;
        var currentlyRenderingFiber$1 = null;
        var currentHook = null;
        var workInProgressHook = null;
        var didScheduleRenderPhaseUpdate = false;
        var didScheduleRenderPhaseUpdateDuringThisPass = false;
        var RE_RENDER_LIMIT = 25;
        var currentHookNameInDev = null;
        var hookTypesDev = null;
        var hookTypesUpdateIndexDev = -1;
        var ignorePreviousDependencies = false;
        function mountHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev === null) {
              hookTypesDev = [hookName];
            } else {
              hookTypesDev.push(hookName);
            }
          }
        }
        function updateHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev !== null) {
              hookTypesUpdateIndexDev++;
              if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                warnOnHookMismatchInDev(hookName);
              }
            }
          }
        }
        function checkDepsAreArrayDev(deps) {
          {
            if (deps !== void 0 && deps !== null && !Array.isArray(deps)) {
              error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
            }
          }
        }
        function warnOnHookMismatchInDev(currentHookName) {
          {
            var componentName = getComponentName(currentlyRenderingFiber$1.type);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
              didWarnAboutMismatchedHooksForComponent.add(componentName);
              if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
                  var oldHookName = hookTypesDev[i];
                  var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                  var row = i + 1 + ". " + oldHookName;
                  while (row.length < secondColumnStart) {
                    row += " ";
                  }
                  row += newHookName + "\n";
                  table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
              }
            }
          }
        }
        function throwInvalidHookError() {
          {
            {
              throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          {
            if (ignorePreviousDependencies) {
              return false;
            }
          }
          if (prevDeps === null) {
            {
              error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
          renderLanes = nextRenderLanes;
          currentlyRenderingFiber$1 = workInProgress2;
          {
            hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
            hookTypesUpdateIndexDev = -1;
            ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
          }
          workInProgress2.memoizedState = null;
          workInProgress2.updateQueue = null;
          workInProgress2.lanes = NoLanes;
          {
            if (current2 !== null && current2.memoizedState !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
            } else if (hookTypesDev !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
            } else {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
            }
          }
          var children = Component(props, secondArg);
          if (didScheduleRenderPhaseUpdateDuringThisPass) {
            var numberOfReRenders = 0;
            do {
              didScheduleRenderPhaseUpdateDuringThisPass = false;
              if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
                {
                  throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                }
              }
              numberOfReRenders += 1;
              {
                ignorePreviousDependencies = false;
              }
              currentHook = null;
              workInProgressHook = null;
              workInProgress2.updateQueue = null;
              {
                hookTypesUpdateIndexDev = -1;
              }
              ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
              children = Component(props, secondArg);
            } while (didScheduleRenderPhaseUpdateDuringThisPass);
          }
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          {
            workInProgress2._debugHookTypes = hookTypesDev;
          }
          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            currentHookNameInDev = null;
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
          }
          didScheduleRenderPhaseUpdate = false;
          if (!!didRenderTooFewHooks) {
            {
              throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
            }
          }
          return children;
        }
        function bailoutHooks(current2, workInProgress2, lanes) {
          workInProgress2.updateQueue = current2.updateQueue;
          workInProgress2.flags &= ~(Passive | Update);
          current2.lanes = removeLanes(current2.lanes, lanes);
        }
        function resetHooksAfterThrow() {
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          if (didScheduleRenderPhaseUpdate) {
            var hook = currentlyRenderingFiber$1.memoizedState;
            while (hook !== null) {
              var queue = hook.queue;
              if (queue !== null) {
                queue.pending = null;
              }
              hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
          }
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            currentHookNameInDev = null;
            isUpdatingOpaqueValueInRenderPhase = false;
          }
          didScheduleRenderPhaseUpdateDuringThisPass = false;
        }
        function mountWorkInProgressHook() {
          var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
          };
          if (workInProgressHook === null) {
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
          } else {
            workInProgressHook = workInProgressHook.next = hook;
          }
          return workInProgressHook;
        }
        function updateWorkInProgressHook() {
          var nextCurrentHook;
          if (currentHook === null) {
            var current2 = currentlyRenderingFiber$1.alternate;
            if (current2 !== null) {
              nextCurrentHook = current2.memoizedState;
            } else {
              nextCurrentHook = null;
            }
          } else {
            nextCurrentHook = currentHook.next;
          }
          var nextWorkInProgressHook;
          if (workInProgressHook === null) {
            nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
          } else {
            nextWorkInProgressHook = workInProgressHook.next;
          }
          if (nextWorkInProgressHook !== null) {
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
          } else {
            if (!(nextCurrentHook !== null)) {
              {
                throw Error("Rendered more hooks than during the previous render.");
              }
            }
            currentHook = nextCurrentHook;
            var newHook = {
              memoizedState: currentHook.memoizedState,
              baseState: currentHook.baseState,
              baseQueue: currentHook.baseQueue,
              queue: currentHook.queue,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            } else {
              workInProgressHook = workInProgressHook.next = newHook;
            }
          }
          return workInProgressHook;
        }
        function createFunctionComponentUpdateQueue() {
          return {
            lastEffect: null
          };
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function mountReducer(reducer, initialArg, init) {
          var hook = mountWorkInProgressHook();
          var initialState;
          if (init !== void 0) {
            initialState = init(initialArg);
          } else {
            initialState = initialArg;
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
          };
          var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (!(queue !== null)) {
            {
              throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
            }
          }
          queue.lastRenderedReducer = reducer;
          var current2 = currentHook;
          var baseQueue = current2.baseQueue;
          var pendingQueue = queue.pending;
          if (pendingQueue !== null) {
            if (baseQueue !== null) {
              var baseFirst = baseQueue.next;
              var pendingFirst = pendingQueue.next;
              baseQueue.next = pendingFirst;
              pendingQueue.next = baseFirst;
            }
            {
              if (current2.baseQueue !== baseQueue) {
                error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
              }
            }
            current2.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
          }
          if (baseQueue !== null) {
            var first = baseQueue.next;
            var newState = current2.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
              var updateLane = update.lane;
              if (!isSubsetOfLanes(renderLanes, updateLane)) {
                var clone = {
                  lane: updateLane,
                  action: update.action,
                  eagerReducer: update.eagerReducer,
                  eagerState: update.eagerState,
                  next: null
                };
                if (newBaseQueueLast === null) {
                  newBaseQueueFirst = newBaseQueueLast = clone;
                  newBaseState = newState;
                } else {
                  newBaseQueueLast = newBaseQueueLast.next = clone;
                }
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                markSkippedUpdateLanes(updateLane);
              } else {
                if (newBaseQueueLast !== null) {
                  var _clone = {
                    lane: NoLane,
                    action: update.action,
                    eagerReducer: update.eagerReducer,
                    eagerState: update.eagerState,
                    next: null
                  };
                  newBaseQueueLast = newBaseQueueLast.next = _clone;
                }
                if (update.eagerReducer === reducer) {
                  newState = update.eagerState;
                } else {
                  var action = update.action;
                  newState = reducer(newState, action);
                }
              }
              update = update.next;
            } while (update !== null && update !== first);
            if (newBaseQueueLast === null) {
              newBaseState = newState;
            } else {
              newBaseQueueLast.next = newBaseQueueFirst;
            }
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
          }
          var dispatch = queue.dispatch;
          return [hook.memoizedState, dispatch];
        }
        function rerenderReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (!(queue !== null)) {
            {
              throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
            }
          }
          queue.lastRenderedReducer = reducer;
          var dispatch = queue.dispatch;
          var lastRenderPhaseUpdate = queue.pending;
          var newState = hook.memoizedState;
          if (lastRenderPhaseUpdate !== null) {
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
              var action = update.action;
              newState = reducer(newState, action);
              update = update.next;
            } while (update !== firstRenderPhaseUpdate);
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            if (hook.baseQueue === null) {
              hook.baseState = newState;
            }
            queue.lastRenderedState = newState;
          }
          return [newState, dispatch];
        }
        function readFromUnsubcribedMutableSource(root2, source, getSnapshot) {
          {
            warnAboutMultipleRenderersDEV(source);
          }
          var getVersion = source._getVersion;
          var version = getVersion(source._source);
          var isSafeToReadFromSource = false;
          var currentRenderVersion = getWorkInProgressVersion(source);
          if (currentRenderVersion !== null) {
            isSafeToReadFromSource = currentRenderVersion === version;
          } else {
            isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root2.mutableReadLanes);
            if (isSafeToReadFromSource) {
              setWorkInProgressVersion(source, version);
            }
          }
          if (isSafeToReadFromSource) {
            var snapshot = getSnapshot(source._source);
            {
              if (typeof snapshot === "function") {
                error("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
              }
            }
            return snapshot;
          } else {
            markSourceAsDirty(source);
            {
              {
                throw Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
              }
            }
          }
        }
        function useMutableSource(hook, source, getSnapshot, subscribe) {
          var root2 = getWorkInProgressRoot();
          if (!(root2 !== null)) {
            {
              throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
          }
          var getVersion = source._getVersion;
          var version = getVersion(source._source);
          var dispatcher = ReactCurrentDispatcher$1.current;
          var _dispatcher$useState = dispatcher.useState(function() {
            return readFromUnsubcribedMutableSource(root2, source, getSnapshot);
          }), currentSnapshot = _dispatcher$useState[0], setSnapshot = _dispatcher$useState[1];
          var snapshot = currentSnapshot;
          var stateHook = workInProgressHook;
          var memoizedState = hook.memoizedState;
          var refs = memoizedState.refs;
          var prevGetSnapshot = refs.getSnapshot;
          var prevSource = memoizedState.source;
          var prevSubscribe = memoizedState.subscribe;
          var fiber = currentlyRenderingFiber$1;
          hook.memoizedState = {
            refs,
            source,
            subscribe
          };
          dispatcher.useEffect(function() {
            refs.getSnapshot = getSnapshot;
            refs.setSnapshot = setSnapshot;
            var maybeNewVersion = getVersion(source._source);
            if (!objectIs(version, maybeNewVersion)) {
              var maybeNewSnapshot = getSnapshot(source._source);
              {
                if (typeof maybeNewSnapshot === "function") {
                  error("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
                }
              }
              if (!objectIs(snapshot, maybeNewSnapshot)) {
                setSnapshot(maybeNewSnapshot);
                var lane = requestUpdateLane(fiber);
                markRootMutableRead(root2, lane);
              }
              markRootEntangled(root2, root2.mutableReadLanes);
            }
          }, [getSnapshot, source, subscribe]);
          dispatcher.useEffect(function() {
            var handleChange = function() {
              var latestGetSnapshot = refs.getSnapshot;
              var latestSetSnapshot = refs.setSnapshot;
              try {
                latestSetSnapshot(latestGetSnapshot(source._source));
                var lane = requestUpdateLane(fiber);
                markRootMutableRead(root2, lane);
              } catch (error2) {
                latestSetSnapshot(function() {
                  throw error2;
                });
              }
            };
            var unsubscribe = subscribe(source._source, handleChange);
            {
              if (typeof unsubscribe !== "function") {
                error("Mutable source subscribe function must return an unsubscribe function.");
              }
            }
            return unsubscribe;
          }, [source, subscribe]);
          if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
            var newQueue = {
              pending: null,
              dispatch: null,
              lastRenderedReducer: basicStateReducer,
              lastRenderedState: snapshot
            };
            newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
            stateHook.queue = newQueue;
            stateHook.baseQueue = null;
            snapshot = readFromUnsubcribedMutableSource(root2, source, getSnapshot);
            stateHook.memoizedState = stateHook.baseState = snapshot;
          }
          return snapshot;
        }
        function mountMutableSource(source, getSnapshot, subscribe) {
          var hook = mountWorkInProgressHook();
          hook.memoizedState = {
            refs: {
              getSnapshot,
              setSnapshot: null
            },
            source,
            subscribe
          };
          return useMutableSource(hook, source, getSnapshot, subscribe);
        }
        function updateMutableSource(source, getSnapshot, subscribe) {
          var hook = updateWorkInProgressHook();
          return useMutableSource(hook, source, getSnapshot, subscribe);
        }
        function mountState(initialState) {
          var hook = mountWorkInProgressHook();
          if (typeof initialState === "function") {
            initialState = initialState();
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
          };
          var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateState(initialState) {
          return updateReducer(basicStateReducer);
        }
        function rerenderState(initialState) {
          return rerenderReducer(basicStateReducer);
        }
        function pushEffect(tag, create, destroy, deps) {
          var effect = {
            tag,
            create,
            destroy,
            deps,
            next: null
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
          } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) {
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var firstEffect = lastEffect.next;
              lastEffect.next = effect;
              effect.next = firstEffect;
              componentUpdateQueue.lastEffect = effect;
            }
          }
          return effect;
        }
        function mountRef(initialValue) {
          var hook = mountWorkInProgressHook();
          var ref = {
            current: initialValue
          };
          {
            Object.seal(ref);
          }
          hook.memoizedState = ref;
          return ref;
        }
        function updateRef(initialValue) {
          var hook = updateWorkInProgressHook();
          return hook.memoizedState;
        }
        function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
        }
        function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var destroy = void 0;
          if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
              var prevDeps = prevEffect.deps;
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                pushEffect(hookFlags, create, destroy, nextDeps);
                return;
              }
            }
          }
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
        }
        function mountEffect(create, deps) {
          {
            if (typeof jest !== "undefined") {
              warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
            }
          }
          return mountEffectImpl(Update | Passive, Passive$1, create, deps);
        }
        function updateEffect(create, deps) {
          {
            if (typeof jest !== "undefined") {
              warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
            }
          }
          return updateEffectImpl(Update | Passive, Passive$1, create, deps);
        }
        function mountLayoutEffect(create, deps) {
          return mountEffectImpl(Update, Layout, create, deps);
        }
        function updateLayoutEffect(create, deps) {
          return updateEffectImpl(Update, Layout, create, deps);
        }
        function imperativeHandleEffect(create, ref) {
          if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
              refCallback(null);
            };
          } else if (ref !== null && ref !== void 0) {
            var refObject = ref;
            {
              if (!refObject.hasOwnProperty("current")) {
                error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
              }
            }
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
              refObject.current = null;
            };
          }
        }
        function mountImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function updateImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function mountDebugValue(value, formatterFn) {
        }
        var updateDebugValue = mountDebugValue;
        function mountCallback(callback, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function updateCallback(callback, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function mountMemo(nextCreate, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function updateMemo(nextCreate, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function mountDeferredValue(value) {
          var _mountState = mountState(value), prevValue = _mountState[0], setValue = _mountState[1];
          mountEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
              setValue(value);
            } finally {
              ReactCurrentBatchConfig$1.transition = prevTransition;
            }
          }, [value]);
          return prevValue;
        }
        function updateDeferredValue(value) {
          var _updateState = updateState(), prevValue = _updateState[0], setValue = _updateState[1];
          updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
              setValue(value);
            } finally {
              ReactCurrentBatchConfig$1.transition = prevTransition;
            }
          }, [value]);
          return prevValue;
        }
        function rerenderDeferredValue(value) {
          var _rerenderState = rerenderState(), prevValue = _rerenderState[0], setValue = _rerenderState[1];
          updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
              setValue(value);
            } finally {
              ReactCurrentBatchConfig$1.transition = prevTransition;
            }
          }, [value]);
          return prevValue;
        }
        function startTransition(setPending, callback) {
          var priorityLevel = getCurrentPriorityLevel();
          {
            runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function() {
              setPending(true);
            });
            runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function() {
              var prevTransition = ReactCurrentBatchConfig$1.transition;
              ReactCurrentBatchConfig$1.transition = 1;
              try {
                setPending(false);
                callback();
              } finally {
                ReactCurrentBatchConfig$1.transition = prevTransition;
              }
            });
          }
        }
        function mountTransition() {
          var _mountState2 = mountState(false), isPending = _mountState2[0], setPending = _mountState2[1];
          var start = startTransition.bind(null, setPending);
          mountRef(start);
          return [start, isPending];
        }
        function updateTransition() {
          var _updateState2 = updateState(), isPending = _updateState2[0];
          var startRef = updateRef();
          var start = startRef.current;
          return [start, isPending];
        }
        function rerenderTransition() {
          var _rerenderState2 = rerenderState(), isPending = _rerenderState2[0];
          var startRef = updateRef();
          var start = startRef.current;
          return [start, isPending];
        }
        var isUpdatingOpaqueValueInRenderPhase = false;
        function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
          {
            return isUpdatingOpaqueValueInRenderPhase;
          }
        }
        function warnOnOpaqueIdentifierAccessInDEV(fiber) {
          {
            var name = getComponentName(fiber.type) || "Unknown";
            if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
              error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
              didWarnAboutUseOpaqueIdentifier[name] = true;
            }
          }
        }
        function mountOpaqueIdentifier() {
          var makeId = makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1));
          if (getIsHydrating()) {
            var didUpgrade = false;
            var fiber = currentlyRenderingFiber$1;
            var readValue = function() {
              if (!didUpgrade) {
                didUpgrade = true;
                {
                  isUpdatingOpaqueValueInRenderPhase = true;
                  setId(makeId());
                  isUpdatingOpaqueValueInRenderPhase = false;
                  warnOnOpaqueIdentifierAccessInDEV(fiber);
                }
              }
              {
                {
                  throw Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
                }
              }
            };
            var id = makeOpaqueHydratingObject(readValue);
            var setId = mountState(id)[1];
            if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
              currentlyRenderingFiber$1.flags |= Update | Passive;
              pushEffect(HasEffect | Passive$1, function() {
                setId(makeId());
              }, void 0, null);
            }
            return id;
          } else {
            var _id = makeId();
            mountState(_id);
            return _id;
          }
        }
        function updateOpaqueIdentifier() {
          var id = updateState()[0];
          return id;
        }
        function rerenderOpaqueIdentifier() {
          var id = rerenderState()[0];
          return id;
        }
        function dispatchAction(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(fiber);
          var update = {
            lane,
            action,
            eagerReducer: null,
            eagerState: null,
            next: null
          };
          var pending = queue.pending;
          if (pending === null) {
            update.next = update;
          } else {
            update.next = pending.next;
            pending.next = update;
          }
          queue.pending = update;
          var alternate = fiber.alternate;
          if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
            didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
          } else {
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
              var lastRenderedReducer = queue.lastRenderedReducer;
              if (lastRenderedReducer !== null) {
                var prevDispatcher;
                {
                  prevDispatcher = ReactCurrentDispatcher$1.current;
                  ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                }
                try {
                  var currentState = queue.lastRenderedState;
                  var eagerState = lastRenderedReducer(currentState, action);
                  update.eagerReducer = lastRenderedReducer;
                  update.eagerState = eagerState;
                  if (objectIs(eagerState, currentState)) {
                    return;
                  }
                } catch (error2) {
                } finally {
                  {
                    ReactCurrentDispatcher$1.current = prevDispatcher;
                  }
                }
              }
            }
            {
              if (typeof jest !== "undefined") {
                warnIfNotScopedWithMatchingAct(fiber);
                warnIfNotCurrentlyActingUpdatesInDev(fiber);
              }
            }
            scheduleUpdateOnFiber(fiber, lane, eventTime);
          }
        }
        var ContextOnlyDispatcher = {
          readContext,
          useCallback: throwInvalidHookError,
          useContext: throwInvalidHookError,
          useEffect: throwInvalidHookError,
          useImperativeHandle: throwInvalidHookError,
          useLayoutEffect: throwInvalidHookError,
          useMemo: throwInvalidHookError,
          useReducer: throwInvalidHookError,
          useRef: throwInvalidHookError,
          useState: throwInvalidHookError,
          useDebugValue: throwInvalidHookError,
          useDeferredValue: throwInvalidHookError,
          useTransition: throwInvalidHookError,
          useMutableSource: throwInvalidHookError,
          useOpaqueIdentifier: throwInvalidHookError,
          unstable_isNewReconciler: enableNewReconciler
        };
        var HooksDispatcherOnMountInDEV = null;
        var HooksDispatcherOnMountWithHookTypesInDEV = null;
        var HooksDispatcherOnUpdateInDEV = null;
        var HooksDispatcherOnRerenderInDEV = null;
        var InvalidNestedHooksDispatcherOnMountInDEV = null;
        var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
        var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
        {
          var warnInvalidContextAccess = function() {
            error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          };
          var warnInvalidHookAccess = function() {
            error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
          };
          HooksDispatcherOnMountInDEV = {
            readContext: function(context, observedBits) {
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              mountHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              mountHookTypesDev();
              return mountMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              mountHookTypesDev();
              return mountOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnMountWithHookTypesInDEV = {
            readContext: function(context, observedBits) {
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return mountMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              updateHookTypesDev();
              return mountOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnUpdateInDEV = {
            readContext: function(context, observedBits) {
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              updateHookTypesDev();
              return updateOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnRerenderInDEV = {
            readContext: function(context, observedBits) {
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              updateHookTypesDev();
              return rerenderOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnMountInDEV = {
            readContext: function(context, observedBits) {
              warnInvalidContextAccess();
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnUpdateInDEV = {
            readContext: function(context, observedBits) {
              warnInvalidContextAccess();
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnRerenderInDEV = {
            readContext: function(context, observedBits) {
              warnInvalidContextAccess();
              return readContext(context, observedBits);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context, observedBits) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context, observedBits);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource(source, getSnapshot, subscribe);
            },
            useOpaqueIdentifier: function() {
              currentHookNameInDev = "useOpaqueIdentifier";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderOpaqueIdentifier();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
        }
        var now$1 = Scheduler.unstable_now;
        var commitTime = 0;
        var profilerStartTime = -1;
        function getCommitTime() {
          return commitTime;
        }
        function recordCommitTime() {
          commitTime = now$1();
        }
        function startProfilerTimer(fiber) {
          profilerStartTime = now$1();
          if (fiber.actualStartTime < 0) {
            fiber.actualStartTime = now$1();
          }
        }
        function stopProfilerTimerIfRunning(fiber) {
          profilerStartTime = -1;
        }
        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
          if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) {
              fiber.selfBaseDuration = elapsedTime;
            }
            profilerStartTime = -1;
          }
        }
        function transferActualDuration(fiber) {
          var child = fiber.child;
          while (child) {
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var didReceiveUpdate = false;
        var didWarnAboutBadClass;
        var didWarnAboutModulePatternComponent;
        var didWarnAboutContextTypeOnFunctionComponent;
        var didWarnAboutGetDerivedStateOnFunctionComponent;
        var didWarnAboutFunctionRefs;
        var didWarnAboutReassigningProps;
        var didWarnAboutRevealOrder;
        var didWarnAboutTailOptions;
        {
          didWarnAboutBadClass = {};
          didWarnAboutModulePatternComponent = {};
          didWarnAboutContextTypeOnFunctionComponent = {};
          didWarnAboutGetDerivedStateOnFunctionComponent = {};
          didWarnAboutFunctionRefs = {};
          didWarnAboutReassigningProps = false;
          didWarnAboutRevealOrder = {};
          didWarnAboutTailOptions = {};
        }
        function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
          if (current2 === null) {
            workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
          }
        }
        function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
          workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
        }
        function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
              }
            }
          }
          var render2 = Component.render;
          var ref = workInProgress2.ref;
          var nextChildren;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
              } finally {
                reenableLogs();
              }
            }
            setIsRendering(false);
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMemoComponent(current2, workInProgress2, Component, nextProps, updateLanes, renderLanes2) {
          if (current2 === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === void 0) {
              var resolvedType = type;
              {
                resolvedType = resolveFunctionForHotReloading(type);
              }
              workInProgress2.tag = SimpleMemoComponent;
              workInProgress2.type = resolvedType;
              {
                validateFunctionComponentInDev(workInProgress2, type);
              }
              return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, updateLanes, renderLanes2);
            }
            {
              var innerPropTypes = type.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(type));
              }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
            child.ref = workInProgress2.ref;
            child.return = workInProgress2;
            workInProgress2.child = child;
            return child;
          }
          {
            var _type = Component.type;
            var _innerPropTypes = _type.propTypes;
            if (_innerPropTypes) {
              checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentName(_type));
            }
          }
          var currentChild = current2.child;
          if (!includesSomeLane(updateLanes, renderLanes2)) {
            var prevProps = currentChild.memoizedProps;
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
          }
          workInProgress2.flags |= PerformedWork;
          var newChild = createWorkInProgress(currentChild, nextProps);
          newChild.ref = workInProgress2.ref;
          newChild.return = workInProgress2;
          workInProgress2.child = newChild;
          return newChild;
        }
        function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, updateLanes, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerMemoType = workInProgress2.elementType;
              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  outerMemoType = init(payload);
                } catch (x) {
                  outerMemoType = null;
                }
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, nextProps, "prop", getComponentName(outerMemoType));
                }
              }
            }
          }
          if (current2 !== null) {
            var prevProps = current2.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && workInProgress2.type === current2.type) {
              didReceiveUpdate = false;
              if (!includesSomeLane(renderLanes2, updateLanes)) {
                workInProgress2.lanes = current2.lanes;
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              }
            }
          }
          return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
        }
        function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          var prevState = current2 !== null ? current2.memoizedState : null;
          if (nextProps.mode === "hidden" || nextProps.mode === "unstable-defer-without-hiding") {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              var nextState = {
                baseLanes: NoLanes
              };
              workInProgress2.memoizedState = nextState;
              pushRenderLanes(workInProgress2, renderLanes2);
            } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
              var nextBaseLanes;
              if (prevState !== null) {
                var prevBaseLanes = prevState.baseLanes;
                nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
              } else {
                nextBaseLanes = renderLanes2;
              }
              {
                markSpawnedWork(OffscreenLane);
              }
              workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
              var _nextState = {
                baseLanes: nextBaseLanes
              };
              workInProgress2.memoizedState = _nextState;
              pushRenderLanes(workInProgress2, nextBaseLanes);
              return null;
            } else {
              var _nextState2 = {
                baseLanes: NoLanes
              };
              workInProgress2.memoizedState = _nextState2;
              var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
              pushRenderLanes(workInProgress2, subtreeRenderLanes2);
            }
          } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
              _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
              workInProgress2.memoizedState = null;
            } else {
              _subtreeRenderLanes = renderLanes2;
            }
            pushRenderLanes(workInProgress2, _subtreeRenderLanes);
          }
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        var updateLegacyHiddenComponent = updateOffscreenComponent;
        function updateFragment(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMode(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateProfiler(current2, workInProgress2, renderLanes2) {
          {
            workInProgress2.flags |= Update;
            var stateNode = workInProgress2.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markRef(current2, workInProgress2) {
          var ref = workInProgress2.ref;
          if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
            workInProgress2.flags |= Ref;
          }
        }
        function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
              }
            }
          }
          var context;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
            context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          var nextChildren;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
            if (workInProgress2.mode & StrictMode) {
              disableLogs();
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
              } finally {
                reenableLogs();
              }
            }
            setIsRendering(false);
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentName(Component));
              }
            }
          }
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var instance = workInProgress2.stateNode;
          var shouldUpdate;
          if (instance === null) {
            if (current2 !== null) {
              current2.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
            constructClassInstance(workInProgress2, Component, nextProps);
            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            shouldUpdate = true;
          } else if (current2 === null) {
            shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          } else {
            shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
          }
          var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
          {
            var inst = workInProgress2.stateNode;
            if (shouldUpdate && inst.props !== nextProps) {
              if (!didWarnAboutReassigningProps) {
                error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentName(workInProgress2.type) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          return nextUnitOfWork;
        }
        function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
          markRef(current2, workInProgress2);
          var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (!shouldUpdate && !didCaptureError) {
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, false);
            }
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var instance = workInProgress2.stateNode;
          ReactCurrentOwner$1.current = workInProgress2;
          var nextChildren;
          if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            nextChildren = null;
            {
              stopProfilerTimerIfRunning();
            }
          } else {
            {
              setIsRendering(true);
              nextChildren = instance.render();
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  instance.render();
                } finally {
                  reenableLogs();
                }
              }
              setIsRendering(false);
            }
          }
          workInProgress2.flags |= PerformedWork;
          if (current2 !== null && didCaptureError) {
            forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          workInProgress2.memoizedState = instance.state;
          if (hasContext) {
            invalidateContextProvider(workInProgress2, Component, true);
          }
          return workInProgress2.child;
        }
        function pushHostRootContext(workInProgress2) {
          var root2 = workInProgress2.stateNode;
          if (root2.pendingContext) {
            pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context);
          } else if (root2.context) {
            pushTopLevelContextObject(workInProgress2, root2.context, false);
          }
          pushHostContainer(workInProgress2, root2.containerInfo);
        }
        function updateHostRoot(current2, workInProgress2, renderLanes2) {
          pushHostRootContext(workInProgress2);
          var updateQueue = workInProgress2.updateQueue;
          if (!(current2 !== null && updateQueue !== null)) {
            {
              throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          var nextProps = workInProgress2.pendingProps;
          var prevState = workInProgress2.memoizedState;
          var prevChildren = prevState !== null ? prevState.element : null;
          cloneUpdateQueue(current2, workInProgress2);
          processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
          var nextState = workInProgress2.memoizedState;
          var nextChildren = nextState.element;
          if (nextChildren === prevChildren) {
            resetHydrationState();
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var root2 = workInProgress2.stateNode;
          if (root2.hydrate && enterHydrationState(workInProgress2)) {
            {
              var mutableSourceEagerHydrationData = root2.mutableSourceEagerHydrationData;
              if (mutableSourceEagerHydrationData != null) {
                for (var i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {
                  var mutableSource = mutableSourceEagerHydrationData[i];
                  var version = mutableSourceEagerHydrationData[i + 1];
                  setWorkInProgressVersion(mutableSource, version);
                }
              }
            }
            var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            workInProgress2.child = child;
            var node = child;
            while (node) {
              node.flags = node.flags & ~Placement | Hydrating;
              node = node.sibling;
            }
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
            resetHydrationState();
          }
          return workInProgress2.child;
        }
        function updateHostComponent(current2, workInProgress2, renderLanes2) {
          pushHostContext(workInProgress2);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          var type = workInProgress2.type;
          var nextProps = workInProgress2.pendingProps;
          var prevProps = current2 !== null ? current2.memoizedProps : null;
          var nextChildren = nextProps.children;
          var isDirectTextChild = shouldSetTextContent(type, nextProps);
          if (isDirectTextChild) {
            nextChildren = null;
          } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
            workInProgress2.flags |= ContentReset;
          }
          markRef(current2, workInProgress2);
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostText(current2, workInProgress2) {
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          return null;
        }
        function mountLazyComponent(_current, workInProgress2, elementType, updateLanes, renderLanes2) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress2.alternate = null;
            workInProgress2.flags |= Placement;
          }
          var props = workInProgress2.pendingProps;
          var lazyComponent = elementType;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;
          var Component = init(payload);
          workInProgress2.type = Component;
          var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
          var resolvedProps = resolveDefaultProps(Component, props);
          var child;
          switch (resolvedTag) {
            case FunctionComponent: {
              {
                validateFunctionComponentInDev(workInProgress2, Component);
                workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
              }
              child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ClassComponent: {
              {
                workInProgress2.type = Component = resolveClassForHotReloading(Component);
              }
              child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ForwardRef: {
              {
                workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
              }
              child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case MemoComponent: {
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = Component.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentName(Component));
                  }
                }
              }
              child = updateMemoComponent(null, workInProgress2, Component, resolveDefaultProps(Component.type, resolvedProps), updateLanes, renderLanes2);
              return child;
            }
          }
          var hint = "";
          {
            if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
              hint = " Did you wrap a component in React.lazy() more than once?";
            }
          }
          {
            {
              throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
            }
          }
        }
        function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress2.alternate = null;
            workInProgress2.flags |= Placement;
          }
          workInProgress2.tag = ClassComponent;
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          constructClassInstance(workInProgress2, Component, nextProps);
          mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
        }
        function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
          if (_current !== null) {
            _current.alternate = null;
            workInProgress2.alternate = null;
            workInProgress2.flags |= Placement;
          }
          var props = workInProgress2.pendingProps;
          var context;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
            context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var value;
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentName(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
            if (workInProgress2.mode & StrictMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
            }
            setIsRendering(true);
            ReactCurrentOwner$1.current = workInProgress2;
            value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
            setIsRendering(false);
          }
          workInProgress2.flags |= PerformedWork;
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentName(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
            {
              var _componentName2 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            workInProgress2.tag = ClassComponent;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            var hasContext = false;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
            initializeUpdateQueue(workInProgress2);
            var getDerivedStateFromProps = Component.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === "function") {
              applyDerivedStateFromProps(workInProgress2, Component, getDerivedStateFromProps, props);
            }
            adoptClassInstance(workInProgress2, value);
            mountClassInstance(workInProgress2, Component, props, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
          } else {
            workInProgress2.tag = FunctionComponent;
            {
              if (workInProgress2.mode & StrictMode) {
                disableLogs();
                try {
                  value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                } finally {
                  reenableLogs();
                }
              }
            }
            reconcileChildren(null, workInProgress2, value, renderLanes2);
            {
              validateFunctionComponentInDev(workInProgress2, Component);
            }
            return workInProgress2.child;
          }
        }
        function validateFunctionComponentInDev(workInProgress2, Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (workInProgress2.ref !== null) {
              var info = "";
              var ownerName = getCurrentFiberOwnerNameInDevOrNull();
              if (ownerName) {
                info += "\n\nCheck the render method of `" + ownerName + "`.";
              }
              var warningKey = ownerName || workInProgress2._debugID || "";
              var debugSource = workInProgress2._debugSource;
              if (debugSource) {
                warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
              }
              if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentName(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        var SUSPENDED_MARKER = {
          dehydrated: null,
          retryLane: NoLane
        };
        function mountSuspenseOffscreenState(renderLanes2) {
          return {
            baseLanes: renderLanes2
          };
        }
        function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
          return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2)
          };
        }
        function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            var suspenseState = current2.memoizedState;
            if (suspenseState === null) {
              return false;
            }
          }
          return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        }
        function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
          return removeLanes(current2.childLanes, renderLanes2);
        }
        function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          {
            if (shouldSuspend(workInProgress2)) {
              workInProgress2.flags |= DidCapture;
            }
          }
          var suspenseContext = suspenseStackCursor.current;
          var showFallback = false;
          var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
            showFallback = true;
            workInProgress2.flags &= ~DidCapture;
          } else {
            if (current2 === null || current2.memoizedState !== null) {
              if (nextProps.fallback !== void 0 && nextProps.unstable_avoidThisFallback !== true) {
                suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
              }
            }
          }
          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          pushSuspenseContext(workInProgress2, suspenseContext);
          if (current2 === null) {
            if (nextProps.fallback !== void 0) {
              tryToClaimNextHydratableInstance(workInProgress2);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
              var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var primaryChildFragment = workInProgress2.child;
              primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackFragment;
            } else if (typeof nextProps.unstable_expectedLoadTime === "number") {
              var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var _primaryChildFragment = workInProgress2.child;
              _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              workInProgress2.lanes = SomeRetryLane;
              {
                markSpawnedWork(SomeRetryLane);
              }
              return _fallbackFragment;
            } else {
              return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren, renderLanes2);
            }
          } else {
            var prevState = current2.memoizedState;
            if (prevState !== null) {
              if (showFallback) {
                var _nextFallbackChildren2 = nextProps.fallback;
                var _nextPrimaryChildren2 = nextProps.children;
                var _fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes2);
                var _primaryChildFragment3 = workInProgress2.child;
                var prevOffscreenState = current2.child.memoizedState;
                _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
                _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment;
              } else {
                var _nextPrimaryChildren3 = nextProps.children;
                var _primaryChildFragment4 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren3, renderLanes2);
                workInProgress2.memoizedState = null;
                return _primaryChildFragment4;
              }
            } else {
              if (showFallback) {
                var _nextFallbackChildren3 = nextProps.fallback;
                var _nextPrimaryChildren4 = nextProps.children;
                var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes2);
                var _primaryChildFragment5 = workInProgress2.child;
                var _prevOffscreenState = current2.child.memoizedState;
                _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes2);
                _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                workInProgress2.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment2;
              } else {
                var _nextPrimaryChildren5 = nextProps.children;
                var _primaryChildFragment6 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren5, renderLanes2);
                workInProgress2.memoizedState = null;
                return _primaryChildFragment6;
              }
            }
          }
        }
        function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes2, null);
          primaryChildFragment.return = workInProgress2;
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var progressedPrimaryFragment = workInProgress2.child;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          var fallbackChildFragment;
          if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = 0;
              primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          } else {
            primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          }
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function createWorkInProgressOffscreenFiber(current2, offscreenProps) {
          return createWorkInProgress(current2, offscreenProps);
        }
        function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
          });
          if ((workInProgress2.mode & BlockingMode) === NoMode) {
            primaryChildFragment.lanes = renderLanes2;
          }
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = null;
          if (currentFallbackChildFragment !== null) {
            currentFallbackChildFragment.nextEffect = null;
            currentFallbackChildFragment.flags = Deletion;
            workInProgress2.firstEffect = workInProgress2.lastEffect = currentFallbackChildFragment;
          }
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          if ((mode & BlockingMode) === NoMode && workInProgress2.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress2.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
              primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            }
            var progressedLastEffect = primaryChildFragment.lastEffect;
            if (progressedLastEffect !== null) {
              workInProgress2.firstEffect = primaryChildFragment.firstEffect;
              workInProgress2.lastEffect = progressedLastEffect;
              progressedLastEffect.nextEffect = null;
            } else {
              workInProgress2.firstEffect = workInProgress2.lastEffect = null;
            }
          } else {
            primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
          }
          var fallbackChildFragment;
          if (currentFallbackChildFragment !== null) {
            fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
          } else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            fallbackChildFragment.flags |= Placement;
          }
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function scheduleWorkOnFiber(fiber, renderLanes2) {
          fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
          }
          scheduleWorkOnParentPath(fiber.return, renderLanes2);
        }
        function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
          var node = firstChild;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                scheduleWorkOnFiber(node, renderLanes2);
              }
            } else if (node.tag === SuspenseListComponent) {
              scheduleWorkOnFiber(node, renderLanes2);
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === workInProgress2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === workInProgress2) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function findLastContentRow(firstChild) {
          var row = firstChild;
          var lastContentRow = null;
          while (row !== null) {
            var currentRow = row.alternate;
            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              lastContentRow = row;
            }
            row = row.sibling;
          }
          return lastContentRow;
        }
        function validateRevealOrder(revealOrder) {
          {
            if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
              didWarnAboutRevealOrder[revealOrder] = true;
              if (typeof revealOrder === "string") {
                switch (revealOrder.toLowerCase()) {
                  case "together":
                  case "forwards":
                  case "backwards": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  case "forward":
                  case "backward": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
                }
              } else {
                error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
              }
            }
          }
        }
        function validateTailOptions(tailMode, revealOrder) {
          {
            if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
              if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
              } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
              }
            }
          }
        }
        function validateSuspenseListNestedChild(childSlot, index2) {
          {
            var isArray2 = Array.isArray(childSlot);
            var isIterable = !isArray2 && typeof getIteratorFn(childSlot) === "function";
            if (isArray2 || isIterable) {
              var type = isArray2 ? "array" : "iterable";
              error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index2, type);
              return false;
            }
          }
          return true;
        }
        function validateSuspenseListChildren(children, revealOrder) {
          {
            if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
              if (Array.isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  if (!validateSuspenseListNestedChild(children[i], i)) {
                    return;
                  }
                }
              } else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                  var childrenIterator = iteratorFn.call(children);
                  if (childrenIterator) {
                    var step = childrenIterator.next();
                    var _i = 0;
                    for (; !step.done; step = childrenIterator.next()) {
                      if (!validateSuspenseListNestedChild(step.value, _i)) {
                        return;
                      }
                      _i++;
                    }
                  }
                } else {
                  error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                }
              }
            }
          }
        }
        function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
          var renderState = workInProgress2.memoizedState;
          if (renderState === null) {
            workInProgress2.memoizedState = {
              isBackwards,
              rendering: null,
              renderingStartTime: 0,
              last: lastContentRow,
              tail,
              tailMode,
              lastEffect: lastEffectBeforeRendering
            };
          } else {
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
            renderState.lastEffect = lastEffectBeforeRendering;
          }
        }
        function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var revealOrder = nextProps.revealOrder;
          var tailMode = nextProps.tail;
          var newChildren = nextProps.children;
          validateRevealOrder(revealOrder);
          validateTailOptions(tailMode, revealOrder);
          validateSuspenseListChildren(newChildren, revealOrder);
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          var suspenseContext = suspenseStackCursor.current;
          var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress2.flags |= DidCapture;
          } else {
            var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) {
              propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }
          pushSuspenseContext(workInProgress2, suspenseContext);
          if ((workInProgress2.mode & BlockingMode) === NoMode) {
            workInProgress2.memoizedState = null;
          } else {
            switch (revealOrder) {
              case "forwards": {
                var lastContentRow = findLastContentRow(workInProgress2.child);
                var tail;
                if (lastContentRow === null) {
                  tail = workInProgress2.child;
                  workInProgress2.child = null;
                } else {
                  tail = lastContentRow.sibling;
                  lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress2, false, tail, lastContentRow, tailMode, workInProgress2.lastEffect);
                break;
              }
              case "backwards": {
                var _tail = null;
                var row = workInProgress2.child;
                workInProgress2.child = null;
                while (row !== null) {
                  var currentRow = row.alternate;
                  if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                    workInProgress2.child = row;
                    break;
                  }
                  var nextRow = row.sibling;
                  row.sibling = _tail;
                  _tail = row;
                  row = nextRow;
                }
                initSuspenseListRenderState(workInProgress2, true, _tail, null, tailMode, workInProgress2.lastEffect);
                break;
              }
              case "together": {
                initSuspenseListRenderState(workInProgress2, false, null, null, void 0, workInProgress2.lastEffect);
                break;
              }
              default: {
                workInProgress2.memoizedState = null;
              }
            }
          }
          return workInProgress2.child;
        }
        function updatePortalComponent(current2, workInProgress2, renderLanes2) {
          pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
          var nextChildren = workInProgress2.pendingProps;
          if (current2 === null) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
        function updateContextProvider(current2, workInProgress2, renderLanes2) {
          var providerType = workInProgress2.type;
          var context = providerType._context;
          var newProps = workInProgress2.pendingProps;
          var oldProps = workInProgress2.memoizedProps;
          var newValue = newProps.value;
          {
            if (!("value" in newProps)) {
              if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
              }
            }
            var providerPropTypes = workInProgress2.type.propTypes;
            if (providerPropTypes) {
              checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
            }
          }
          pushProvider(workInProgress2, newValue);
          if (oldProps !== null) {
            var oldValue = oldProps.value;
            var changedBits = calculateChangedBits(context, newValue, oldValue);
            if (changedBits === 0) {
              if (oldProps.children === newProps.children && !hasContextChanged()) {
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              }
            } else {
              propagateContextChange(workInProgress2, context, changedBits, renderLanes2);
            }
          }
          var newChildren = newProps.children;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingContextAsConsumer = false;
        function updateContextConsumer(current2, workInProgress2, renderLanes2) {
          var context = workInProgress2.type;
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var newProps = workInProgress2.pendingProps;
          var render2 = newProps.children;
          {
            if (typeof render2 !== "function") {
              error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var newValue = readContext(context, newProps.unstable_observedBits);
          var newChildren;
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            newChildren = render2(newValue);
            setIsRendering(false);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markWorkInProgressReceivedUpdate() {
          didReceiveUpdate = true;
        }
        function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            workInProgress2.dependencies = current2.dependencies;
          }
          {
            stopProfilerTimerIfRunning();
          }
          markSkippedUpdateLanes(workInProgress2.lanes);
          if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
            return null;
          } else {
            cloneChildFibers(current2, workInProgress2);
            return workInProgress2.child;
          }
        }
        function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
          {
            var returnFiber = oldWorkInProgress.return;
            if (returnFiber === null) {
              throw new Error("Cannot swap the root fiber.");
            }
            current2.alternate = null;
            oldWorkInProgress.alternate = null;
            newWorkInProgress.index = oldWorkInProgress.index;
            newWorkInProgress.sibling = oldWorkInProgress.sibling;
            newWorkInProgress.return = oldWorkInProgress.return;
            newWorkInProgress.ref = oldWorkInProgress.ref;
            if (oldWorkInProgress === returnFiber.child) {
              returnFiber.child = newWorkInProgress;
            } else {
              var prevSibling = returnFiber.child;
              if (prevSibling === null) {
                throw new Error("Expected parent to have a child.");
              }
              while (prevSibling.sibling !== oldWorkInProgress) {
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) {
                  throw new Error("Expected to find the previous sibling.");
                }
              }
              prevSibling.sibling = newWorkInProgress;
            }
            var last = returnFiber.lastEffect;
            if (last !== null) {
              last.nextEffect = current2;
              returnFiber.lastEffect = current2;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = current2;
            }
            current2.nextEffect = null;
            current2.flags = Deletion;
            newWorkInProgress.flags |= Placement;
            return newWorkInProgress;
          }
        }
        function beginWork(current2, workInProgress2, renderLanes2) {
          var updateLanes = workInProgress2.lanes;
          {
            if (workInProgress2._debugNeedsRemount && current2 !== null) {
              return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
            }
          }
          if (current2 !== null) {
            var oldProps = current2.memoizedProps;
            var newProps = workInProgress2.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current2.type) {
              didReceiveUpdate = true;
            } else if (!includesSomeLane(renderLanes2, updateLanes)) {
              didReceiveUpdate = false;
              switch (workInProgress2.tag) {
                case HostRoot:
                  pushHostRootContext(workInProgress2);
                  resetHydrationState();
                  break;
                case HostComponent:
                  pushHostContext(workInProgress2);
                  break;
                case ClassComponent: {
                  var Component = workInProgress2.type;
                  if (isContextProvider(Component)) {
                    pushContextProvider(workInProgress2);
                  }
                  break;
                }
                case HostPortal:
                  pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                  break;
                case ContextProvider: {
                  var newValue = workInProgress2.memoizedProps.value;
                  pushProvider(workInProgress2, newValue);
                  break;
                }
                case Profiler:
                  {
                    var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                    if (hasChildWork) {
                      workInProgress2.flags |= Update;
                    }
                    var stateNode = workInProgress2.stateNode;
                    stateNode.effectDuration = 0;
                    stateNode.passiveEffectDuration = 0;
                  }
                  break;
                case SuspenseComponent: {
                  var state = workInProgress2.memoizedState;
                  if (state !== null) {
                    var primaryChildFragment = workInProgress2.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                      return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                    } else {
                      pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                      var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                      if (child !== null) {
                        return child.sibling;
                      } else {
                        return null;
                      }
                    }
                  } else {
                    pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  }
                  break;
                }
                case SuspenseListComponent: {
                  var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
                  var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                  if (didSuspendBefore) {
                    if (_hasChildWork) {
                      return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                    }
                    workInProgress2.flags |= DidCapture;
                  }
                  var renderState = workInProgress2.memoizedState;
                  if (renderState !== null) {
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                  }
                  pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
                  if (_hasChildWork) {
                    break;
                  } else {
                    return null;
                  }
                }
                case OffscreenComponent:
                case LegacyHiddenComponent: {
                  workInProgress2.lanes = NoLanes;
                  return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
                }
              }
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            } else {
              if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              } else {
                didReceiveUpdate = false;
              }
            }
          } else {
            didReceiveUpdate = false;
          }
          workInProgress2.lanes = NoLanes;
          switch (workInProgress2.tag) {
            case IndeterminateComponent: {
              return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
            }
            case LazyComponent: {
              var elementType = workInProgress2.elementType;
              return mountLazyComponent(current2, workInProgress2, elementType, updateLanes, renderLanes2);
            }
            case FunctionComponent: {
              var _Component = workInProgress2.type;
              var unresolvedProps = workInProgress2.pendingProps;
              var resolvedProps = workInProgress2.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
              return updateFunctionComponent(current2, workInProgress2, _Component, resolvedProps, renderLanes2);
            }
            case ClassComponent: {
              var _Component2 = workInProgress2.type;
              var _unresolvedProps = workInProgress2.pendingProps;
              var _resolvedProps = workInProgress2.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
              return updateClassComponent(current2, workInProgress2, _Component2, _resolvedProps, renderLanes2);
            }
            case HostRoot:
              return updateHostRoot(current2, workInProgress2, renderLanes2);
            case HostComponent:
              return updateHostComponent(current2, workInProgress2, renderLanes2);
            case HostText:
              return updateHostText(current2, workInProgress2);
            case SuspenseComponent:
              return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
            case HostPortal:
              return updatePortalComponent(current2, workInProgress2, renderLanes2);
            case ForwardRef: {
              var type = workInProgress2.type;
              var _unresolvedProps2 = workInProgress2.pendingProps;
              var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
              return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
            }
            case Fragment:
              return updateFragment(current2, workInProgress2, renderLanes2);
            case Mode:
              return updateMode(current2, workInProgress2, renderLanes2);
            case Profiler:
              return updateProfiler(current2, workInProgress2, renderLanes2);
            case ContextProvider:
              return updateContextProvider(current2, workInProgress2, renderLanes2);
            case ContextConsumer:
              return updateContextConsumer(current2, workInProgress2, renderLanes2);
            case MemoComponent: {
              var _type2 = workInProgress2.type;
              var _unresolvedProps3 = workInProgress2.pendingProps;
              var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = _type2.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentName(_type2));
                  }
                }
              }
              _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
              return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, updateLanes, renderLanes2);
            }
            case SimpleMemoComponent: {
              return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, updateLanes, renderLanes2);
            }
            case IncompleteClassComponent: {
              var _Component3 = workInProgress2.type;
              var _unresolvedProps4 = workInProgress2.pendingProps;
              var _resolvedProps4 = workInProgress2.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
              return mountIncompleteClassComponent(current2, workInProgress2, _Component3, _resolvedProps4, renderLanes2);
            }
            case SuspenseListComponent: {
              return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
            }
            case FundamentalComponent: {
              break;
            }
            case ScopeComponent: {
              break;
            }
            case Block: {
              break;
            }
            case OffscreenComponent: {
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
            case LegacyHiddenComponent: {
              return updateLegacyHiddenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          {
            {
              throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function markUpdate(workInProgress2) {
          workInProgress2.flags |= Update;
        }
        function markRef$1(workInProgress2) {
          workInProgress2.flags |= Ref;
        }
        var appendAllChildren;
        var updateHostContainer;
        var updateHostComponent$1;
        var updateHostText$1;
        {
          appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
            var node = workInProgress2.child;
            while (node !== null) {
              if (node.tag === HostComponent || node.tag === HostText) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          updateHostContainer = function(workInProgress2) {
          };
          updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
            var oldProps = current2.memoizedProps;
            if (oldProps === newProps) {
              return;
            }
            var instance = workInProgress2.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
            workInProgress2.updateQueue = updatePayload;
            if (updatePayload) {
              markUpdate(workInProgress2);
            }
          };
          updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
            if (oldText !== newText) {
              markUpdate(workInProgress2);
            }
          };
        }
        function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
          if (getIsHydrating()) {
            return;
          }
          switch (renderState.tailMode) {
            case "hidden": {
              var tailNode = renderState.tail;
              var lastTailNode = null;
              while (tailNode !== null) {
                if (tailNode.alternate !== null) {
                  lastTailNode = tailNode;
                }
                tailNode = tailNode.sibling;
              }
              if (lastTailNode === null) {
                renderState.tail = null;
              } else {
                lastTailNode.sibling = null;
              }
              break;
            }
            case "collapsed": {
              var _tailNode = renderState.tail;
              var _lastTailNode = null;
              while (_tailNode !== null) {
                if (_tailNode.alternate !== null) {
                  _lastTailNode = _tailNode;
                }
                _tailNode = _tailNode.sibling;
              }
              if (_lastTailNode === null) {
                if (!hasRenderedATailFallback && renderState.tail !== null) {
                  renderState.tail.sibling = null;
                } else {
                  renderState.tail = null;
                }
              } else {
                _lastTailNode.sibling = null;
              }
              break;
            }
          }
        }
        function completeWork(current2, workInProgress2, renderLanes2) {
          var newProps = workInProgress2.pendingProps;
          switch (workInProgress2.tag) {
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
              return null;
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              return null;
            }
            case HostRoot: {
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var fiberRoot = workInProgress2.stateNode;
              if (fiberRoot.pendingContext) {
                fiberRoot.context = fiberRoot.pendingContext;
                fiberRoot.pendingContext = null;
              }
              if (current2 === null || current2.child === null) {
                var wasHydrated = popHydrationState(workInProgress2);
                if (wasHydrated) {
                  markUpdate(workInProgress2);
                } else if (!fiberRoot.hydrate) {
                  workInProgress2.flags |= Snapshot;
                }
              }
              updateHostContainer(workInProgress2);
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              var rootContainerInstance = getRootHostContainer();
              var type = workInProgress2.type;
              if (current2 !== null && workInProgress2.stateNode != null) {
                updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                if (current2.ref !== workInProgress2.ref) {
                  markRef$1(workInProgress2);
                }
              } else {
                if (!newProps) {
                  if (!(workInProgress2.stateNode !== null)) {
                    {
                      throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                  return null;
                }
                var currentHostContext = getHostContext();
                var _wasHydrated = popHydrationState(workInProgress2);
                if (_wasHydrated) {
                  if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                  appendAllChildren(instance, workInProgress2, false, false);
                  workInProgress2.stateNode = instance;
                  if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
                    markUpdate(workInProgress2);
                  }
                }
                if (workInProgress2.ref !== null) {
                  markRef$1(workInProgress2);
                }
              }
              return null;
            }
            case HostText: {
              var newText = newProps;
              if (current2 && workInProgress2.stateNode != null) {
                var oldText = current2.memoizedProps;
                updateHostText$1(current2, workInProgress2, oldText, newText);
              } else {
                if (typeof newText !== "string") {
                  if (!(workInProgress2.stateNode !== null)) {
                    {
                      throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                }
                var _rootContainerInstance = getRootHostContainer();
                var _currentHostContext = getHostContext();
                var _wasHydrated2 = popHydrationState(workInProgress2);
                if (_wasHydrated2) {
                  if (prepareToHydrateHostTextInstance(workInProgress2)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                }
              }
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var nextState = workInProgress2.memoizedState;
              if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                workInProgress2.lanes = renderLanes2;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              var nextDidTimeout = nextState !== null;
              var prevDidTimeout = false;
              if (current2 === null) {
                if (workInProgress2.memoizedProps.fallback !== void 0) {
                  popHydrationState(workInProgress2);
                }
              } else {
                var prevState = current2.memoizedState;
                prevDidTimeout = prevState !== null;
              }
              if (nextDidTimeout && !prevDidTimeout) {
                if ((workInProgress2.mode & BlockingMode) !== NoMode) {
                  var hasInvisibleChildContext = current2 === null && workInProgress2.memoizedProps.unstable_avoidThisFallback !== true;
                  if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                    renderDidSuspend();
                  } else {
                    renderDidSuspendDelayIfPossible();
                  }
                }
              }
              {
                if (nextDidTimeout || prevDidTimeout) {
                  workInProgress2.flags |= Update;
                }
              }
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              updateHostContainer(workInProgress2);
              if (current2 === null) {
                preparePortalMount(workInProgress2.stateNode.containerInfo);
              }
              return null;
            case ContextProvider:
              popProvider(workInProgress2);
              return null;
            case IncompleteClassComponent: {
              var _Component = workInProgress2.type;
              if (isContextProvider(_Component)) {
                popContext(workInProgress2);
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              var renderState = workInProgress2.memoizedState;
              if (renderState === null) {
                return null;
              }
              var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
              var renderedTail = renderState.rendering;
              if (renderedTail === null) {
                if (!didSuspendAlready) {
                  var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                  if (!cannotBeSuspended) {
                    var row = workInProgress2.child;
                    while (row !== null) {
                      var suspended = findFirstSuspended(row);
                      if (suspended !== null) {
                        didSuspendAlready = true;
                        workInProgress2.flags |= DidCapture;
                        cutOffTailIfNeeded(renderState, false);
                        var newThennables = suspended.updateQueue;
                        if (newThennables !== null) {
                          workInProgress2.updateQueue = newThennables;
                          workInProgress2.flags |= Update;
                        }
                        if (renderState.lastEffect === null) {
                          workInProgress2.firstEffect = null;
                        }
                        workInProgress2.lastEffect = renderState.lastEffect;
                        resetChildFibers(workInProgress2, renderLanes2);
                        pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                        return workInProgress2.child;
                      }
                      row = row.sibling;
                    }
                  }
                  if (renderState.tail !== null && now() > getRenderTargetTime()) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                    {
                      markSpawnedWork(SomeRetryLane);
                    }
                  }
                } else {
                  cutOffTailIfNeeded(renderState, false);
                }
              } else {
                if (!didSuspendAlready) {
                  var _suspended = findFirstSuspended(renderedTail);
                  if (_suspended !== null) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    var _newThennables = _suspended.updateQueue;
                    if (_newThennables !== null) {
                      workInProgress2.updateQueue = _newThennables;
                      workInProgress2.flags |= Update;
                    }
                    cutOffTailIfNeeded(renderState, true);
                    if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                      var lastEffect = workInProgress2.lastEffect = renderState.lastEffect;
                      if (lastEffect !== null) {
                        lastEffect.nextEffect = null;
                      }
                      return null;
                    }
                  } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                    {
                      markSpawnedWork(SomeRetryLane);
                    }
                  }
                }
                if (renderState.isBackwards) {
                  renderedTail.sibling = workInProgress2.child;
                  workInProgress2.child = renderedTail;
                } else {
                  var previousSibling = renderState.last;
                  if (previousSibling !== null) {
                    previousSibling.sibling = renderedTail;
                  } else {
                    workInProgress2.child = renderedTail;
                  }
                  renderState.last = renderedTail;
                }
              }
              if (renderState.tail !== null) {
                var next = renderState.tail;
                renderState.rendering = next;
                renderState.tail = next.sibling;
                renderState.lastEffect = workInProgress2.lastEffect;
                renderState.renderingStartTime = now();
                next.sibling = null;
                var suspenseContext = suspenseStackCursor.current;
                if (didSuspendAlready) {
                  suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                } else {
                  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                }
                pushSuspenseContext(workInProgress2, suspenseContext);
                return next;
              }
              return null;
            }
            case FundamentalComponent: {
              break;
            }
            case ScopeComponent: {
              break;
            }
            case Block:
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              popRenderLanes(workInProgress2);
              if (current2 !== null) {
                var _nextState = workInProgress2.memoizedState;
                var _prevState = current2.memoizedState;
                var prevIsHidden = _prevState !== null;
                var nextIsHidden = _nextState !== null;
                if (prevIsHidden !== nextIsHidden && newProps.mode !== "unstable-defer-without-hiding") {
                  workInProgress2.flags |= Update;
                }
              }
              return null;
            }
          }
          {
            {
              throw Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function unwindWork(workInProgress2, renderLanes2) {
          switch (workInProgress2.tag) {
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              var flags = workInProgress2.flags;
              if (flags & ShouldCapture) {
                workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case HostRoot: {
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var _flags = workInProgress2.flags;
              if (!((_flags & DidCapture) === NoFlags)) {
                {
                  throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
                }
              }
              workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
              return workInProgress2;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var _flags2 = workInProgress2.flags;
              if (_flags2 & ShouldCapture) {
                workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              return null;
            case ContextProvider:
              popProvider(workInProgress2);
              return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(workInProgress2);
              return null;
            default:
              return null;
          }
        }
        function unwindInterruptedWork(interruptedWork) {
          switch (interruptedWork.tag) {
            case ClassComponent: {
              var childContextTypes = interruptedWork.type.childContextTypes;
              if (childContextTypes !== null && childContextTypes !== void 0) {
                popContext(interruptedWork);
              }
              break;
            }
            case HostRoot: {
              popHostContainer(interruptedWork);
              popTopLevelContextObject(interruptedWork);
              resetWorkInProgressVersions();
              break;
            }
            case HostComponent: {
              popHostContext(interruptedWork);
              break;
            }
            case HostPortal:
              popHostContainer(interruptedWork);
              break;
            case SuspenseComponent:
              popSuspenseContext(interruptedWork);
              break;
            case SuspenseListComponent:
              popSuspenseContext(interruptedWork);
              break;
            case ContextProvider:
              popProvider(interruptedWork);
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(interruptedWork);
              break;
          }
        }
        function createCapturedValue(value, source) {
          return {
            value,
            source,
            stack: getStackByFiberInDevAndProd(source)
          };
        }
        function showErrorDialog(boundary, errorInfo) {
          return true;
        }
        function logCapturedError(boundary, errorInfo) {
          try {
            var logError = showErrorDialog(boundary, errorInfo);
            if (logError === false) {
              return;
            }
            var error2 = errorInfo.value;
            if (true) {
              var source = errorInfo.source;
              var stack = errorInfo.stack;
              var componentStack = stack !== null ? stack : "";
              if (error2 != null && error2._suppressLogging) {
                if (boundary.tag === ClassComponent) {
                  return;
                }
                console["error"](error2);
              }
              var componentName = source ? getComponentName(source.type) : null;
              var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
              var errorBoundaryMessage;
              var errorBoundaryName = getComponentName(boundary.type);
              if (errorBoundaryName) {
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
              } else {
                errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
              }
              var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
              console["error"](combinedMessage);
            } else {
              console["error"](error2);
            }
          } catch (e) {
            setTimeout(function() {
              throw e;
            });
          }
        }
        var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
        function createRootErrorUpdate(fiber, errorInfo, lane) {
          var update = createUpdate(NoTimestamp, lane);
          update.tag = CaptureUpdate;
          update.payload = {
            element: null
          };
          var error2 = errorInfo.value;
          update.callback = function() {
            onUncaughtError(error2);
            logCapturedError(fiber, errorInfo);
          };
          return update;
        }
        function createClassErrorUpdate(fiber, errorInfo, lane) {
          var update = createUpdate(NoTimestamp, lane);
          update.tag = CaptureUpdate;
          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
          if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update.payload = function() {
              logCapturedError(fiber, errorInfo);
              return getDerivedStateFromError(error$1);
            };
          }
          var inst = fiber.stateNode;
          if (inst !== null && typeof inst.componentDidCatch === "function") {
            update.callback = function callback() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              if (typeof getDerivedStateFromError !== "function") {
                markLegacyErrorBoundaryAsFailed(this);
                logCapturedError(fiber, errorInfo);
              }
              var error$12 = errorInfo.value;
              var stack = errorInfo.stack;
              this.componentDidCatch(error$12, {
                componentStack: stack !== null ? stack : ""
              });
              {
                if (typeof getDerivedStateFromError !== "function") {
                  if (!includesSomeLane(fiber.lanes, SyncLane)) {
                    error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentName(fiber.type) || "Unknown");
                  }
                }
              }
            };
          } else {
            update.callback = function() {
              markFailedErrorBoundaryForHotReloading(fiber);
            };
          }
          return update;
        }
        function attachPingListener(root2, wakeable, lanes) {
          var pingCache = root2.pingCache;
          var threadIDs;
          if (pingCache === null) {
            pingCache = root2.pingCache = new PossiblyWeakMap$1();
            threadIDs = /* @__PURE__ */ new Set();
            pingCache.set(wakeable, threadIDs);
          } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === void 0) {
              threadIDs = /* @__PURE__ */ new Set();
              pingCache.set(wakeable, threadIDs);
            }
          }
          if (!threadIDs.has(lanes)) {
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
            wakeable.then(ping, ping);
          }
        }
        function throwException(root2, returnFiber, sourceFiber, value, rootRenderLanes) {
          sourceFiber.flags |= Incomplete;
          sourceFiber.firstEffect = sourceFiber.lastEffect = null;
          if (value !== null && typeof value === "object" && typeof value.then === "function") {
            var wakeable = value;
            if ((sourceFiber.mode & BlockingMode) === NoMode) {
              var currentSource = sourceFiber.alternate;
              if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
              } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
              }
            }
            var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext);
            var _workInProgress = returnFiber;
            do {
              if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
                var wakeables = _workInProgress.updateQueue;
                if (wakeables === null) {
                  var updateQueue = /* @__PURE__ */ new Set();
                  updateQueue.add(wakeable);
                  _workInProgress.updateQueue = updateQueue;
                } else {
                  wakeables.add(wakeable);
                }
                if ((_workInProgress.mode & BlockingMode) === NoMode) {
                  _workInProgress.flags |= DidCapture;
                  sourceFiber.flags |= ForceUpdateForLegacySuspense;
                  sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                  if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) {
                      sourceFiber.tag = IncompleteClassComponent;
                    } else {
                      var update = createUpdate(NoTimestamp, SyncLane);
                      update.tag = ForceUpdate;
                      enqueueUpdate(sourceFiber, update);
                    }
                  }
                  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
                  return;
                }
                attachPingListener(root2, wakeable, rootRenderLanes);
                _workInProgress.flags |= ShouldCapture;
                _workInProgress.lanes = rootRenderLanes;
                return;
              }
              _workInProgress = _workInProgress.return;
            } while (_workInProgress !== null);
            value = new Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
          }
          renderDidError();
          value = createCapturedValue(value, sourceFiber);
          var workInProgress2 = returnFiber;
          do {
            switch (workInProgress2.tag) {
              case HostRoot: {
                var _errorInfo = value;
                workInProgress2.flags |= ShouldCapture;
                var lane = pickArbitraryLane(rootRenderLanes);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var _update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                enqueueCapturedUpdate(workInProgress2, _update);
                return;
              }
              case ClassComponent:
                var errorInfo = value;
                var ctor = workInProgress2.type;
                var instance = workInProgress2.stateNode;
                if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                  workInProgress2.flags |= ShouldCapture;
                  var _lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                  var _update2 = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                  enqueueCapturedUpdate(workInProgress2, _update2);
                  return;
                }
                break;
            }
            workInProgress2 = workInProgress2.return;
          } while (workInProgress2 !== null);
        }
        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
        {
          didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
        }
        var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
        var callComponentWillUnmountWithTimer = function(current2, instance) {
          instance.props = current2.memoizedProps;
          instance.state = current2.memoizedState;
          {
            instance.componentWillUnmount();
          }
        };
        function safelyCallComponentWillUnmount(current2, instance) {
          {
            invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current2, instance);
            if (hasCaughtError()) {
              var unmountError = clearCaughtError();
              captureCommitPhaseError(current2, unmountError);
            }
          }
        }
        function safelyDetachRef(current2) {
          var ref = current2.ref;
          if (ref !== null) {
            if (typeof ref === "function") {
              {
                invokeGuardedCallback(null, ref, null, null);
                if (hasCaughtError()) {
                  var refError = clearCaughtError();
                  captureCommitPhaseError(current2, refError);
                }
              }
            } else {
              ref.current = null;
            }
          }
        }
        function safelyCallDestroy(current2, destroy) {
          {
            invokeGuardedCallback(null, destroy, null);
            if (hasCaughtError()) {
              var error2 = clearCaughtError();
              captureCommitPhaseError(current2, error2);
            }
          }
        }
        function commitBeforeMutationLifeCycles(current2, finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block: {
              return;
            }
            case ClassComponent: {
              if (finishedWork.flags & Snapshot) {
                if (current2 !== null) {
                  var prevProps = current2.memoizedProps;
                  var prevState = current2.memoizedState;
                  var instance = finishedWork.stateNode;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                  {
                    var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                    if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                      didWarnSet.add(finishedWork.type);
                      error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentName(finishedWork.type));
                    }
                  }
                  instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                }
              }
              return;
            }
            case HostRoot: {
              {
                if (finishedWork.flags & Snapshot) {
                  var root2 = finishedWork.stateNode;
                  clearContainer(root2.containerInfo);
                }
              }
              return;
            }
            case HostComponent:
            case HostText:
            case HostPortal:
            case IncompleteClassComponent:
              return;
          }
          {
            {
              throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function commitHookEffectListUnmount(tag, finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & tag) === tag) {
                var destroy = effect.destroy;
                effect.destroy = void 0;
                if (destroy !== void 0) {
                  destroy();
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitHookEffectListMount(tag, finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & tag) === tag) {
                var create = effect.create;
                effect.destroy = create();
                {
                  var destroy = effect.destroy;
                  if (destroy !== void 0 && typeof destroy !== "function") {
                    var addendum = void 0;
                    if (destroy === null) {
                      addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                    } else if (typeof destroy.then === "function") {
                      addendum = "\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                    } else {
                      addendum = " You returned: " + destroy;
                    }
                    error("An effect function must not return anything besides a function, which is used for clean-up.%s", addendum);
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function schedulePassiveEffects(finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              var _effect = effect, next = _effect.next, tag = _effect.tag;
              if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
                enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
                enqueuePendingPassiveHookEffectMount(finishedWork, effect);
              }
              effect = next;
            } while (effect !== firstEffect);
          }
        }
        function commitLifeCycles(finishedRoot, current2, finishedWork, committedLanes) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block: {
              {
                commitHookEffectListMount(Layout | HasEffect, finishedWork);
              }
              schedulePassiveEffects(finishedWork);
              return;
            }
            case ClassComponent: {
              var instance = finishedWork.stateNode;
              if (finishedWork.flags & Update) {
                if (current2 === null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  {
                    instance.componentDidMount();
                  }
                } else {
                  var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                  var prevState = current2.memoizedState;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                      }
                    }
                  }
                  {
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                  }
                }
              }
              var updateQueue = finishedWork.updateQueue;
              if (updateQueue !== null) {
                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                    }
                    if (instance.state !== finishedWork.memoizedState) {
                      error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || "instance");
                    }
                  }
                }
                commitUpdateQueue(finishedWork, updateQueue, instance);
              }
              return;
            }
            case HostRoot: {
              var _updateQueue = finishedWork.updateQueue;
              if (_updateQueue !== null) {
                var _instance = null;
                if (finishedWork.child !== null) {
                  switch (finishedWork.child.tag) {
                    case HostComponent:
                      _instance = getPublicInstance(finishedWork.child.stateNode);
                      break;
                    case ClassComponent:
                      _instance = finishedWork.child.stateNode;
                      break;
                  }
                }
                commitUpdateQueue(finishedWork, _updateQueue, _instance);
              }
              return;
            }
            case HostComponent: {
              var _instance2 = finishedWork.stateNode;
              if (current2 === null && finishedWork.flags & Update) {
                var type = finishedWork.type;
                var props = finishedWork.memoizedProps;
                commitMount(_instance2, type, props);
              }
              return;
            }
            case HostText: {
              return;
            }
            case HostPortal: {
              return;
            }
            case Profiler: {
              {
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime2 = getCommitTime();
                if (typeof onRender === "function") {
                  {
                    onRender(finishedWork.memoizedProps.id, current2 === null ? "mount" : "update", finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2, finishedRoot.memoizedInteractions);
                  }
                }
              }
              return;
            }
            case SuspenseComponent: {
              commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
              return;
            }
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case FundamentalComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
              return;
          }
          {
            {
              throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function hideOrUnhideAllChildren(finishedWork, isHidden) {
          {
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (isHidden) {
                  hideInstance(instance);
                } else {
                  unhideInstance(node.stateNode, node.memoizedProps);
                }
              } else if (node.tag === HostText) {
                var _instance3 = node.stateNode;
                if (isHidden) {
                  hideTextInstance(_instance3);
                } else {
                  unhideTextInstance(_instance3, node.memoizedProps);
                }
              } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
        }
        function commitAttachRef(finishedWork) {
          var ref = finishedWork.ref;
          if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch (finishedWork.tag) {
              case HostComponent:
                instanceToUse = getPublicInstance(instance);
                break;
              default:
                instanceToUse = instance;
            }
            if (typeof ref === "function") {
              ref(instanceToUse);
            } else {
              {
                if (!ref.hasOwnProperty("current")) {
                  error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentName(finishedWork.type));
                }
              }
              ref.current = instanceToUse;
            }
          }
        }
        function commitDetachRef(current2) {
          var currentRef = current2.ref;
          if (currentRef !== null) {
            if (typeof currentRef === "function") {
              currentRef(null);
            } else {
              currentRef.current = null;
            }
          }
        }
        function commitUnmount(finishedRoot, current2, renderPriorityLevel) {
          onCommitUnmount(current2);
          switch (current2.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block: {
              var updateQueue = current2.updateQueue;
              if (updateQueue !== null) {
                var lastEffect = updateQueue.lastEffect;
                if (lastEffect !== null) {
                  var firstEffect = lastEffect.next;
                  var effect = firstEffect;
                  do {
                    var _effect2 = effect, destroy = _effect2.destroy, tag = _effect2.tag;
                    if (destroy !== void 0) {
                      if ((tag & Passive$1) !== NoFlags$1) {
                        enqueuePendingPassiveHookEffectUnmount(current2, effect);
                      } else {
                        {
                          safelyCallDestroy(current2, destroy);
                        }
                      }
                    }
                    effect = effect.next;
                  } while (effect !== firstEffect);
                }
              }
              return;
            }
            case ClassComponent: {
              safelyDetachRef(current2);
              var instance = current2.stateNode;
              if (typeof instance.componentWillUnmount === "function") {
                safelyCallComponentWillUnmount(current2, instance);
              }
              return;
            }
            case HostComponent: {
              safelyDetachRef(current2);
              return;
            }
            case HostPortal: {
              {
                unmountHostComponents(finishedRoot, current2);
              }
              return;
            }
            case FundamentalComponent: {
              return;
            }
            case DehydratedFragment: {
              return;
            }
            case ScopeComponent: {
              return;
            }
          }
        }
        function commitNestedUnmounts(finishedRoot, root2, renderPriorityLevel) {
          var node = root2;
          while (true) {
            commitUnmount(finishedRoot, node);
            if (node.child !== null && node.tag !== HostPortal) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === root2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === root2) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function detachFiberMutation(fiber) {
          fiber.alternate = null;
          fiber.child = null;
          fiber.dependencies = null;
          fiber.firstEffect = null;
          fiber.lastEffect = null;
          fiber.memoizedProps = null;
          fiber.memoizedState = null;
          fiber.pendingProps = null;
          fiber.return = null;
          fiber.updateQueue = null;
          {
            fiber._debugOwner = null;
          }
        }
        function getHostParentFiber(fiber) {
          var parent = fiber.return;
          while (parent !== null) {
            if (isHostParent(parent)) {
              return parent;
            }
            parent = parent.return;
          }
          {
            {
              throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function isHostParent(fiber) {
          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
        }
        function getHostSibling(fiber) {
          var node = fiber;
          siblings:
            while (true) {
              while (node.sibling === null) {
                if (node.return === null || isHostParent(node.return)) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
              while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                if (node.flags & Placement) {
                  continue siblings;
                }
                if (node.child === null || node.tag === HostPortal) {
                  continue siblings;
                } else {
                  node.child.return = node;
                  node = node.child;
                }
              }
              if (!(node.flags & Placement)) {
                return node.stateNode;
              }
            }
        }
        function commitPlacement(finishedWork) {
          var parentFiber = getHostParentFiber(finishedWork);
          var parent;
          var isContainer;
          var parentStateNode = parentFiber.stateNode;
          switch (parentFiber.tag) {
            case HostComponent:
              parent = parentStateNode;
              isContainer = false;
              break;
            case HostRoot:
              parent = parentStateNode.containerInfo;
              isContainer = true;
              break;
            case HostPortal:
              parent = parentStateNode.containerInfo;
              isContainer = true;
              break;
            case FundamentalComponent:
            default: {
              {
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          if (parentFiber.flags & ContentReset) {
            resetTextContent(parent);
            parentFiber.flags &= ~ContentReset;
          }
          var before = getHostSibling(finishedWork);
          if (isContainer) {
            insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
          } else {
            insertOrAppendPlacementNode(finishedWork, before, parent);
          }
        }
        function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              appendChildToContainer(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNodeIntoContainer(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function insertOrAppendPlacementNode(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) {
              insertBefore(parent, stateNode, before);
            } else {
              appendChild(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNode(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNode(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function unmountHostComponents(finishedRoot, current2, renderPriorityLevel) {
          var node = current2;
          var currentParentIsValid = false;
          var currentParent;
          var currentParentIsContainer;
          while (true) {
            if (!currentParentIsValid) {
              var parent = node.return;
              findParent:
                while (true) {
                  if (!(parent !== null)) {
                    {
                      throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                    }
                  }
                  var parentStateNode = parent.stateNode;
                  switch (parent.tag) {
                    case HostComponent:
                      currentParent = parentStateNode;
                      currentParentIsContainer = false;
                      break findParent;
                    case HostRoot:
                      currentParent = parentStateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                    case HostPortal:
                      currentParent = parentStateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                  }
                  parent = parent.return;
                }
              currentParentIsValid = true;
            }
            if (node.tag === HostComponent || node.tag === HostText) {
              commitNestedUnmounts(finishedRoot, node);
              if (currentParentIsContainer) {
                removeChildFromContainer(currentParent, node.stateNode);
              } else {
                removeChild(currentParent, node.stateNode);
              }
            } else if (node.tag === HostPortal) {
              if (node.child !== null) {
                currentParent = node.stateNode.containerInfo;
                currentParentIsContainer = true;
                node.child.return = node;
                node = node.child;
                continue;
              }
            } else {
              commitUnmount(finishedRoot, node);
              if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
            }
            if (node === current2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === current2) {
                return;
              }
              node = node.return;
              if (node.tag === HostPortal) {
                currentParentIsValid = false;
              }
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function commitDeletion(finishedRoot, current2, renderPriorityLevel) {
          {
            unmountHostComponents(finishedRoot, current2);
          }
          var alternate = current2.alternate;
          detachFiberMutation(current2);
          if (alternate !== null) {
            detachFiberMutation(alternate);
          }
        }
        function commitWork(current2, finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block: {
              {
                commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
              }
              return;
            }
            case ClassComponent: {
              return;
            }
            case HostComponent: {
              var instance = finishedWork.stateNode;
              if (instance != null) {
                var newProps = finishedWork.memoizedProps;
                var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                var type = finishedWork.type;
                var updatePayload = finishedWork.updateQueue;
                finishedWork.updateQueue = null;
                if (updatePayload !== null) {
                  commitUpdate(instance, updatePayload, type, oldProps, newProps);
                }
              }
              return;
            }
            case HostText: {
              if (!(finishedWork.stateNode !== null)) {
                {
                  throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                }
              }
              var textInstance = finishedWork.stateNode;
              var newText = finishedWork.memoizedProps;
              var oldText = current2 !== null ? current2.memoizedProps : newText;
              commitTextUpdate(textInstance, oldText, newText);
              return;
            }
            case HostRoot: {
              {
                var _root = finishedWork.stateNode;
                if (_root.hydrate) {
                  _root.hydrate = false;
                  commitHydratedContainer(_root.containerInfo);
                }
              }
              return;
            }
            case Profiler: {
              return;
            }
            case SuspenseComponent: {
              commitSuspenseComponent(finishedWork);
              attachSuspenseRetryListeners(finishedWork);
              return;
            }
            case SuspenseListComponent: {
              attachSuspenseRetryListeners(finishedWork);
              return;
            }
            case IncompleteClassComponent: {
              return;
            }
            case FundamentalComponent: {
              break;
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              var newState = finishedWork.memoizedState;
              var isHidden = newState !== null;
              hideOrUnhideAllChildren(finishedWork, isHidden);
              return;
            }
          }
          {
            {
              throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function commitSuspenseComponent(finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState !== null) {
            markCommitTimeOfFallback();
            {
              var primaryChildParent = finishedWork.child;
              hideOrUnhideAllChildren(primaryChildParent, true);
            }
          }
        }
        function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState === null) {
            var current2 = finishedWork.alternate;
            if (current2 !== null) {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                var suspenseInstance = prevState.dehydrated;
                if (suspenseInstance !== null) {
                  commitHydratedSuspenseInstance(suspenseInstance);
                }
              }
            }
          }
        }
        function attachSuspenseRetryListeners(finishedWork) {
          var wakeables = finishedWork.updateQueue;
          if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) {
              retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            }
            wakeables.forEach(function(wakeable) {
              var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
              if (!retryCache.has(wakeable)) {
                {
                  if (wakeable.__reactDoNotTraceInteractions !== true) {
                    retry = tracing.unstable_wrap(retry);
                  }
                }
                retryCache.add(wakeable);
                wakeable.then(retry, retry);
              }
            });
          }
        }
        function isSuspenseBoundaryBeingHidden(current2, finishedWork) {
          if (current2 !== null) {
            var oldState = current2.memoizedState;
            if (oldState === null || oldState.dehydrated !== null) {
              var newState = finishedWork.memoizedState;
              return newState !== null && newState.dehydrated === null;
            }
          }
          return false;
        }
        function commitResetTextContent(current2) {
          resetTextContent(current2.stateNode);
        }
        var COMPONENT_TYPE = 0;
        var HAS_PSEUDO_CLASS_TYPE = 1;
        var ROLE_TYPE = 2;
        var TEST_NAME_TYPE = 3;
        var TEXT_TYPE = 4;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor$1 = Symbol.for;
          COMPONENT_TYPE = symbolFor$1("selector.component");
          HAS_PSEUDO_CLASS_TYPE = symbolFor$1("selector.has_pseudo_class");
          ROLE_TYPE = symbolFor$1("selector.role");
          TEST_NAME_TYPE = symbolFor$1("selector.test_id");
          TEXT_TYPE = symbolFor$1("selector.text");
        }
        var commitHooks = [];
        function onCommitRoot$1() {
          {
            commitHooks.forEach(function(commitHook) {
              return commitHook();
            });
          }
        }
        var ceil = Math.ceil;
        var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
        var NoContext = 0;
        var BatchedContext = 1;
        var EventContext = 2;
        var DiscreteEventContext = 4;
        var LegacyUnbatchedContext = 8;
        var RenderContext = 16;
        var CommitContext = 32;
        var RetryAfterError = 64;
        var RootIncomplete = 0;
        var RootFatalErrored = 1;
        var RootErrored = 2;
        var RootSuspended = 3;
        var RootSuspendedWithDelay = 4;
        var RootCompleted = 5;
        var executionContext = NoContext;
        var workInProgressRoot = null;
        var workInProgress = null;
        var workInProgressRootRenderLanes = NoLanes;
        var subtreeRenderLanes = NoLanes;
        var subtreeRenderLanesCursor = createCursor(NoLanes);
        var workInProgressRootExitStatus = RootIncomplete;
        var workInProgressRootFatalError = null;
        var workInProgressRootIncludedLanes = NoLanes;
        var workInProgressRootSkippedLanes = NoLanes;
        var workInProgressRootUpdatedLanes = NoLanes;
        var workInProgressRootPingedLanes = NoLanes;
        var mostRecentlyUpdatedRoot = null;
        var globalMostRecentFallbackTime = 0;
        var FALLBACK_THROTTLE_MS = 500;
        var workInProgressRootRenderTargetTime = Infinity;
        var RENDER_TIMEOUT_MS = 500;
        function resetRenderTimer() {
          workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
        }
        function getRenderTargetTime() {
          return workInProgressRootRenderTargetTime;
        }
        var nextEffect = null;
        var hasUncaughtError = false;
        var firstUncaughtError = null;
        var legacyErrorBoundariesThatAlreadyFailed = null;
        var rootDoesHavePassiveEffects = false;
        var rootWithPendingPassiveEffects = null;
        var pendingPassiveEffectsRenderPriority = NoPriority$1;
        var pendingPassiveEffectsLanes = NoLanes;
        var pendingPassiveHookEffectsMount = [];
        var pendingPassiveHookEffectsUnmount = [];
        var rootsWithPendingDiscreteUpdates = null;
        var NESTED_UPDATE_LIMIT = 50;
        var nestedUpdateCount = 0;
        var rootWithNestedUpdates = null;
        var NESTED_PASSIVE_UPDATE_LIMIT = 50;
        var nestedPassiveUpdateCount = 0;
        var spawnedWorkDuringRender = null;
        var currentEventTime = NoTimestamp;
        var currentEventWipLanes = NoLanes;
        var currentEventPendingLanes = NoLanes;
        var isFlushingPassiveEffects = false;
        var focusedInstanceHandle = null;
        var shouldFireAfterActiveInstanceBlur = false;
        function getWorkInProgressRoot() {
          return workInProgressRoot;
        }
        function requestEventTime() {
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            return now();
          }
          if (currentEventTime !== NoTimestamp) {
            return currentEventTime;
          }
          currentEventTime = now();
          return currentEventTime;
        }
        function requestUpdateLane(fiber) {
          var mode = fiber.mode;
          if ((mode & BlockingMode) === NoMode) {
            return SyncLane;
          } else if ((mode & ConcurrentMode) === NoMode) {
            return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
          }
          if (currentEventWipLanes === NoLanes) {
            currentEventWipLanes = workInProgressRootIncludedLanes;
          }
          var isTransition = requestCurrentTransition() !== NoTransition;
          if (isTransition) {
            if (currentEventPendingLanes !== NoLanes) {
              currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
            }
            return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
          }
          var schedulerPriority = getCurrentPriorityLevel();
          var lane;
          if ((executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {
            lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
          } else {
            var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);
            lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
          }
          return lane;
        }
        function requestRetryLane(fiber) {
          var mode = fiber.mode;
          if ((mode & BlockingMode) === NoMode) {
            return SyncLane;
          } else if ((mode & ConcurrentMode) === NoMode) {
            return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
          }
          if (currentEventWipLanes === NoLanes) {
            currentEventWipLanes = workInProgressRootIncludedLanes;
          }
          return findRetryLane(currentEventWipLanes);
        }
        function scheduleUpdateOnFiber(fiber, lane, eventTime) {
          checkForNestedUpdates();
          warnAboutRenderPhaseUpdatesInDEV(fiber);
          var root2 = markUpdateLaneFromFiberToRoot(fiber, lane);
          if (root2 === null) {
            warnAboutUpdateOnUnmountedFiberInDEV(fiber);
            return null;
          }
          markRootUpdated(root2, lane, eventTime);
          if (root2 === workInProgressRoot) {
            {
              workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
            }
            if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
              markRootSuspended$1(root2, workInProgressRootRenderLanes);
            }
          }
          var priorityLevel = getCurrentPriorityLevel();
          if (lane === SyncLane) {
            if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & (RenderContext | CommitContext)) === NoContext) {
              schedulePendingInteractions(root2, lane);
              performSyncWorkOnRoot(root2);
            } else {
              ensureRootIsScheduled(root2, eventTime);
              schedulePendingInteractions(root2, lane);
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          } else {
            if ((executionContext & DiscreteEventContext) !== NoContext && (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
              if (rootsWithPendingDiscreteUpdates === null) {
                rootsWithPendingDiscreteUpdates = /* @__PURE__ */ new Set([root2]);
              } else {
                rootsWithPendingDiscreteUpdates.add(root2);
              }
            }
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, lane);
          }
          mostRecentlyUpdatedRoot = root2;
        }
        function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
          var alternate = sourceFiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, lane);
          }
          {
            if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            }
          }
          var node = sourceFiber;
          var parent = sourceFiber.return;
          while (parent !== null) {
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) {
              alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            } else {
              {
                if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                  warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                }
              }
            }
            node = parent;
            parent = parent.return;
          }
          if (node.tag === HostRoot) {
            var root2 = node.stateNode;
            return root2;
          } else {
            return null;
          }
        }
        function ensureRootIsScheduled(root2, currentTime) {
          var existingCallbackNode = root2.callbackNode;
          markStarvedLanesAsExpired(root2, currentTime);
          var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          var newCallbackPriority = returnNextLanesPriority();
          if (nextLanes === NoLanes) {
            if (existingCallbackNode !== null) {
              cancelCallback(existingCallbackNode);
              root2.callbackNode = null;
              root2.callbackPriority = NoLanePriority;
            }
            return;
          }
          if (existingCallbackNode !== null) {
            var existingCallbackPriority = root2.callbackPriority;
            if (existingCallbackPriority === newCallbackPriority) {
              return;
            }
            cancelCallback(existingCallbackNode);
          }
          var newCallbackNode;
          if (newCallbackPriority === SyncLanePriority) {
            newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2));
          } else if (newCallbackPriority === SyncBatchedLanePriority) {
            newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root2));
          } else {
            var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
            newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
          }
          root2.callbackPriority = newCallbackPriority;
          root2.callbackNode = newCallbackNode;
        }
        function performConcurrentWorkOnRoot(root2) {
          currentEventTime = NoTimestamp;
          currentEventWipLanes = NoLanes;
          currentEventPendingLanes = NoLanes;
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Should not already be working.");
            }
          }
          var originalCallbackNode = root2.callbackNode;
          var didFlushPassiveEffects = flushPassiveEffects();
          if (didFlushPassiveEffects) {
            if (root2.callbackNode !== originalCallbackNode) {
              return null;
            }
          }
          var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (lanes === NoLanes) {
            return null;
          }
          var exitStatus = renderRootConcurrent(root2, lanes);
          if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
            prepareFreshStack(root2, NoLanes);
          } else if (exitStatus !== RootIncomplete) {
            if (exitStatus === RootErrored) {
              executionContext |= RetryAfterError;
              if (root2.hydrate) {
                root2.hydrate = false;
                clearContainer(root2.containerInfo);
              }
              lanes = getLanesToRetrySynchronouslyOnError(root2);
              if (lanes !== NoLanes) {
                exitStatus = renderRootSync(root2, lanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root2, NoLanes);
              markRootSuspended$1(root2, lanes);
              ensureRootIsScheduled(root2, now());
              throw fatalError;
            }
            var finishedWork = root2.current.alternate;
            root2.finishedWork = finishedWork;
            root2.finishedLanes = lanes;
            finishConcurrentRender(root2, exitStatus, lanes);
          }
          ensureRootIsScheduled(root2, now());
          if (root2.callbackNode === originalCallbackNode) {
            return performConcurrentWorkOnRoot.bind(null, root2);
          }
          return null;
        }
        function finishConcurrentRender(root2, exitStatus, lanes) {
          switch (exitStatus) {
            case RootIncomplete:
            case RootFatalErrored: {
              {
                {
                  throw Error("Root did not complete. This is a bug in React.");
                }
              }
            }
            case RootErrored: {
              commitRoot(root2);
              break;
            }
            case RootSuspended: {
              markRootSuspended$1(root2, lanes);
              if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                if (msUntilTimeout > 10) {
                  var nextLanes = getNextLanes(root2, NoLanes);
                  if (nextLanes !== NoLanes) {
                    break;
                  }
                  var suspendedLanes = root2.suspendedLanes;
                  if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                    var eventTime = requestEventTime();
                    markRootPinged(root2, suspendedLanes);
                    break;
                  }
                  root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2), msUntilTimeout);
                  break;
                }
              }
              commitRoot(root2);
              break;
            }
            case RootSuspendedWithDelay: {
              markRootSuspended$1(root2, lanes);
              if (includesOnlyTransitions(lanes)) {
                break;
              }
              if (!shouldForceFlushFallbacksInDEV()) {
                var mostRecentEventTime = getMostRecentEventTime(root2, lanes);
                var eventTimeMs = mostRecentEventTime;
                var timeElapsedMs = now() - eventTimeMs;
                var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                if (_msUntilTimeout > 10) {
                  root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2), _msUntilTimeout);
                  break;
                }
              }
              commitRoot(root2);
              break;
            }
            case RootCompleted: {
              commitRoot(root2);
              break;
            }
            default: {
              {
                {
                  throw Error("Unknown root exit status.");
                }
              }
            }
          }
        }
        function markRootSuspended$1(root2, suspendedLanes) {
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
          markRootSuspended(root2, suspendedLanes);
        }
        function performSyncWorkOnRoot(root2) {
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Should not already be working.");
            }
          }
          flushPassiveEffects();
          var lanes;
          var exitStatus;
          if (root2 === workInProgressRoot && includesSomeLane(root2.expiredLanes, workInProgressRootRenderLanes)) {
            lanes = workInProgressRootRenderLanes;
            exitStatus = renderRootSync(root2, lanes);
            if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
              lanes = getNextLanes(root2, lanes);
              exitStatus = renderRootSync(root2, lanes);
            }
          } else {
            lanes = getNextLanes(root2, NoLanes);
            exitStatus = renderRootSync(root2, lanes);
          }
          if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
            executionContext |= RetryAfterError;
            if (root2.hydrate) {
              root2.hydrate = false;
              clearContainer(root2.containerInfo);
            }
            lanes = getLanesToRetrySynchronouslyOnError(root2);
            if (lanes !== NoLanes) {
              exitStatus = renderRootSync(root2, lanes);
            }
          }
          if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root2, NoLanes);
            markRootSuspended$1(root2, lanes);
            ensureRootIsScheduled(root2, now());
            throw fatalError;
          }
          var finishedWork = root2.current.alternate;
          root2.finishedWork = finishedWork;
          root2.finishedLanes = lanes;
          commitRoot(root2);
          ensureRootIsScheduled(root2, now());
          return null;
        }
        function flushDiscreteUpdates() {
          if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
            {
              if ((executionContext & RenderContext) !== NoContext) {
                error("unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
              }
            }
            return;
          }
          flushPendingDiscreteUpdates();
          flushPassiveEffects();
        }
        function flushPendingDiscreteUpdates() {
          if (rootsWithPendingDiscreteUpdates !== null) {
            var roots = rootsWithPendingDiscreteUpdates;
            rootsWithPendingDiscreteUpdates = null;
            roots.forEach(function(root2) {
              markDiscreteUpdatesExpired(root2);
              ensureRootIsScheduled(root2, now());
            });
          }
          flushSyncCallbackQueue();
        }
        function batchedUpdates$1(fn, a) {
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          try {
            return fn(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
              resetRenderTimer();
              flushSyncCallbackQueue();
            }
          }
        }
        function batchedEventUpdates$1(fn, a) {
          var prevExecutionContext = executionContext;
          executionContext |= EventContext;
          try {
            return fn(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
              resetRenderTimer();
              flushSyncCallbackQueue();
            }
          }
        }
        function discreteUpdates$1(fn, a, b, c, d) {
          var prevExecutionContext = executionContext;
          executionContext |= DiscreteEventContext;
          {
            try {
              return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));
            } finally {
              executionContext = prevExecutionContext;
              if (executionContext === NoContext) {
                resetRenderTimer();
                flushSyncCallbackQueue();
              }
            }
          }
        }
        function unbatchedUpdates(fn, a) {
          var prevExecutionContext = executionContext;
          executionContext &= ~BatchedContext;
          executionContext |= LegacyUnbatchedContext;
          try {
            return fn(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
              resetRenderTimer();
              flushSyncCallbackQueue();
            }
          }
        }
        function flushSync(fn, a) {
          var prevExecutionContext = executionContext;
          if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
            {
              error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            }
            return fn(a);
          }
          executionContext |= BatchedContext;
          {
            try {
              if (fn) {
                return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));
              } else {
                return void 0;
              }
            } finally {
              executionContext = prevExecutionContext;
              flushSyncCallbackQueue();
            }
          }
        }
        function pushRenderLanes(fiber, lanes) {
          push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
          subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
          workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
        }
        function popRenderLanes(fiber) {
          subtreeRenderLanes = subtreeRenderLanesCursor.current;
          pop(subtreeRenderLanesCursor, fiber);
        }
        function prepareFreshStack(root2, lanes) {
          root2.finishedWork = null;
          root2.finishedLanes = NoLanes;
          var timeoutHandle = root2.timeoutHandle;
          if (timeoutHandle !== noTimeout) {
            root2.timeoutHandle = noTimeout;
            cancelTimeout(timeoutHandle);
          }
          if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while (interruptedWork !== null) {
              unwindInterruptedWork(interruptedWork);
              interruptedWork = interruptedWork.return;
            }
          }
          workInProgressRoot = root2;
          workInProgress = createWorkInProgress(root2.current, null);
          workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
          workInProgressRootExitStatus = RootIncomplete;
          workInProgressRootFatalError = null;
          workInProgressRootSkippedLanes = NoLanes;
          workInProgressRootUpdatedLanes = NoLanes;
          workInProgressRootPingedLanes = NoLanes;
          {
            spawnedWorkDuringRender = null;
          }
          {
            ReactStrictModeWarnings.discardPendingWarnings();
          }
        }
        function handleError(root2, thrownValue) {
          do {
            var erroredWork = workInProgress;
            try {
              resetContextDependencies();
              resetHooksAfterThrow();
              resetCurrentFiber();
              ReactCurrentOwner$2.current = null;
              if (erroredWork === null || erroredWork.return === null) {
                workInProgressRootExitStatus = RootFatalErrored;
                workInProgressRootFatalError = thrownValue;
                workInProgress = null;
                return;
              }
              if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
              }
              throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
              completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
              thrownValue = yetAnotherThrownValue;
              if (workInProgress === erroredWork && erroredWork !== null) {
                erroredWork = erroredWork.return;
                workInProgress = erroredWork;
              } else {
                erroredWork = workInProgress;
              }
              continue;
            }
            return;
          } while (true);
        }
        function pushDispatcher() {
          var prevDispatcher = ReactCurrentDispatcher$2.current;
          ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
          if (prevDispatcher === null) {
            return ContextOnlyDispatcher;
          } else {
            return prevDispatcher;
          }
        }
        function popDispatcher(prevDispatcher) {
          ReactCurrentDispatcher$2.current = prevDispatcher;
        }
        function pushInteractions(root2) {
          {
            var prevInteractions = tracing.__interactionsRef.current;
            tracing.__interactionsRef.current = root2.memoizedInteractions;
            return prevInteractions;
          }
        }
        function popInteractions(prevInteractions) {
          {
            tracing.__interactionsRef.current = prevInteractions;
          }
        }
        function markCommitTimeOfFallback() {
          globalMostRecentFallbackTime = now();
        }
        function markSkippedUpdateLanes(lane) {
          workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
        }
        function renderDidSuspend() {
          if (workInProgressRootExitStatus === RootIncomplete) {
            workInProgressRootExitStatus = RootSuspended;
          }
        }
        function renderDidSuspendDelayIfPossible() {
          if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
            workInProgressRootExitStatus = RootSuspendedWithDelay;
          }
          if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {
            markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
          }
        }
        function renderDidError() {
          if (workInProgressRootExitStatus !== RootCompleted) {
            workInProgressRootExitStatus = RootErrored;
          }
        }
        function renderHasNotSuspendedYet() {
          return workInProgressRootExitStatus === RootIncomplete;
        }
        function renderRootSync(root2, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
            prepareFreshStack(root2, lanes);
            startWorkOnPendingInteractions(root2, lanes);
          }
          var prevInteractions = pushInteractions(root2);
          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root2, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          {
            popInteractions(prevInteractions);
          }
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);
          if (workInProgress !== null) {
            {
              {
                throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
          workInProgressRoot = null;
          workInProgressRootRenderLanes = NoLanes;
          return workInProgressRootExitStatus;
        }
        function workLoopSync() {
          while (workInProgress !== null) {
            performUnitOfWork(workInProgress);
          }
        }
        function renderRootConcurrent(root2, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
            resetRenderTimer();
            prepareFreshStack(root2, lanes);
            startWorkOnPendingInteractions(root2, lanes);
          }
          var prevInteractions = pushInteractions(root2);
          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root2, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          {
            popInteractions(prevInteractions);
          }
          popDispatcher(prevDispatcher);
          executionContext = prevExecutionContext;
          if (workInProgress !== null) {
            return RootIncomplete;
          } else {
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
        }
        function workLoopConcurrent() {
          while (workInProgress !== null && !shouldYield()) {
            performUnitOfWork(workInProgress);
          }
        }
        function performUnitOfWork(unitOfWork) {
          var current2 = unitOfWork.alternate;
          setCurrentFiber(unitOfWork);
          var next;
          if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
          } else {
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
          }
          resetCurrentFiber();
          unitOfWork.memoizedProps = unitOfWork.pendingProps;
          if (next === null) {
            completeUnitOfWork(unitOfWork);
          } else {
            workInProgress = next;
          }
          ReactCurrentOwner$2.current = null;
        }
        function completeUnitOfWork(unitOfWork) {
          var completedWork = unitOfWork;
          do {
            var current2 = completedWork.alternate;
            var returnFiber = completedWork.return;
            if ((completedWork.flags & Incomplete) === NoFlags) {
              setCurrentFiber(completedWork);
              var next = void 0;
              if ((completedWork.mode & ProfileMode) === NoMode) {
                next = completeWork(current2, completedWork, subtreeRenderLanes);
              } else {
                startProfilerTimer(completedWork);
                next = completeWork(current2, completedWork, subtreeRenderLanes);
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
              }
              resetCurrentFiber();
              if (next !== null) {
                workInProgress = next;
                return;
              }
              resetChildLanes(completedWork);
              if (returnFiber !== null && (returnFiber.flags & Incomplete) === NoFlags) {
                if (returnFiber.firstEffect === null) {
                  returnFiber.firstEffect = completedWork.firstEffect;
                }
                if (completedWork.lastEffect !== null) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
                  }
                  returnFiber.lastEffect = completedWork.lastEffect;
                }
                var flags = completedWork.flags;
                if (flags > PerformedWork) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = completedWork;
                  } else {
                    returnFiber.firstEffect = completedWork;
                  }
                  returnFiber.lastEffect = completedWork;
                }
              }
            } else {
              var _next = unwindWork(completedWork);
              if (_next !== null) {
                _next.flags &= HostEffectMask;
                workInProgress = _next;
                return;
              }
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                var actualDuration = completedWork.actualDuration;
                var child = completedWork.child;
                while (child !== null) {
                  actualDuration += child.actualDuration;
                  child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
              }
              if (returnFiber !== null) {
                returnFiber.firstEffect = returnFiber.lastEffect = null;
                returnFiber.flags |= Incomplete;
              }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
              workInProgress = siblingFiber;
              return;
            }
            completedWork = returnFiber;
            workInProgress = completedWork;
          } while (completedWork !== null);
          if (workInProgressRootExitStatus === RootIncomplete) {
            workInProgressRootExitStatus = RootCompleted;
          }
        }
        function resetChildLanes(completedWork) {
          if ((completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {
            return;
          }
          var newChildLanes = NoLanes;
          if ((completedWork.mode & ProfileMode) !== NoMode) {
            var actualDuration = completedWork.actualDuration;
            var treeBaseDuration = completedWork.selfBaseDuration;
            var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
            var child = completedWork.child;
            while (child !== null) {
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
              if (shouldBubbleActualDurations) {
                actualDuration += child.actualDuration;
              }
              treeBaseDuration += child.treeBaseDuration;
              child = child.sibling;
            }
            var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;
            if (isTimedOutSuspense) {
              var primaryChildFragment = completedWork.child;
              if (primaryChildFragment !== null) {
                treeBaseDuration -= primaryChildFragment.treeBaseDuration;
              }
            }
            completedWork.actualDuration = actualDuration;
            completedWork.treeBaseDuration = treeBaseDuration;
          } else {
            var _child = completedWork.child;
            while (_child !== null) {
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
              _child = _child.sibling;
            }
          }
          completedWork.childLanes = newChildLanes;
        }
        function commitRoot(root2) {
          var renderPriorityLevel = getCurrentPriorityLevel();
          runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root2, renderPriorityLevel));
          return null;
        }
        function commitRootImpl(root2, renderPriorityLevel) {
          do {
            flushPassiveEffects();
          } while (rootWithPendingPassiveEffects !== null);
          flushRenderPhaseStrictModeWarningsInDEV();
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Should not already be working.");
            }
          }
          var finishedWork = root2.finishedWork;
          var lanes = root2.finishedLanes;
          if (finishedWork === null) {
            return null;
          }
          root2.finishedWork = null;
          root2.finishedLanes = NoLanes;
          if (!(finishedWork !== root2.current)) {
            {
              throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          root2.callbackNode = null;
          var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
          markRootFinished(root2, remainingLanes);
          if (rootsWithPendingDiscreteUpdates !== null) {
            if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root2)) {
              rootsWithPendingDiscreteUpdates.delete(root2);
            }
          }
          if (root2 === workInProgressRoot) {
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
          }
          var firstEffect;
          if (finishedWork.flags > PerformedWork) {
            if (finishedWork.lastEffect !== null) {
              finishedWork.lastEffect.nextEffect = finishedWork;
              firstEffect = finishedWork.firstEffect;
            } else {
              firstEffect = finishedWork;
            }
          } else {
            firstEffect = finishedWork.firstEffect;
          }
          if (firstEffect !== null) {
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            var prevInteractions = pushInteractions(root2);
            ReactCurrentOwner$2.current = null;
            focusedInstanceHandle = prepareForCommit(root2.containerInfo);
            shouldFireAfterActiveInstanceBlur = false;
            nextEffect = firstEffect;
            do {
              {
                invokeGuardedCallback(null, commitBeforeMutationEffects, null);
                if (hasCaughtError()) {
                  if (!(nextEffect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var error2 = clearCaughtError();
                  captureCommitPhaseError(nextEffect, error2);
                  nextEffect = nextEffect.nextEffect;
                }
              }
            } while (nextEffect !== null);
            focusedInstanceHandle = null;
            {
              recordCommitTime();
            }
            nextEffect = firstEffect;
            do {
              {
                invokeGuardedCallback(null, commitMutationEffects, null, root2, renderPriorityLevel);
                if (hasCaughtError()) {
                  if (!(nextEffect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var _error = clearCaughtError();
                  captureCommitPhaseError(nextEffect, _error);
                  nextEffect = nextEffect.nextEffect;
                }
              }
            } while (nextEffect !== null);
            resetAfterCommit(root2.containerInfo);
            root2.current = finishedWork;
            nextEffect = firstEffect;
            do {
              {
                invokeGuardedCallback(null, commitLayoutEffects, null, root2, lanes);
                if (hasCaughtError()) {
                  if (!(nextEffect !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var _error2 = clearCaughtError();
                  captureCommitPhaseError(nextEffect, _error2);
                  nextEffect = nextEffect.nextEffect;
                }
              }
            } while (nextEffect !== null);
            nextEffect = null;
            requestPaint();
            {
              popInteractions(prevInteractions);
            }
            executionContext = prevExecutionContext;
          } else {
            root2.current = finishedWork;
            {
              recordCommitTime();
            }
          }
          var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
          if (rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root2;
            pendingPassiveEffectsLanes = lanes;
            pendingPassiveEffectsRenderPriority = renderPriorityLevel;
          } else {
            nextEffect = firstEffect;
            while (nextEffect !== null) {
              var nextNextEffect = nextEffect.nextEffect;
              nextEffect.nextEffect = null;
              if (nextEffect.flags & Deletion) {
                detachFiberAfterEffects(nextEffect);
              }
              nextEffect = nextNextEffect;
            }
          }
          remainingLanes = root2.pendingLanes;
          if (remainingLanes !== NoLanes) {
            {
              if (spawnedWorkDuringRender !== null) {
                var expirationTimes = spawnedWorkDuringRender;
                spawnedWorkDuringRender = null;
                for (var i = 0; i < expirationTimes.length; i++) {
                  scheduleInteractions(root2, expirationTimes[i], root2.memoizedInteractions);
                }
              }
              schedulePendingInteractions(root2, remainingLanes);
            }
          } else {
            legacyErrorBoundariesThatAlreadyFailed = null;
          }
          {
            if (!rootDidHavePassiveEffects) {
              finishPendingInteractions(root2, lanes);
            }
          }
          if (remainingLanes === SyncLane) {
            if (root2 === rootWithNestedUpdates) {
              nestedUpdateCount++;
            } else {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = root2;
            }
          } else {
            nestedUpdateCount = 0;
          }
          onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
          {
            onCommitRoot$1();
          }
          ensureRootIsScheduled(root2, now());
          if (hasUncaughtError) {
            hasUncaughtError = false;
            var _error3 = firstUncaughtError;
            firstUncaughtError = null;
            throw _error3;
          }
          if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
            return null;
          }
          flushSyncCallbackQueue();
          return null;
        }
        function commitBeforeMutationEffects() {
          while (nextEffect !== null) {
            var current2 = nextEffect.alternate;
            if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
              if ((nextEffect.flags & Deletion) !== NoFlags) {
                if (doesFiberContain(nextEffect, focusedInstanceHandle)) {
                  shouldFireAfterActiveInstanceBlur = true;
                }
              } else {
                if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current2, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {
                  shouldFireAfterActiveInstanceBlur = true;
                }
              }
            }
            var flags = nextEffect.flags;
            if ((flags & Snapshot) !== NoFlags) {
              setCurrentFiber(nextEffect);
              commitBeforeMutationLifeCycles(current2, nextEffect);
              resetCurrentFiber();
            }
            if ((flags & Passive) !== NoFlags) {
              if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                scheduleCallback(NormalPriority$1, function() {
                  flushPassiveEffects();
                  return null;
                });
              }
            }
            nextEffect = nextEffect.nextEffect;
          }
        }
        function commitMutationEffects(root2, renderPriorityLevel) {
          while (nextEffect !== null) {
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & ContentReset) {
              commitResetTextContent(nextEffect);
            }
            if (flags & Ref) {
              var current2 = nextEffect.alternate;
              if (current2 !== null) {
                commitDetachRef(current2);
              }
            }
            var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);
            switch (primaryFlags) {
              case Placement: {
                commitPlacement(nextEffect);
                nextEffect.flags &= ~Placement;
                break;
              }
              case PlacementAndUpdate: {
                commitPlacement(nextEffect);
                nextEffect.flags &= ~Placement;
                var _current = nextEffect.alternate;
                commitWork(_current, nextEffect);
                break;
              }
              case Hydrating: {
                nextEffect.flags &= ~Hydrating;
                break;
              }
              case HydratingAndUpdate: {
                nextEffect.flags &= ~Hydrating;
                var _current2 = nextEffect.alternate;
                commitWork(_current2, nextEffect);
                break;
              }
              case Update: {
                var _current3 = nextEffect.alternate;
                commitWork(_current3, nextEffect);
                break;
              }
              case Deletion: {
                commitDeletion(root2, nextEffect);
                break;
              }
            }
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
          }
        }
        function commitLayoutEffects(root2, committedLanes) {
          while (nextEffect !== null) {
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & (Update | Callback)) {
              var current2 = nextEffect.alternate;
              commitLifeCycles(root2, current2, nextEffect);
            }
            {
              if (flags & Ref) {
                commitAttachRef(nextEffect);
              }
            }
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
          }
        }
        function flushPassiveEffects() {
          if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
            var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
            pendingPassiveEffectsRenderPriority = NoPriority$1;
            {
              return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
            }
          }
          return false;
        }
        function enqueuePendingPassiveHookEffectMount(fiber, effect) {
          pendingPassiveHookEffectsMount.push(effect, fiber);
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
              flushPassiveEffects();
              return null;
            });
          }
        }
        function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
          pendingPassiveHookEffectsUnmount.push(effect, fiber);
          {
            fiber.flags |= PassiveUnmountPendingDev;
            var alternate = fiber.alternate;
            if (alternate !== null) {
              alternate.flags |= PassiveUnmountPendingDev;
            }
          }
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
              flushPassiveEffects();
              return null;
            });
          }
        }
        function invokePassiveEffectCreate(effect) {
          var create = effect.create;
          effect.destroy = create();
        }
        function flushPassiveEffectsImpl() {
          if (rootWithPendingPassiveEffects === null) {
            return false;
          }
          var root2 = rootWithPendingPassiveEffects;
          var lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = NoLanes;
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw Error("Cannot flush passive effects while already rendering.");
            }
          }
          {
            isFlushingPassiveEffects = true;
          }
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          var prevInteractions = pushInteractions(root2);
          var unmountEffects = pendingPassiveHookEffectsUnmount;
          pendingPassiveHookEffectsUnmount = [];
          for (var i = 0; i < unmountEffects.length; i += 2) {
            var _effect = unmountEffects[i];
            var fiber = unmountEffects[i + 1];
            var destroy = _effect.destroy;
            _effect.destroy = void 0;
            {
              fiber.flags &= ~PassiveUnmountPendingDev;
              var alternate = fiber.alternate;
              if (alternate !== null) {
                alternate.flags &= ~PassiveUnmountPendingDev;
              }
            }
            if (typeof destroy === "function") {
              {
                setCurrentFiber(fiber);
                {
                  invokeGuardedCallback(null, destroy, null);
                }
                if (hasCaughtError()) {
                  if (!(fiber !== null)) {
                    {
                      throw Error("Should be working on an effect.");
                    }
                  }
                  var error2 = clearCaughtError();
                  captureCommitPhaseError(fiber, error2);
                }
                resetCurrentFiber();
              }
            }
          }
          var mountEffects = pendingPassiveHookEffectsMount;
          pendingPassiveHookEffectsMount = [];
          for (var _i = 0; _i < mountEffects.length; _i += 2) {
            var _effect2 = mountEffects[_i];
            var _fiber = mountEffects[_i + 1];
            {
              setCurrentFiber(_fiber);
              {
                invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
              }
              if (hasCaughtError()) {
                if (!(_fiber !== null)) {
                  {
                    throw Error("Should be working on an effect.");
                  }
                }
                var _error4 = clearCaughtError();
                captureCommitPhaseError(_fiber, _error4);
              }
              resetCurrentFiber();
            }
          }
          var effect = root2.current.firstEffect;
          while (effect !== null) {
            var nextNextEffect = effect.nextEffect;
            effect.nextEffect = null;
            if (effect.flags & Deletion) {
              detachFiberAfterEffects(effect);
            }
            effect = nextNextEffect;
          }
          {
            popInteractions(prevInteractions);
            finishPendingInteractions(root2, lanes);
          }
          {
            isFlushingPassiveEffects = false;
          }
          executionContext = prevExecutionContext;
          flushSyncCallbackQueue();
          nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
          return true;
        }
        function isAlreadyFailedLegacyErrorBoundary(instance) {
          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
        }
        function markLegacyErrorBoundaryAsFailed(instance) {
          if (legacyErrorBoundariesThatAlreadyFailed === null) {
            legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance]);
          } else {
            legacyErrorBoundariesThatAlreadyFailed.add(instance);
          }
        }
        function prepareToThrowUncaughtError(error2) {
          if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error2;
          }
        }
        var onUncaughtError = prepareToThrowUncaughtError;
        function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
          var errorInfo = createCapturedValue(error2, sourceFiber);
          var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
          enqueueUpdate(rootFiber, update);
          var eventTime = requestEventTime();
          var root2 = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);
          if (root2 !== null) {
            markRootUpdated(root2, SyncLane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, SyncLane);
          }
        }
        function captureCommitPhaseError(sourceFiber, error2) {
          if (sourceFiber.tag === HostRoot) {
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error2);
            return;
          }
          var fiber = sourceFiber.return;
          while (fiber !== null) {
            if (fiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error2);
              return;
            } else if (fiber.tag === ClassComponent) {
              var ctor = fiber.type;
              var instance = fiber.stateNode;
              if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                var errorInfo = createCapturedValue(error2, sourceFiber);
                var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                enqueueUpdate(fiber, update);
                var eventTime = requestEventTime();
                var root2 = markUpdateLaneFromFiberToRoot(fiber, SyncLane);
                if (root2 !== null) {
                  markRootUpdated(root2, SyncLane, eventTime);
                  ensureRootIsScheduled(root2, eventTime);
                  schedulePendingInteractions(root2, SyncLane);
                } else {
                  if (typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    try {
                      instance.componentDidCatch(error2, errorInfo);
                    } catch (errorToIgnore) {
                    }
                  }
                }
                return;
              }
            }
            fiber = fiber.return;
          }
        }
        function pingSuspendedRoot(root2, wakeable, pingedLanes) {
          var pingCache = root2.pingCache;
          if (pingCache !== null) {
            pingCache.delete(wakeable);
          }
          var eventTime = requestEventTime();
          markRootPinged(root2, pingedLanes);
          if (workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
              prepareFreshStack(root2, NoLanes);
            } else {
              workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
            }
          }
          ensureRootIsScheduled(root2, eventTime);
          schedulePendingInteractions(root2, pingedLanes);
        }
        function retryTimedOutBoundary(boundaryFiber, retryLane) {
          if (retryLane === NoLane) {
            retryLane = requestRetryLane(boundaryFiber);
          }
          var eventTime = requestEventTime();
          var root2 = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);
          if (root2 !== null) {
            markRootUpdated(root2, retryLane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
            schedulePendingInteractions(root2, retryLane);
          }
        }
        function resolveRetryWakeable(boundaryFiber, wakeable) {
          var retryLane = NoLane;
          var retryCache;
          {
            retryCache = boundaryFiber.stateNode;
          }
          if (retryCache !== null) {
            retryCache.delete(wakeable);
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function jnd(timeElapsed) {
          return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
        }
        function checkForNestedUpdates() {
          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            {
              {
                throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
              }
            }
          }
          {
            if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
              nestedPassiveUpdateCount = 0;
              error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
            }
          }
        }
        function flushRenderPhaseStrictModeWarningsInDEV() {
          {
            ReactStrictModeWarnings.flushLegacyContextWarning();
            {
              ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
            }
          }
        }
        var didWarnStateUpdateForNotYetMountedComponent = null;
        function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
          {
            if ((executionContext & RenderContext) !== NoContext) {
              return;
            }
            if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {
              return;
            }
            var tag = fiber.tag;
            if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
              return;
            }
            var componentName = getComponentName(fiber.type) || "ReactComponent";
            if (didWarnStateUpdateForNotYetMountedComponent !== null) {
              if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForNotYetMountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
            }
            var previousFiber = current;
            try {
              setCurrentFiber(fiber);
              error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
            } finally {
              if (previousFiber) {
                setCurrentFiber(fiber);
              } else {
                resetCurrentFiber();
              }
            }
          }
        }
        var didWarnStateUpdateForUnmountedComponent = null;
        function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
          {
            var tag = fiber.tag;
            if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
              return;
            }
            if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {
              return;
            }
            var componentName = getComponentName(fiber.type) || "ReactComponent";
            if (didWarnStateUpdateForUnmountedComponent !== null) {
              if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForUnmountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForUnmountedComponent = /* @__PURE__ */ new Set([componentName]);
            }
            if (isFlushingPassiveEffects)
              ;
            else {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.", tag === ClassComponent ? "the componentWillUnmount method" : "a useEffect cleanup function");
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        var beginWork$1;
        {
          var dummyFiber = null;
          beginWork$1 = function(current2, unitOfWork, lanes) {
            var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
            try {
              return beginWork(current2, unitOfWork, lanes);
            } catch (originalError) {
              if (originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                throw originalError;
              }
              resetContextDependencies();
              resetHooksAfterThrow();
              unwindInterruptedWork(unitOfWork);
              assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
              if (unitOfWork.mode & ProfileMode) {
                startProfilerTimer(unitOfWork);
              }
              invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
              if (hasCaughtError()) {
                var replayError = clearCaughtError();
                throw replayError;
              } else {
                throw originalError;
              }
            }
          };
        }
        var didWarnAboutUpdateInRender = false;
        var didWarnAboutUpdateInRenderForAnotherComponent;
        {
          didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
        }
        function warnAboutRenderPhaseUpdatesInDEV(fiber) {
          {
            if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  var renderingComponentName = workInProgress && getComponentName(workInProgress.type) || "Unknown";
                  var dedupeKey = renderingComponentName;
                  if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentName(fiber.type) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                  }
                  break;
                }
                case ClassComponent: {
                  if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                  }
                  break;
                }
              }
            }
          }
        }
        var IsThisRendererActing = {
          current: false
        };
        function warnIfNotScopedWithMatchingAct(fiber) {
          {
            if (IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("It looks like you're using the wrong act() around your test interactions.\nBe sure to use the matching version of act() corresponding to your renderer:\n\n// for react-dom:\nimport {act} from 'react-dom/test-utils';\n// ...\nact(() => ...);\n\n// for react-test-renderer:\nimport TestRenderer from react-test-renderer';\nconst {act} = TestRenderer;\n// ...\nact(() => ...);");
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
          {
            if ((fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
              error("An update to %s ran an effect, but was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
            }
          }
        }
        function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
          {
            if (executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;
        var didWarnAboutUnmockedScheduler = false;
        function warnIfUnmockedScheduler(fiber) {
          {
            if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === void 0) {
              if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
                didWarnAboutUnmockedScheduler = true;
                error(`In Concurrent or Sync modes, the "scheduler" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: 
jest.mock('scheduler', () => require('scheduler/unstable_mock'));

For more info, visit https://reactjs.org/link/mock-scheduler`);
              }
            }
          }
        }
        function computeThreadID(root2, lane) {
          return lane * 1e3 + root2.interactionThreadID;
        }
        function markSpawnedWork(lane) {
          if (spawnedWorkDuringRender === null) {
            spawnedWorkDuringRender = [lane];
          } else {
            spawnedWorkDuringRender.push(lane);
          }
        }
        function scheduleInteractions(root2, lane, interactions) {
          if (interactions.size > 0) {
            var pendingInteractionMap = root2.pendingInteractionMap;
            var pendingInteractions = pendingInteractionMap.get(lane);
            if (pendingInteractions != null) {
              interactions.forEach(function(interaction) {
                if (!pendingInteractions.has(interaction)) {
                  interaction.__count++;
                }
                pendingInteractions.add(interaction);
              });
            } else {
              pendingInteractionMap.set(lane, new Set(interactions));
              interactions.forEach(function(interaction) {
                interaction.__count++;
              });
            }
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
              var threadID = computeThreadID(root2, lane);
              subscriber.onWorkScheduled(interactions, threadID);
            }
          }
        }
        function schedulePendingInteractions(root2, lane) {
          scheduleInteractions(root2, lane, tracing.__interactionsRef.current);
        }
        function startWorkOnPendingInteractions(root2, lanes) {
          var interactions = /* @__PURE__ */ new Set();
          root2.pendingInteractionMap.forEach(function(scheduledInteractions, scheduledLane) {
            if (includesSomeLane(lanes, scheduledLane)) {
              scheduledInteractions.forEach(function(interaction) {
                return interactions.add(interaction);
              });
            }
          });
          root2.memoizedInteractions = interactions;
          if (interactions.size > 0) {
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
              var threadID = computeThreadID(root2, lanes);
              try {
                subscriber.onWorkStarted(interactions, threadID);
              } catch (error2) {
                scheduleCallback(ImmediatePriority$1, function() {
                  throw error2;
                });
              }
            }
          }
        }
        function finishPendingInteractions(root2, committedLanes) {
          var remainingLanesAfterCommit = root2.pendingLanes;
          var subscriber;
          try {
            subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null && root2.memoizedInteractions.size > 0) {
              var threadID = computeThreadID(root2, committedLanes);
              subscriber.onWorkStopped(root2.memoizedInteractions, threadID);
            }
          } catch (error2) {
            scheduleCallback(ImmediatePriority$1, function() {
              throw error2;
            });
          } finally {
            var pendingInteractionMap = root2.pendingInteractionMap;
            pendingInteractionMap.forEach(function(scheduledInteractions, lane) {
              if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
                pendingInteractionMap.delete(lane);
                scheduledInteractions.forEach(function(interaction) {
                  interaction.__count--;
                  if (subscriber !== null && interaction.__count === 0) {
                    try {
                      subscriber.onInteractionScheduledWorkCompleted(interaction);
                    } catch (error2) {
                      scheduleCallback(ImmediatePriority$1, function() {
                        throw error2;
                      });
                    }
                  }
                });
              }
            });
          }
        }
        function shouldForceFlushFallbacksInDEV() {
          return actingUpdatesScopeDepth > 0;
        }
        var actingUpdatesScopeDepth = 0;
        function detachFiberAfterEffects(fiber) {
          fiber.sibling = null;
          fiber.stateNode = null;
        }
        var resolveFamily = null;
        var failedBoundaries = null;
        var setRefreshHandler = function(handler) {
          {
            resolveFamily = handler;
          }
        };
        function resolveFunctionForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              return type;
            }
            return family.current;
          }
        }
        function resolveClassForHotReloading(type) {
          return resolveFunctionForHotReloading(type);
        }
        function resolveForwardRefForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              if (type !== null && type !== void 0 && typeof type.render === "function") {
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                  var syntheticType = {
                    $$typeof: REACT_FORWARD_REF_TYPE,
                    render: currentRender
                  };
                  if (type.displayName !== void 0) {
                    syntheticType.displayName = type.displayName;
                  }
                  return syntheticType;
                }
              }
              return type;
            }
            return family.current;
          }
        }
        function isCompatibleFamilyForHotReloading(fiber, element) {
          {
            if (resolveFamily === null) {
              return false;
            }
            var prevType = fiber.elementType;
            var nextType = element.type;
            var needsCompareFamilies = false;
            var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
            switch (fiber.tag) {
              case ClassComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                }
                break;
              }
              case FunctionComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case ForwardRef: {
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case MemoComponent:
              case SimpleMemoComponent: {
                if ($$typeofNextType === REACT_MEMO_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              default:
                return false;
            }
            if (needsCompareFamilies) {
              var prevFamily = resolveFamily(prevType);
              if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                return true;
              }
            }
            return false;
          }
        }
        function markFailedErrorBoundaryForHotReloading(fiber) {
          {
            if (resolveFamily === null) {
              return;
            }
            if (typeof WeakSet !== "function") {
              return;
            }
            if (failedBoundaries === null) {
              failedBoundaries = /* @__PURE__ */ new WeakSet();
            }
            failedBoundaries.add(fiber);
          }
        }
        var scheduleRefresh = function(root2, update) {
          {
            if (resolveFamily === null) {
              return;
            }
            var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
            flushPassiveEffects();
            flushSync(function() {
              scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
            });
          }
        };
        var scheduleRoot = function(root2, element) {
          {
            if (root2.context !== emptyContextObject) {
              return;
            }
            flushPassiveEffects();
            flushSync(function() {
              updateContainer(element, root2, null, null);
            });
          }
        };
        function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
          {
            var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            if (resolveFamily === null) {
              throw new Error("Expected resolveFamily to be set during hot reload.");
            }
            var needsRender = false;
            var needsRemount = false;
            if (candidateType !== null) {
              var family = resolveFamily(candidateType);
              if (family !== void 0) {
                if (staleFamilies.has(family)) {
                  needsRemount = true;
                } else if (updatedFamilies.has(family)) {
                  if (tag === ClassComponent) {
                    needsRemount = true;
                  } else {
                    needsRender = true;
                  }
                }
              }
            }
            if (failedBoundaries !== null) {
              if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                needsRemount = true;
              }
            }
            if (needsRemount) {
              fiber._debugNeedsRemount = true;
            }
            if (needsRemount || needsRender) {
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
            if (child !== null && !needsRemount) {
              scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
            }
            if (sibling !== null) {
              scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
            }
          }
        }
        var findHostInstancesForRefresh = function(root2, families) {
          {
            var hostInstances = /* @__PURE__ */ new Set();
            var types = new Set(families.map(function(family) {
              return family.current;
            }));
            findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances);
            return hostInstances;
          }
        };
        function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
          {
            var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            var didMatch = false;
            if (candidateType !== null) {
              if (types.has(candidateType)) {
                didMatch = true;
              }
            }
            if (didMatch) {
              findHostInstancesForFiberShallowly(fiber, hostInstances);
            } else {
              if (child !== null) {
                findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
              }
            }
            if (sibling !== null) {
              findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
            }
          }
        }
        function findHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
            if (foundHostInstances) {
              return;
            }
            var node = fiber;
            while (true) {
              switch (node.tag) {
                case HostComponent:
                  hostInstances.add(node.stateNode);
                  return;
                case HostPortal:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
                case HostRoot:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
              }
              if (node.return === null) {
                throw new Error("Expected to reach root first.");
              }
              node = node.return;
            }
          }
        }
        function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var node = fiber;
            var foundHostInstances = false;
            while (true) {
              if (node.tag === HostComponent) {
                foundHostInstances = true;
                hostInstances.add(node.stateNode);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === fiber) {
                return foundHostInstances;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === fiber) {
                  return foundHostInstances;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          return false;
        }
        var hasBadMapPolyfill;
        {
          hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
            /* @__PURE__ */ new Set([nonExtensibleObject]);
          } catch (e) {
            hasBadMapPolyfill = true;
          }
        }
        var debugCounter = 1;
        function FiberNode(tag, pendingProps, key, mode) {
          this.tag = tag;
          this.key = key;
          this.elementType = null;
          this.type = null;
          this.stateNode = null;
          this.return = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = pendingProps;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;
          this.dependencies = null;
          this.mode = mode;
          this.flags = NoFlags;
          this.nextEffect = null;
          this.firstEffect = null;
          this.lastEffect = null;
          this.lanes = NoLanes;
          this.childLanes = NoLanes;
          this.alternate = null;
          {
            this.actualDuration = Number.NaN;
            this.actualStartTime = Number.NaN;
            this.selfBaseDuration = Number.NaN;
            this.treeBaseDuration = Number.NaN;
            this.actualDuration = 0;
            this.actualStartTime = -1;
            this.selfBaseDuration = 0;
            this.treeBaseDuration = 0;
          }
          {
            this._debugID = debugCounter++;
            this._debugSource = null;
            this._debugOwner = null;
            this._debugNeedsRemount = false;
            this._debugHookTypes = null;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
              Object.preventExtensions(this);
            }
          }
        }
        var createFiber = function(tag, pendingProps, key, mode) {
          return new FiberNode(tag, pendingProps, key, mode);
        };
        function shouldConstruct$1(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function isSimpleFunctionComponent(type) {
          return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
        }
        function resolveLazyComponentTag(Component) {
          if (typeof Component === "function") {
            return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
          } else if (Component !== void 0 && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) {
              return ForwardRef;
            }
            if ($$typeof === REACT_MEMO_TYPE) {
              return MemoComponent;
            }
          }
          return IndeterminateComponent;
        }
        function createWorkInProgress(current2, pendingProps) {
          var workInProgress2 = current2.alternate;
          if (workInProgress2 === null) {
            workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
            workInProgress2.elementType = current2.elementType;
            workInProgress2.type = current2.type;
            workInProgress2.stateNode = current2.stateNode;
            {
              workInProgress2._debugID = current2._debugID;
              workInProgress2._debugSource = current2._debugSource;
              workInProgress2._debugOwner = current2._debugOwner;
              workInProgress2._debugHookTypes = current2._debugHookTypes;
            }
            workInProgress2.alternate = current2;
            current2.alternate = workInProgress2;
          } else {
            workInProgress2.pendingProps = pendingProps;
            workInProgress2.type = current2.type;
            workInProgress2.flags = NoFlags;
            workInProgress2.nextEffect = null;
            workInProgress2.firstEffect = null;
            workInProgress2.lastEffect = null;
            {
              workInProgress2.actualDuration = 0;
              workInProgress2.actualStartTime = -1;
            }
          }
          workInProgress2.childLanes = current2.childLanes;
          workInProgress2.lanes = current2.lanes;
          workInProgress2.child = current2.child;
          workInProgress2.memoizedProps = current2.memoizedProps;
          workInProgress2.memoizedState = current2.memoizedState;
          workInProgress2.updateQueue = current2.updateQueue;
          var currentDependencies = current2.dependencies;
          workInProgress2.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
          };
          workInProgress2.sibling = current2.sibling;
          workInProgress2.index = current2.index;
          workInProgress2.ref = current2.ref;
          {
            workInProgress2.selfBaseDuration = current2.selfBaseDuration;
            workInProgress2.treeBaseDuration = current2.treeBaseDuration;
          }
          {
            workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case FunctionComponent:
              case SimpleMemoComponent:
                workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                break;
              case ClassComponent:
                workInProgress2.type = resolveClassForHotReloading(current2.type);
                break;
              case ForwardRef:
                workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                break;
            }
          }
          return workInProgress2;
        }
        function resetWorkInProgress(workInProgress2, renderLanes2) {
          workInProgress2.flags &= Placement;
          workInProgress2.nextEffect = null;
          workInProgress2.firstEffect = null;
          workInProgress2.lastEffect = null;
          var current2 = workInProgress2.alternate;
          if (current2 === null) {
            workInProgress2.childLanes = NoLanes;
            workInProgress2.lanes = renderLanes2;
            workInProgress2.child = null;
            workInProgress2.memoizedProps = null;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.dependencies = null;
            workInProgress2.stateNode = null;
            {
              workInProgress2.selfBaseDuration = 0;
              workInProgress2.treeBaseDuration = 0;
            }
          } else {
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.type = current2.type;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
          }
          return workInProgress2;
        }
        function createHostRootFiber(tag) {
          var mode;
          if (tag === ConcurrentRoot) {
            mode = ConcurrentMode | BlockingMode | StrictMode;
          } else if (tag === BlockingRoot) {
            mode = BlockingMode | StrictMode;
          } else {
            mode = NoMode;
          }
          if (isDevToolsPresent) {
            mode |= ProfileMode;
          }
          return createFiber(HostRoot, null, null, mode);
        }
        function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
          var fiberTag = IndeterminateComponent;
          var resolvedType = type;
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              fiberTag = ClassComponent;
              {
                resolvedType = resolveClassForHotReloading(resolvedType);
              }
            } else {
              {
                resolvedType = resolveFunctionForHotReloading(resolvedType);
              }
            }
          } else if (typeof type === "string") {
            fiberTag = HostComponent;
          } else {
            getTag:
              switch (type) {
                case REACT_FRAGMENT_TYPE:
                  return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                case REACT_DEBUG_TRACING_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= DebugTracingMode;
                  break;
                case REACT_STRICT_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= StrictMode;
                  break;
                case REACT_PROFILER_TYPE:
                  return createFiberFromProfiler(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_TYPE:
                  return createFiberFromSuspense(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_LIST_TYPE:
                  return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                case REACT_OFFSCREEN_TYPE:
                  return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                case REACT_LEGACY_HIDDEN_TYPE:
                  return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);
                case REACT_SCOPE_TYPE:
                default: {
                  if (typeof type === "object" && type !== null) {
                    switch (type.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        {
                          resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        }
                        break getTag;
                      case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                      case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                      case REACT_BLOCK_TYPE:
                        fiberTag = Block;
                        break getTag;
                    }
                  }
                  var info = "";
                  {
                    if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                      info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                    }
                    var ownerName = owner ? getComponentName(owner.type) : null;
                    if (ownerName) {
                      info += "\n\nCheck the render method of `" + ownerName + "`.";
                    }
                  }
                  {
                    {
                      throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
                    }
                  }
                }
              }
          }
          var fiber = createFiber(fiberTag, pendingProps, key, mode);
          fiber.elementType = type;
          fiber.type = resolvedType;
          fiber.lanes = lanes;
          {
            fiber._debugOwner = owner;
          }
          return fiber;
        }
        function createFiberFromElement(element, mode, lanes) {
          var owner = null;
          {
            owner = element._owner;
          }
          var type = element.type;
          var key = element.key;
          var pendingProps = element.props;
          var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
          {
            fiber._debugSource = element._source;
            fiber._debugOwner = element._owner;
          }
          return fiber;
        }
        function createFiberFromFragment(elements, mode, lanes, key) {
          var fiber = createFiber(Fragment, elements, key, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromProfiler(pendingProps, mode, lanes, key) {
          {
            if (typeof pendingProps.id !== "string") {
              error('Profiler must specify an "id" as a prop');
            }
          }
          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
          fiber.elementType = REACT_PROFILER_TYPE;
          fiber.type = REACT_PROFILER_TYPE;
          fiber.lanes = lanes;
          {
            fiber.stateNode = {
              effectDuration: 0,
              passiveEffectDuration: 0
            };
          }
          return fiber;
        }
        function createFiberFromSuspense(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
          fiber.type = REACT_SUSPENSE_TYPE;
          fiber.elementType = REACT_SUSPENSE_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
          {
            fiber.type = REACT_SUSPENSE_LIST_TYPE;
          }
          fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
          var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
          {
            fiber.type = REACT_OFFSCREEN_TYPE;
          }
          fiber.elementType = REACT_OFFSCREEN_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
          var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);
          {
            fiber.type = REACT_LEGACY_HIDDEN_TYPE;
          }
          fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromText(content, mode, lanes) {
          var fiber = createFiber(HostText, content, null, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent, null, null, NoMode);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          return fiber;
        }
        function createFiberFromPortal(portal, mode, lanes) {
          var pendingProps = portal.children !== null ? portal.children : [];
          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
          fiber.lanes = lanes;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
          };
          return fiber;
        }
        function assignFiberPropertiesInDEV(target, source) {
          if (target === null) {
            target = createFiber(IndeterminateComponent, null, null, NoMode);
          }
          target.tag = source.tag;
          target.key = source.key;
          target.elementType = source.elementType;
          target.type = source.type;
          target.stateNode = source.stateNode;
          target.return = source.return;
          target.child = source.child;
          target.sibling = source.sibling;
          target.index = source.index;
          target.ref = source.ref;
          target.pendingProps = source.pendingProps;
          target.memoizedProps = source.memoizedProps;
          target.updateQueue = source.updateQueue;
          target.memoizedState = source.memoizedState;
          target.dependencies = source.dependencies;
          target.mode = source.mode;
          target.flags = source.flags;
          target.nextEffect = source.nextEffect;
          target.firstEffect = source.firstEffect;
          target.lastEffect = source.lastEffect;
          target.lanes = source.lanes;
          target.childLanes = source.childLanes;
          target.alternate = source.alternate;
          {
            target.actualDuration = source.actualDuration;
            target.actualStartTime = source.actualStartTime;
            target.selfBaseDuration = source.selfBaseDuration;
            target.treeBaseDuration = source.treeBaseDuration;
          }
          target._debugID = source._debugID;
          target._debugSource = source._debugSource;
          target._debugOwner = source._debugOwner;
          target._debugNeedsRemount = source._debugNeedsRemount;
          target._debugHookTypes = source._debugHookTypes;
          return target;
        }
        function FiberRootNode(containerInfo, tag, hydrate2) {
          this.tag = tag;
          this.containerInfo = containerInfo;
          this.pendingChildren = null;
          this.current = null;
          this.pingCache = null;
          this.finishedWork = null;
          this.timeoutHandle = noTimeout;
          this.context = null;
          this.pendingContext = null;
          this.hydrate = hydrate2;
          this.callbackNode = null;
          this.callbackPriority = NoLanePriority;
          this.eventTimes = createLaneMap(NoLanes);
          this.expirationTimes = createLaneMap(NoTimestamp);
          this.pendingLanes = NoLanes;
          this.suspendedLanes = NoLanes;
          this.pingedLanes = NoLanes;
          this.expiredLanes = NoLanes;
          this.mutableReadLanes = NoLanes;
          this.finishedLanes = NoLanes;
          this.entangledLanes = NoLanes;
          this.entanglements = createLaneMap(NoLanes);
          {
            this.mutableSourceEagerHydrationData = null;
          }
          {
            this.interactionThreadID = tracing.unstable_getThreadID();
            this.memoizedInteractions = /* @__PURE__ */ new Set();
            this.pendingInteractionMap = /* @__PURE__ */ new Map();
          }
          {
            switch (tag) {
              case BlockingRoot:
                this._debugRootType = "createBlockingRoot()";
                break;
              case ConcurrentRoot:
                this._debugRootType = "createRoot()";
                break;
              case LegacyRoot:
                this._debugRootType = "createLegacyRoot()";
                break;
            }
          }
        }
        function createFiberRoot(containerInfo, tag, hydrate2, hydrationCallbacks) {
          var root2 = new FiberRootNode(containerInfo, tag, hydrate2);
          var uninitializedFiber = createHostRootFiber(tag);
          root2.current = uninitializedFiber;
          uninitializedFiber.stateNode = root2;
          initializeUpdateQueue(uninitializedFiber);
          return root2;
        }
        function registerMutableSourceForHydration(root2, mutableSource) {
          var getVersion = mutableSource._getVersion;
          var version = getVersion(mutableSource._source);
          if (root2.mutableSourceEagerHydrationData == null) {
            root2.mutableSourceEagerHydrationData = [mutableSource, version];
          } else {
            root2.mutableSourceEagerHydrationData.push(mutableSource, version);
          }
        }
        function createPortal(children, containerInfo, implementation) {
          var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
          return {
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children,
            containerInfo,
            implementation
          };
        }
        var didWarnAboutNestedUpdates;
        var didWarnAboutFindNodeInStrictMode;
        {
          didWarnAboutNestedUpdates = false;
          didWarnAboutFindNodeInStrictMode = {};
        }
        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyContextObject;
          }
          var fiber = get(parentComponent);
          var parentContext = findCurrentUnmaskedContext(fiber);
          if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) {
              return processChildContext(fiber, Component, parentContext);
            }
          }
          return parentContext;
        }
        function findHostInstanceWithWarning(component, methodName) {
          {
            var fiber = get(component);
            if (fiber === void 0) {
              if (typeof component.render === "function") {
                {
                  {
                    throw Error("Unable to find node on an unmounted component.");
                  }
                }
              } else {
                {
                  {
                    throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
                  }
                }
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.mode & StrictMode) {
              var componentName = getComponentName(fiber.type) || "Component";
              if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                  setCurrentFiber(hostFiber);
                  if (fiber.mode & StrictMode) {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  } else {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  }
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(previousFiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
            return hostFiber.stateNode;
          }
        }
        function createContainer(containerInfo, tag, hydrate2, hydrationCallbacks) {
          return createFiberRoot(containerInfo, tag, hydrate2);
        }
        function updateContainer(element, container, parentComponent, callback) {
          {
            onScheduleRoot(container, element);
          }
          var current$1 = container.current;
          var eventTime = requestEventTime();
          {
            if (typeof jest !== "undefined") {
              warnIfUnmockedScheduler(current$1);
              warnIfNotScopedWithMatchingAct(current$1);
            }
          }
          var lane = requestUpdateLane(current$1);
          var context = getContextForSubtree(parentComponent);
          if (container.context === null) {
            container.context = context;
          } else {
            container.pendingContext = context;
          }
          {
            if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
              didWarnAboutNestedUpdates = true;
              error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentName(current.type) || "Unknown");
            }
          }
          var update = createUpdate(eventTime, lane);
          update.payload = {
            element
          };
          callback = callback === void 0 ? null : callback;
          if (callback !== null) {
            {
              if (typeof callback !== "function") {
                error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
              }
            }
            update.callback = callback;
          }
          enqueueUpdate(current$1, update);
          scheduleUpdateOnFiber(current$1, lane, eventTime);
          return lane;
        }
        function getPublicRootInstance(container) {
          var containerFiber = container.current;
          if (!containerFiber.child) {
            return null;
          }
          switch (containerFiber.child.tag) {
            case HostComponent:
              return getPublicInstance(containerFiber.child.stateNode);
            default:
              return containerFiber.child.stateNode;
          }
        }
        function markRetryLaneImpl(fiber, retryLane) {
          var suspenseState = fiber.memoizedState;
          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
          }
        }
        function markRetryLaneIfNotHydrated(fiber, retryLane) {
          markRetryLaneImpl(fiber, retryLane);
          var alternate = fiber.alternate;
          if (alternate) {
            markRetryLaneImpl(alternate, retryLane);
          }
        }
        function attemptUserBlockingHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var eventTime = requestEventTime();
          var lane = InputDiscreteHydrationLane;
          scheduleUpdateOnFiber(fiber, lane, eventTime);
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptContinuousHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var eventTime = requestEventTime();
          var lane = SelectiveHydrationLane;
          scheduleUpdateOnFiber(fiber, lane, eventTime);
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptHydrationAtCurrentPriority$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(fiber);
          scheduleUpdateOnFiber(fiber, lane, eventTime);
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function runWithPriority$2(priority, fn) {
          try {
            setCurrentUpdateLanePriority(priority);
            return fn();
          } finally {
          }
        }
        function findHostInstanceWithNoPortals(fiber) {
          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
          if (hostFiber === null) {
            return null;
          }
          if (hostFiber.tag === FundamentalComponent) {
            return hostFiber.stateNode.instance;
          }
          return hostFiber.stateNode;
        }
        var shouldSuspendImpl = function(fiber) {
          return false;
        };
        function shouldSuspend(fiber) {
          return shouldSuspendImpl(fiber);
        }
        var overrideHookState = null;
        var overrideHookStateDeletePath = null;
        var overrideHookStateRenamePath = null;
        var overrideProps = null;
        var overridePropsDeletePath = null;
        var overridePropsRenamePath = null;
        var scheduleUpdate = null;
        var setSuspenseHandler = null;
        {
          var copyWithDeleteImpl = function(obj, path, index2) {
            var key = path[index2];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            if (index2 + 1 === path.length) {
              if (Array.isArray(updated)) {
                updated.splice(key, 1);
              } else {
                delete updated[key];
              }
              return updated;
            }
            updated[key] = copyWithDeleteImpl(obj[key], path, index2 + 1);
            return updated;
          };
          var copyWithDelete = function(obj, path) {
            return copyWithDeleteImpl(obj, path, 0);
          };
          var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
            var oldKey = oldPath[index2];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            if (index2 + 1 === oldPath.length) {
              var newKey = newPath[index2];
              updated[newKey] = updated[oldKey];
              if (Array.isArray(updated)) {
                updated.splice(oldKey, 1);
              } else {
                delete updated[oldKey];
              }
            } else {
              updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index2 + 1);
            }
            return updated;
          };
          var copyWithRename = function(obj, oldPath, newPath) {
            if (oldPath.length !== newPath.length) {
              warn("copyWithRename() expects paths of the same length");
              return;
            } else {
              for (var i = 0; i < newPath.length - 1; i++) {
                if (oldPath[i] !== newPath[i]) {
                  warn("copyWithRename() expects paths to be the same except for the deepest key");
                  return;
                }
              }
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
          };
          var copyWithSetImpl = function(obj, path, index2, value) {
            if (index2 >= path.length) {
              return value;
            }
            var key = path[index2];
            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
            updated[key] = copyWithSetImpl(obj[key], path, index2 + 1, value);
            return updated;
          };
          var copyWithSet = function(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
          };
          var findHook = function(fiber, id) {
            var currentHook2 = fiber.memoizedState;
            while (currentHook2 !== null && id > 0) {
              currentHook2 = currentHook2.next;
              id--;
            }
            return currentHook2;
          };
          overrideHookState = function(fiber, id, path, value) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithSet(hook.memoizedState, path, value);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = _assign({}, fiber.memoizedProps);
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
          };
          overrideHookStateDeletePath = function(fiber, id, path) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithDelete(hook.memoizedState, path);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = _assign({}, fiber.memoizedProps);
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
          };
          overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = _assign({}, fiber.memoizedProps);
              scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
            }
          };
          overrideProps = function(fiber, path, value) {
            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          overridePropsDeletePath = function(fiber, path) {
            fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          overridePropsRenamePath = function(fiber, oldPath, newPath) {
            fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          scheduleUpdate = function(fiber) {
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
          };
          setSuspenseHandler = function(newShouldSuspendImpl) {
            shouldSuspendImpl = newShouldSuspendImpl;
          };
        }
        function findHostInstanceByFiber(fiber) {
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        function emptyFindFiberByHostInstance(instance) {
          return null;
        }
        function getCurrentFiberForDevTools() {
          return current;
        }
        function injectIntoDevTools(devToolsConfig) {
          var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
          var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
          return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState,
            overrideHookStateDeletePath,
            overrideHookStateRenamePath,
            overrideProps,
            overridePropsDeletePath,
            overridePropsRenamePath,
            setSuspenseHandler,
            scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher2,
            findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            findHostInstancesForRefresh,
            scheduleRefresh,
            scheduleRoot,
            setRefreshHandler,
            getCurrentFiber: getCurrentFiberForDevTools
          });
        }
        function ReactDOMRoot(container, options2) {
          this._internalRoot = createRootImpl(container, ConcurrentRoot, options2);
        }
        function ReactDOMBlockingRoot(container, tag, options2) {
          this._internalRoot = createRootImpl(container, tag, options2);
        }
        ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function(children) {
          var root2 = this._internalRoot;
          {
            if (typeof arguments[1] === "function") {
              error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
            var container = root2.containerInfo;
            if (container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(root2.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                }
              }
            }
          }
          updateContainer(children, root2, null, null);
        };
        ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function() {
          {
            if (typeof arguments[0] === "function") {
              error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
          }
          var root2 = this._internalRoot;
          var container = root2.containerInfo;
          updateContainer(null, root2, null, function() {
            unmarkContainerAsRoot(container);
          });
        };
        function createRootImpl(container, tag, options2) {
          var hydrate2 = options2 != null && options2.hydrate === true;
          var hydrationCallbacks = options2 != null && options2.hydrationOptions || null;
          var mutableSources = options2 != null && options2.hydrationOptions != null && options2.hydrationOptions.mutableSources || null;
          var root2 = createContainer(container, tag, hydrate2);
          markContainerAsRoot(root2.current, container);
          var containerNodeType = container.nodeType;
          {
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
          }
          if (mutableSources) {
            for (var i = 0; i < mutableSources.length; i++) {
              var mutableSource = mutableSources[i];
              registerMutableSourceForHydration(root2, mutableSource);
            }
          }
          return root2;
        }
        function createLegacyRoot(container, options2) {
          return new ReactDOMBlockingRoot(container, LegacyRoot, options2);
        }
        function isValidContainer(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
        }
        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
        var topLevelUpdateWarnings;
        var warnedAboutHydrateAPI = false;
        {
          topLevelUpdateWarnings = function(container) {
            if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                }
              }
            }
            var isRootRenderedBySomeReact = !!container._reactRootContainer;
            var rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
            if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
              error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
            }
            if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
              error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
            }
          };
        }
        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }
          if (container.nodeType === DOCUMENT_NODE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }
        function shouldHydrateDueToLegacyHeuristic(container) {
          var rootElement = getReactRootElementInContainer(container);
          return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
        }
        function legacyCreateRootFromDOMContainer(container, forceHydrate) {
          var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
          if (!shouldHydrate) {
            var warned = false;
            var rootSibling;
            while (rootSibling = container.lastChild) {
              {
                if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                  warned = true;
                  error("render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                }
              }
              container.removeChild(rootSibling);
            }
          }
          {
            if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
              warnedAboutHydrateAPI = true;
              warn("render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.");
            }
          }
          return createLegacyRoot(container, shouldHydrate ? {
            hydrate: true
          } : void 0);
        }
        function warnOnInvalidCallback$1(callback, callerName) {
          {
            if (callback !== null && typeof callback !== "function") {
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          }
        }
        function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
          {
            topLevelUpdateWarnings(container);
            warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
          }
          var root2 = container._reactRootContainer;
          var fiberRoot;
          if (!root2) {
            root2 = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
            fiberRoot = root2._internalRoot;
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(fiberRoot);
                originalCallback.call(instance);
              };
            }
            unbatchedUpdates(function() {
              updateContainer(children, fiberRoot, parentComponent, callback);
            });
          } else {
            fiberRoot = root2._internalRoot;
            if (typeof callback === "function") {
              var _originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(fiberRoot);
                _originalCallback.call(instance);
              };
            }
            updateContainer(children, fiberRoot, parentComponent, callback);
          }
          return getPublicRootInstance(fiberRoot);
        }
        function findDOMNode(componentOrElement) {
          {
            var owner = ReactCurrentOwner$3.current;
            if (owner !== null && owner.stateNode !== null) {
              var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
              if (!warnedAboutRefsInRender) {
                error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(owner.type) || "A component");
              }
              owner.stateNode._warnedAboutRefsInRender = true;
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === ELEMENT_NODE) {
            return componentOrElement;
          }
          {
            return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
          }
        }
        function hydrate(element, container, callback) {
          if (!isValidContainer(container)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call createRoot(container, {hydrate: true}).render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
        }
        function render(element, container, callback) {
          if (!isValidContainer(container)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
        }
        function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          if (!isValidContainer(containerNode)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          if (!(parentComponent != null && has(parentComponent))) {
            {
              throw Error("parentComponent must be a valid React Component");
            }
          }
          return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
        }
        function unmountComponentAtNode(container) {
          if (!isValidContainer(container)) {
            {
              throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
            }
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?");
            }
          }
          if (container._reactRootContainer) {
            {
              var rootEl = getReactRootElementInContainer(container);
              var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
              if (renderedByDifferentReact) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
              }
            }
            unbatchedUpdates(function() {
              legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                container._reactRootContainer = null;
                unmarkContainerAsRoot(container);
              });
            });
            return true;
          } else {
            {
              var _rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
              var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
              if (hasNonRootReactChild) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
              }
            }
            return false;
          }
        }
        setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
        setAttemptContinuousHydration(attemptContinuousHydration$1);
        setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
        setAttemptHydrationAtPriority(runWithPriority$2);
        var didWarnAboutUnstableCreatePortal = false;
        {
          if (typeof Map !== "function" || Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
            error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
          }
        }
        setRestoreImplementation(restoreControlledState$3);
        setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);
        function createPortal$1(children, container) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (!isValidContainer(container)) {
            {
              throw Error("Target container is not a DOM element.");
            }
          }
          return createPortal(children, container, null, key);
        }
        function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
        }
        function unstable_createPortal(children, container) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          {
            if (!didWarnAboutUnstableCreatePortal) {
              didWarnAboutUnstableCreatePortal = true;
              warn('The ReactDOM.unstable_createPortal() alias has been deprecated, and will be removed in React 18+. Update your code to use ReactDOM.createPortal() instead. It has the exact same API, but without the "unstable_" prefix.');
            }
          }
          return createPortal$1(children, container, key);
        }
        var Internals = {
          Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            flushPassiveEffects,
            IsThisRendererActing
          ]
        };
        var foundDevTools = injectIntoDevTools({
          findFiberByHostInstance: getClosestInstanceFromNode,
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: "react-dom"
        });
        {
          if (!foundDevTools && canUseDOM && window.top === window.self) {
            if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
              var protocol = window.location.protocol;
              if (/^(https?|file):$/.test(protocol)) {
                console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
              }
            }
          }
        }
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
        exports.createPortal = createPortal$1;
        exports.findDOMNode = findDOMNode;
        exports.flushSync = flushSync;
        exports.hydrate = hydrate;
        exports.render = render;
        exports.unmountComponentAtNode = unmountComponentAtNode;
        exports.unstable_batchedUpdates = batchedUpdates$1;
        exports.unstable_createPortal = unstable_createPortal;
        exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
        exports.version = ReactVersion;
      })();
    }
  }
});

// node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "node_modules/react-dom/index.js"(exports, module) {
    "use strict";
    if (false) {
      checkDCE();
      module.exports = null;
    } else {
      module.exports = require_react_dom_development();
    }
  }
});

// node_modules/events/events.js
var require_events = __commonJS({
  "node_modules/events/events.js"(exports, module) {
    "use strict";
    var R = typeof Reflect === "object" ? Reflect : null;
    var ReflectApply = R && typeof R.apply === "function" ? R.apply : function ReflectApply2(target, receiver, args) {
      return Function.prototype.apply.call(target, receiver, args);
    };
    var ReflectOwnKeys;
    if (R && typeof R.ownKeys === "function") {
      ReflectOwnKeys = R.ownKeys;
    } else if (Object.getOwnPropertySymbols) {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
      };
    } else {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target);
      };
    }
    function ProcessEmitWarning(warning) {
      if (console && console.warn)
        console.warn(warning);
    }
    var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value) {
      return value !== value;
    };
    function EventEmitter() {
      EventEmitter.init.call(this);
    }
    module.exports = EventEmitter;
    module.exports.once = once;
    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = void 0;
    EventEmitter.prototype._eventsCount = 0;
    EventEmitter.prototype._maxListeners = void 0;
    var defaultMaxListeners = 10;
    function checkListener(listener) {
      if (typeof listener !== "function") {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
    }
    Object.defineProperty(EventEmitter, "defaultMaxListeners", {
      enumerable: true,
      get: function() {
        return defaultMaxListeners;
      },
      set: function(arg) {
        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
        }
        defaultMaxListeners = arg;
      }
    });
    EventEmitter.init = function() {
      if (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) {
        this._events = Object.create(null);
        this._eventsCount = 0;
      }
      this._maxListeners = this._maxListeners || void 0;
    };
    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
      if (typeof n !== "number" || n < 0 || NumberIsNaN(n)) {
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
      }
      this._maxListeners = n;
      return this;
    };
    function _getMaxListeners(that) {
      if (that._maxListeners === void 0)
        return EventEmitter.defaultMaxListeners;
      return that._maxListeners;
    }
    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
      return _getMaxListeners(this);
    };
    EventEmitter.prototype.emit = function emit(type) {
      var args = [];
      for (var i = 1; i < arguments.length; i++)
        args.push(arguments[i]);
      var doError = type === "error";
      var events = this._events;
      if (events !== void 0)
        doError = doError && events.error === void 0;
      else if (!doError)
        return false;
      if (doError) {
        var er;
        if (args.length > 0)
          er = args[0];
        if (er instanceof Error) {
          throw er;
        }
        var err = new Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
        err.context = er;
        throw err;
      }
      var handler = events[type];
      if (handler === void 0)
        return false;
      if (typeof handler === "function") {
        ReflectApply(handler, this, args);
      } else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for (var i = 0; i < len; ++i)
          ReflectApply(listeners[i], this, args);
      }
      return true;
    };
    function _addListener(target, type, listener, prepend) {
      var m;
      var events;
      var existing;
      checkListener(listener);
      events = target._events;
      if (events === void 0) {
        events = target._events = Object.create(null);
        target._eventsCount = 0;
      } else {
        if (events.newListener !== void 0) {
          target.emit("newListener", type, listener.listener ? listener.listener : listener);
          events = target._events;
        }
        existing = events[type];
      }
      if (existing === void 0) {
        existing = events[type] = listener;
        ++target._eventsCount;
      } else {
        if (typeof existing === "function") {
          existing = events[type] = prepend ? [listener, existing] : [existing, listener];
        } else if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        }
        m = _getMaxListeners(target);
        if (m > 0 && existing.length > m && !existing.warned) {
          existing.warned = true;
          var w = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          w.name = "MaxListenersExceededWarning";
          w.emitter = target;
          w.type = type;
          w.count = existing.length;
          ProcessEmitWarning(w);
        }
      }
      return target;
    }
    EventEmitter.prototype.addListener = function addListener(type, listener) {
      return _addListener(this, type, listener, false);
    };
    EventEmitter.prototype.on = EventEmitter.prototype.addListener;
    EventEmitter.prototype.prependListener = function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };
    function onceWrapper() {
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0)
          return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
      }
    }
    function _onceWrap(target, type, listener) {
      var state = { fired: false, wrapFn: void 0, target, type, listener };
      var wrapped = onceWrapper.bind(state);
      wrapped.listener = listener;
      state.wrapFn = wrapped;
      return wrapped;
    }
    EventEmitter.prototype.once = function once2(type, listener) {
      checkListener(listener);
      this.on(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter.prototype.removeListener = function removeListener(type, listener) {
      var list, events, position, i, originalListener;
      checkListener(listener);
      events = this._events;
      if (events === void 0)
        return this;
      list = events[type];
      if (list === void 0)
        return this;
      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit("removeListener", type, list.listener || listener);
        }
      } else if (typeof list !== "function") {
        position = -1;
        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }
        if (position < 0)
          return this;
        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }
        if (list.length === 1)
          events[type] = list[0];
        if (events.removeListener !== void 0)
          this.emit("removeListener", type, originalListener || listener);
      }
      return this;
    };
    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
    EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
      var listeners, events, i;
      events = this._events;
      if (events === void 0)
        return this;
      if (events.removeListener === void 0) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== void 0) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === "removeListener")
            continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners("removeListener");
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }
      listeners = events[type];
      if (typeof listeners === "function") {
        this.removeListener(type, listeners);
      } else if (listeners !== void 0) {
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }
      return this;
    };
    function _listeners(target, type, unwrap) {
      var events = target._events;
      if (events === void 0)
        return [];
      var evlistener = events[type];
      if (evlistener === void 0)
        return [];
      if (typeof evlistener === "function")
        return unwrap ? [evlistener.listener || evlistener] : [evlistener];
      return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
    }
    EventEmitter.prototype.listeners = function listeners(type) {
      return _listeners(this, type, true);
    };
    EventEmitter.prototype.rawListeners = function rawListeners(type) {
      return _listeners(this, type, false);
    };
    EventEmitter.listenerCount = function(emitter, type) {
      if (typeof emitter.listenerCount === "function") {
        return emitter.listenerCount(type);
      } else {
        return listenerCount.call(emitter, type);
      }
    };
    EventEmitter.prototype.listenerCount = listenerCount;
    function listenerCount(type) {
      var events = this._events;
      if (events !== void 0) {
        var evlistener = events[type];
        if (typeof evlistener === "function") {
          return 1;
        } else if (evlistener !== void 0) {
          return evlistener.length;
        }
      }
      return 0;
    }
    EventEmitter.prototype.eventNames = function eventNames() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };
    function arrayClone(arr, n) {
      var copy = new Array(n);
      for (var i = 0; i < n; ++i)
        copy[i] = arr[i];
      return copy;
    }
    function spliceOne(list, index) {
      for (; index + 1 < list.length; index++)
        list[index] = list[index + 1];
      list.pop();
    }
    function unwrapListeners(arr) {
      var ret = new Array(arr.length);
      for (var i = 0; i < ret.length; ++i) {
        ret[i] = arr[i].listener || arr[i];
      }
      return ret;
    }
    function once(emitter, name) {
      return new Promise(function(resolve, reject) {
        function errorListener(err) {
          emitter.removeListener(name, resolver);
          reject(err);
        }
        function resolver() {
          if (typeof emitter.removeListener === "function") {
            emitter.removeListener("error", errorListener);
          }
          resolve([].slice.call(arguments));
        }
        ;
        eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
        if (name !== "error") {
          addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
        }
      });
    }
    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
      if (typeof emitter.on === "function") {
        eventTargetAgnosticAddListener(emitter, "error", handler, flags);
      }
    }
    function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
      if (typeof emitter.on === "function") {
        if (flags.once) {
          emitter.once(name, listener);
        } else {
          emitter.on(name, listener);
        }
      } else if (typeof emitter.addEventListener === "function") {
        emitter.addEventListener(name, function wrapListener(arg) {
          if (flags.once) {
            emitter.removeEventListener(name, wrapListener);
          }
          listener(arg);
        });
      } else {
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
      }
    }
  }
});

// node_modules/graphology-utils/is-graph.js
var require_is_graph = __commonJS({
  "node_modules/graphology-utils/is-graph.js"(exports, module) {
    module.exports = function isGraph(value) {
      return value !== null && typeof value === "object" && typeof value.addUndirectedEdgeWithKey === "function" && typeof value.dropNode === "function" && typeof value.multi === "boolean";
    };
  }
});

// node_modules/graphology-metrics/extent.js
var require_extent = __commonJS({
  "node_modules/graphology-metrics/extent.js"(exports, module) {
    var isGraph = require_is_graph();
    function nodeExtent(graph, attribute) {
      if (!isGraph(graph))
        throw new Error("graphology-metrics/extent: the given graph is not a valid graphology instance.");
      var attributes = [].concat(attribute);
      var value, key, a;
      var results = {};
      for (a = 0; a < attributes.length; a++) {
        key = attributes[a];
        results[key] = [Infinity, -Infinity];
      }
      graph.forEachNode(function(node, data) {
        for (a = 0; a < attributes.length; a++) {
          key = attributes[a];
          value = data[key];
          if (value < results[key][0])
            results[key][0] = value;
          if (value > results[key][1])
            results[key][1] = value;
        }
      });
      return typeof attribute === "string" ? results[attribute] : results;
    }
    function edgeExtent(graph, attribute) {
      if (!isGraph(graph))
        throw new Error("graphology-metrics/extent: the given graph is not a valid graphology instance.");
      var attributes = [].concat(attribute);
      var value, key, a;
      var results = {};
      for (a = 0; a < attributes.length; a++) {
        key = attributes[a];
        results[key] = [Infinity, -Infinity];
      }
      graph.forEachEdge(function(edge, data) {
        for (a = 0; a < attributes.length; a++) {
          key = attributes[a];
          value = data[key];
          if (value < results[key][0])
            results[key][0] = value;
          if (value > results[key][1])
            results[key][1] = value;
        }
      });
      return typeof attribute === "string" ? results[attribute] : results;
    }
    var extent = nodeExtent;
    extent.nodeExtent = nodeExtent;
    extent.edgeExtent = edgeExtent;
    module.exports = extent;
  }
});

// node_modules/sigma/utils/matrices.js
var require_matrices = __commonJS({
  "node_modules/sigma/utils/matrices.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.multiplyVec = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;
    function identity() {
      return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);
    }
    exports.identity = identity;
    function scale(m, x, y) {
      m[0] = x;
      m[4] = typeof y === "number" ? y : x;
      return m;
    }
    exports.scale = scale;
    function rotate(m, r) {
      var s = Math.sin(r), c = Math.cos(r);
      m[0] = c;
      m[1] = s;
      m[3] = -s;
      m[4] = c;
      return m;
    }
    exports.rotate = rotate;
    function translate(m, x, y) {
      m[6] = x;
      m[7] = y;
      return m;
    }
    exports.translate = translate;
    function multiply(a, b) {
      var a00 = a[0], a01 = a[1], a02 = a[2];
      var a10 = a[3], a11 = a[4], a12 = a[5];
      var a20 = a[6], a21 = a[7], a22 = a[8];
      var b00 = b[0], b01 = b[1], b02 = b[2];
      var b10 = b[3], b11 = b[4], b12 = b[5];
      var b20 = b[6], b21 = b[7], b22 = b[8];
      a[0] = b00 * a00 + b01 * a10 + b02 * a20;
      a[1] = b00 * a01 + b01 * a11 + b02 * a21;
      a[2] = b00 * a02 + b01 * a12 + b02 * a22;
      a[3] = b10 * a00 + b11 * a10 + b12 * a20;
      a[4] = b10 * a01 + b11 * a11 + b12 * a21;
      a[5] = b10 * a02 + b11 * a12 + b12 * a22;
      a[6] = b20 * a00 + b21 * a10 + b22 * a20;
      a[7] = b20 * a01 + b21 * a11 + b22 * a21;
      a[8] = b20 * a02 + b21 * a12 + b22 * a22;
      return a;
    }
    exports.multiply = multiply;
    function multiplyVec(a, b) {
      var a00 = a[0], a01 = a[1], a02 = a[2];
      var a10 = a[3], a11 = a[4], a12 = a[5];
      var a20 = a[6], a21 = a[7], a22 = a[8];
      var b0 = b[0], b1 = b[1], b2 = b[2];
      var c = Array.isArray(b) ? [0, 0, 0] : Float32Array.of(0, 0, 0);
      c[0] = b0 * a00 + b1 * a10 + b2 * a20;
      c[1] = b0 * a01 + b1 * a11 + b2 * a21;
      c[2] = b0 * a02 + b1 * a12 + b2 * a22;
      return c;
    }
    exports.multiplyVec = multiplyVec;
  }
});

// node_modules/sigma/utils/index.js
var require_utils = __commonJS({
  "node_modules/sigma/utils/index.js"(exports) {
    "use strict";
    var __read = exports && exports.__read || function(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m)
        return o;
      var i = m.call(o), r, ar = [], e;
      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
          ar.push(r.value);
      } catch (error) {
        e = { error };
      } finally {
        try {
          if (r && !r.done && (m = i["return"]))
            m.call(i);
        } finally {
          if (e)
            throw e.error;
        }
      }
      return ar;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;
    var is_graph_1 = __importDefault(require_is_graph());
    var matrices_1 = require_matrices();
    function isPlainObject(value) {
      return typeof value === "object" && value !== null && value.constructor === Object;
    }
    exports.isPlainObject = isPlainObject;
    function assign(target) {
      var objects = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
      }
      target = target || {};
      for (var i = 0, l = objects.length; i < l; i++) {
        var o = objects[i];
        if (!o)
          continue;
        Object.assign(target, o);
      }
      return target;
    }
    exports.assign = assign;
    function assignDeep(target) {
      var objects = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
      }
      target = target || {};
      for (var i = 0, l = objects.length; i < l; i++) {
        var o = objects[i];
        if (!o)
          continue;
        for (var k in o) {
          if (isPlainObject(o[k])) {
            target[k] = assignDeep(target[k], o[k]);
          } else {
            target[k] = o[k];
          }
        }
      }
      return target;
    }
    exports.assignDeep = assignDeep;
    exports.requestFrame = typeof requestAnimationFrame !== "undefined" ? function(callback) {
      return requestAnimationFrame(callback);
    } : function(callback) {
      return setTimeout(callback, 0);
    };
    exports.cancelFrame = typeof cancelAnimationFrame !== "undefined" ? function(requestID) {
      return cancelAnimationFrame(requestID);
    } : function(requestID) {
      return clearTimeout(requestID);
    };
    function createElement(tag, style, attributes) {
      var element = document.createElement(tag);
      if (style) {
        for (var k in style) {
          element.style[k] = style[k];
        }
      }
      if (attributes) {
        for (var k in attributes) {
          element.setAttribute(k, attributes[k]);
        }
      }
      return element;
    }
    exports.createElement = createElement;
    function getPixelRatio() {
      if (typeof window.devicePixelRatio !== "undefined")
        return window.devicePixelRatio;
      return 1;
    }
    exports.getPixelRatio = getPixelRatio;
    function createNormalizationFunction(extent) {
      var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];
      var ratio = Math.max(maxX - minX, maxY - minY);
      if (ratio === 0)
        ratio = 1;
      var dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;
      var fn = function(data) {
        return {
          x: 0.5 + (data.x - dX) / ratio,
          y: 0.5 + (data.y - dY) / ratio
        };
      };
      fn.applyTo = function(data) {
        data.x = 0.5 + (data.x - dX) / ratio;
        data.y = 0.5 + (data.y - dY) / ratio;
      };
      fn.inverse = function(data) {
        return {
          x: dX + ratio * (data.x - 0.5),
          y: dY + ratio * (data.y - 0.5)
        };
      };
      fn.ratio = ratio;
      return fn;
    }
    exports.createNormalizationFunction = createNormalizationFunction;
    function zIndexOrdering(extent, getter, elements) {
      return elements.sort(function(a, b) {
        var zA = getter(a) || 0, zB = getter(b) || 0;
        if (zA < zB)
          return -1;
        if (zA > zB)
          return 1;
        return 0;
      });
    }
    exports.zIndexOrdering = zIndexOrdering;
    var FLOAT_COLOR_CACHE = {};
    var INT8 = new Int8Array(4);
    var INT32 = new Int32Array(INT8.buffer, 0, 1);
    var FLOAT32 = new Float32Array(INT8.buffer, 0, 1);
    var RGBA_TEST_REGEX = /^\s*rgba?\s*\(/;
    var RGBA_EXTRACT_REGEX = /^\s*rgba?\s*\(\s*([0-9]*)\s*,\s*([0-9]*)\s*,\s*([0-9]*)(?:\s*,\s*(.*)?)?\)\s*$/;
    function floatColor(val) {
      if (typeof FLOAT_COLOR_CACHE[val] !== "undefined")
        return FLOAT_COLOR_CACHE[val];
      var r = 0, g = 0, b = 0, a = 1;
      if (val[0] === "#") {
        if (val.length === 4) {
          r = parseInt(val.charAt(1) + val.charAt(1), 16);
          g = parseInt(val.charAt(2) + val.charAt(2), 16);
          b = parseInt(val.charAt(3) + val.charAt(3), 16);
        } else {
          r = parseInt(val.charAt(1) + val.charAt(2), 16);
          g = parseInt(val.charAt(3) + val.charAt(4), 16);
          b = parseInt(val.charAt(5) + val.charAt(6), 16);
        }
      } else if (RGBA_TEST_REGEX.test(val)) {
        var match = val.match(RGBA_EXTRACT_REGEX);
        if (match) {
          r = +match[1];
          g = +match[2];
          b = +match[3];
          if (match[4])
            a = +match[4];
        }
      }
      a = a * 255 | 0;
      INT32[0] = (a << 24 | b << 16 | g << 8 | r) & 4278190079;
      var color = FLOAT32[0];
      FLOAT_COLOR_CACHE[val] = color;
      return color;
    }
    exports.floatColor = floatColor;
    function getCorrectionRatio(viewportDimensions, graphDimensions) {
      var viewportRatio = viewportDimensions.height / viewportDimensions.width;
      var graphRatio = graphDimensions.height / graphDimensions.width;
      if (viewportRatio < 1 && graphRatio > 1 || viewportRatio > 1 && graphRatio < 1) {
        return 1;
      }
      return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));
    }
    exports.getCorrectionRatio = getCorrectionRatio;
    function matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {
      var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;
      var width = viewportDimensions.width, height = viewportDimensions.height;
      var matrix = (0, matrices_1.identity)();
      var smallestDimension = Math.min(width, height) - 2 * padding;
      var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);
      if (!inverse) {
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));
      } else {
        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));
      }
      return matrix;
    }
    exports.matrixFromCamera = matrixFromCamera;
    function getMatrixImpact(matrix, cameraState, viewportDimensions) {
      var _a = __read((0, matrices_1.multiplyVec)(matrix, [Math.cos(cameraState.angle), Math.sin(cameraState.angle), 0]), 2), x = _a[0], y = _a[1];
      return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;
    }
    exports.getMatrixImpact = getMatrixImpact;
    function extractPixel(gl, x, y, array) {
      var data = array || new Uint8Array(4);
      gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);
      return data;
    }
    exports.extractPixel = extractPixel;
    function canUse32BitsIndices(gl) {
      var webgl2 = typeof WebGL2RenderingContext !== "undefined" && gl instanceof WebGL2RenderingContext;
      return webgl2 || !!gl.getExtension("OES_element_index_uint");
    }
    exports.canUse32BitsIndices = canUse32BitsIndices;
    function validateGraph(graph) {
      if (!(0, is_graph_1.default)(graph))
        throw new Error("Sigma: invalid graph instance.");
      graph.forEachNode(function(key, attributes) {
        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {
          throw new Error("Sigma: Coordinates of node " + key + " are invalid. A node must have a numeric 'x' and 'y' attribute.");
        }
      });
    }
    exports.validateGraph = validateGraph;
  }
});

// node_modules/sigma/utils/easings.js
var require_easings = __commonJS({
  "node_modules/sigma/utils/easings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;
    var linear = function(k) {
      return k;
    };
    exports.linear = linear;
    var quadraticIn = function(k) {
      return k * k;
    };
    exports.quadraticIn = quadraticIn;
    var quadraticOut = function(k) {
      return k * (2 - k);
    };
    exports.quadraticOut = quadraticOut;
    var quadraticInOut = function(k) {
      if ((k *= 2) < 1)
        return 0.5 * k * k;
      return -0.5 * (--k * (k - 2) - 1);
    };
    exports.quadraticInOut = quadraticInOut;
    var cubicIn = function(k) {
      return k * k * k;
    };
    exports.cubicIn = cubicIn;
    var cubicOut = function(k) {
      return --k * k * k + 1;
    };
    exports.cubicOut = cubicOut;
    var cubicInOut = function(k) {
      if ((k *= 2) < 1)
        return 0.5 * k * k * k;
      return 0.5 * ((k -= 2) * k * k + 2);
    };
    exports.cubicInOut = cubicInOut;
    var easings = {
      linear: exports.linear,
      quadraticIn: exports.quadraticIn,
      quadraticOut: exports.quadraticOut,
      quadraticInOut: exports.quadraticInOut,
      cubicIn: exports.cubicIn,
      cubicOut: exports.cubicOut,
      cubicInOut: exports.cubicInOut
    };
    exports.default = easings;
  }
});

// node_modules/sigma/utils/animate.js
var require_animate = __commonJS({
  "node_modules/sigma/utils/animate.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;
    var index_1 = require_utils();
    var easings_1 = __importDefault(require_easings());
    exports.ANIMATE_DEFAULTS = {
      easing: "quadraticInOut",
      duration: 150
    };
    function animateNodes(graph, targets, opts, callback) {
      var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);
      var easing = typeof options.easing === "function" ? options.easing : easings_1.default[options.easing];
      var start = Date.now();
      var startPositions = {};
      for (var node in targets) {
        var attrs = targets[node];
        startPositions[node] = {};
        for (var k in attrs)
          startPositions[node][k] = graph.getNodeAttribute(node, k);
      }
      var frame = null;
      var step = function() {
        var p = (Date.now() - start) / options.duration;
        if (p >= 1) {
          for (var node2 in targets) {
            var attrs2 = targets[node2];
            for (var k2 in attrs2)
              graph.setNodeAttribute(node2, k2, attrs2[k2]);
          }
          if (typeof callback === "function")
            callback();
          return;
        }
        p = easing(p);
        for (var node2 in targets) {
          var attrs2 = targets[node2];
          var s = startPositions[node2];
          for (var k2 in attrs2)
            graph.setNodeAttribute(node2, k2, attrs2[k2] * p + s[k2] * (1 - p));
        }
        frame = (0, index_1.requestFrame)(step);
      };
      step();
      return function() {
        if (frame)
          (0, index_1.cancelFrame)(frame);
      };
    }
    exports.animateNodes = animateNodes;
  }
});

// node_modules/sigma/core/camera.js
var require_camera = __commonJS({
  "node_modules/sigma/core/camera.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var events_1 = require_events();
    var animate_1 = require_animate();
    var easings_1 = __importDefault(require_easings());
    var utils_1 = require_utils();
    var DEFAULT_ZOOMING_RATIO = 1.5;
    var Camera = function(_super) {
      __extends(Camera2, _super);
      function Camera2() {
        var _this = _super.call(this) || this;
        _this.x = 0.5;
        _this.y = 0.5;
        _this.angle = 0;
        _this.ratio = 1;
        _this.nextFrame = null;
        _this.previousState = null;
        _this.enabled = true;
        _this.previousState = _this.getState();
        return _this;
      }
      Camera2.from = function(state) {
        var camera = new Camera2();
        return camera.setState(state);
      };
      Camera2.prototype.enable = function() {
        this.enabled = true;
        return this;
      };
      Camera2.prototype.disable = function() {
        this.enabled = false;
        return this;
      };
      Camera2.prototype.getState = function() {
        return {
          x: this.x,
          y: this.y,
          angle: this.angle,
          ratio: this.ratio
        };
      };
      Camera2.prototype.hasState = function(state) {
        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;
      };
      Camera2.prototype.getPreviousState = function() {
        var state = this.previousState;
        if (!state)
          return null;
        return {
          x: state.x,
          y: state.y,
          angle: state.angle,
          ratio: state.ratio
        };
      };
      Camera2.prototype.isAnimated = function() {
        return !!this.nextFrame;
      };
      Camera2.prototype.setState = function(state) {
        if (!this.enabled)
          return this;
        this.previousState = this.getState();
        if (typeof state.x === "number")
          this.x = state.x;
        if (typeof state.y === "number")
          this.y = state.y;
        if (typeof state.angle === "number")
          this.angle = state.angle;
        if (typeof state.ratio === "number")
          this.ratio = state.ratio;
        if (!this.hasState(this.previousState))
          this.emit("updated", this.getState());
        return this;
      };
      Camera2.prototype.animate = function(state, opts, callback) {
        var _this = this;
        if (!this.enabled)
          return;
        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);
        var easing = typeof options.easing === "function" ? options.easing : easings_1.default[options.easing];
        var start = Date.now(), initialState = this.getState();
        var fn = function() {
          var t = (Date.now() - start) / options.duration;
          if (t >= 1) {
            _this.nextFrame = null;
            _this.setState(state);
            if (_this.animationCallback) {
              _this.animationCallback.call(null);
              _this.animationCallback = void 0;
            }
            return;
          }
          var coefficient = easing(t);
          var newState = {};
          if (state.x)
            newState.x = initialState.x + (state.x - initialState.x) * coefficient;
          if (state.y)
            newState.y = initialState.y + (state.y - initialState.y) * coefficient;
          if (state.angle)
            newState.angle = initialState.angle + (state.angle - initialState.angle) * coefficient;
          if (state.ratio)
            newState.ratio = initialState.ratio + (state.ratio - initialState.ratio) * coefficient;
          _this.setState(newState);
          _this.nextFrame = (0, utils_1.requestFrame)(fn);
        };
        if (this.nextFrame) {
          (0, utils_1.cancelFrame)(this.nextFrame);
          if (this.animationCallback)
            this.animationCallback.call(null);
          this.nextFrame = (0, utils_1.requestFrame)(fn);
        } else {
          fn();
        }
        this.animationCallback = callback;
      };
      Camera2.prototype.animatedZoom = function(factorOrOptions) {
        if (!factorOrOptions) {
          this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });
        } else {
          if (typeof factorOrOptions === "number")
            return this.animate({ ratio: this.ratio / factorOrOptions });
          else
            this.animate({
              ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)
            }, factorOrOptions);
        }
      };
      Camera2.prototype.animatedUnzoom = function(factorOrOptions) {
        if (!factorOrOptions) {
          this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });
        } else {
          if (typeof factorOrOptions === "number")
            return this.animate({ ratio: this.ratio * factorOrOptions });
          else
            this.animate({
              ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)
            }, factorOrOptions);
        }
      };
      Camera2.prototype.animatedReset = function(options) {
        this.animate({
          x: 0.5,
          y: 0.5,
          ratio: 1,
          angle: 0
        }, options);
      };
      Camera2.prototype.copy = function() {
        return Camera2.from(this.getState());
      };
      return Camera2;
    }(events_1.EventEmitter);
    exports.default = Camera;
  }
});

// node_modules/sigma/core/captors/captor.js
var require_captor = __commonJS({
  "node_modules/sigma/core/captors/captor.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;
    var events_1 = require_events();
    function getPosition(e, dom) {
      var bbox = dom.getBoundingClientRect();
      return {
        x: e.clientX - bbox.left,
        y: e.clientY - bbox.top
      };
    }
    exports.getPosition = getPosition;
    function getMouseCoords(e, dom) {
      return __assign(__assign({}, getPosition(e, dom)), { clientX: e.clientX, clientY: e.clientY, ctrlKey: e.ctrlKey, metaKey: e.metaKey, altKey: e.altKey, shiftKey: e.shiftKey, sigmaDefaultPrevented: false, preventSigmaDefault: function() {
        this.sigmaDefaultPrevented = true;
      }, original: e });
    }
    exports.getMouseCoords = getMouseCoords;
    function getWheelCoords(e, dom) {
      return __assign(__assign({}, getMouseCoords(e, dom)), { deltaY: e.deltaY, delta: getWheelDelta(e) });
    }
    exports.getWheelCoords = getWheelCoords;
    var MAX_TOUCHES = 2;
    function getTouchesArray(touches) {
      var arr = [];
      for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)
        arr.push(touches[i]);
      return arr;
    }
    exports.getTouchesArray = getTouchesArray;
    function getTouchCoords(e, dom) {
      return {
        touches: getTouchesArray(e.touches).map(function(touch) {
          return getPosition(touch, dom);
        }),
        ctrlKey: e.ctrlKey,
        metaKey: e.metaKey,
        altKey: e.altKey,
        shiftKey: e.shiftKey,
        preventDefault: e.preventDefault.bind(e),
        original: e
      };
    }
    exports.getTouchCoords = getTouchCoords;
    function getWheelDelta(e) {
      if (typeof e.deltaY !== "undefined")
        return e.deltaY * -3 / 360;
      if (typeof e.detail !== "undefined")
        return e.detail / -9;
      throw new Error("Captor: could not extract delta from event.");
    }
    exports.getWheelDelta = getWheelDelta;
    var Captor = function(_super) {
      __extends(Captor2, _super);
      function Captor2(container, renderer) {
        var _this = _super.call(this) || this;
        _this.container = container;
        _this.renderer = renderer;
        return _this;
      }
      return Captor2;
    }(events_1.EventEmitter);
    exports.default = Captor;
  }
});

// node_modules/sigma/core/captors/mouse.js
var require_mouse = __commonJS({
  "node_modules/sigma/core/captors/mouse.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var captor_1 = __importStar(require_captor());
    var DRAG_TIMEOUT = 100;
    var DRAGGED_EVENTS_TOLERANCE = 3;
    var MOUSE_INERTIA_DURATION = 200;
    var MOUSE_INERTIA_RATIO = 3;
    var MOUSE_ZOOM_DURATION = 250;
    var ZOOMING_RATIO = 1.7;
    var DOUBLE_CLICK_TIMEOUT = 300;
    var DOUBLE_CLICK_ZOOMING_RATIO = 2.2;
    var DOUBLE_CLICK_ZOOMING_DURATION = 200;
    var MouseCaptor = function(_super) {
      __extends(MouseCaptor2, _super);
      function MouseCaptor2(container, renderer) {
        var _this = _super.call(this, container, renderer) || this;
        _this.enabled = true;
        _this.draggedEvents = 0;
        _this.downStartTime = null;
        _this.lastMouseX = null;
        _this.lastMouseY = null;
        _this.isMouseDown = false;
        _this.isMoving = false;
        _this.movingTimeout = null;
        _this.startCameraState = null;
        _this.clicks = 0;
        _this.doubleClickTimeout = null;
        _this.currentWheelDirection = 0;
        _this.handleClick = _this.handleClick.bind(_this);
        _this.handleRightClick = _this.handleRightClick.bind(_this);
        _this.handleDown = _this.handleDown.bind(_this);
        _this.handleUp = _this.handleUp.bind(_this);
        _this.handleMove = _this.handleMove.bind(_this);
        _this.handleWheel = _this.handleWheel.bind(_this);
        _this.handleOut = _this.handleOut.bind(_this);
        container.addEventListener("click", _this.handleClick, false);
        container.addEventListener("contextmenu", _this.handleRightClick, false);
        container.addEventListener("mousedown", _this.handleDown, false);
        container.addEventListener("wheel", _this.handleWheel, false);
        container.addEventListener("mouseout", _this.handleOut, false);
        document.addEventListener("mousemove", _this.handleMove, false);
        document.addEventListener("mouseup", _this.handleUp, false);
        return _this;
      }
      MouseCaptor2.prototype.kill = function() {
        var container = this.container;
        container.removeEventListener("click", this.handleClick);
        container.removeEventListener("contextmenu", this.handleRightClick);
        container.removeEventListener("mousedown", this.handleDown);
        container.removeEventListener("wheel", this.handleWheel);
        container.removeEventListener("mouseout", this.handleOut);
        document.removeEventListener("mousemove", this.handleMove);
        document.removeEventListener("mouseup", this.handleUp);
      };
      MouseCaptor2.prototype.handleClick = function(e) {
        var _this = this;
        if (!this.enabled)
          return;
        this.clicks++;
        if (this.clicks === 2) {
          this.clicks = 0;
          if (typeof this.doubleClickTimeout === "number") {
            clearTimeout(this.doubleClickTimeout);
            this.doubleClickTimeout = null;
          }
          return this.handleDoubleClick(e);
        }
        setTimeout(function() {
          _this.clicks = 0;
          _this.doubleClickTimeout = null;
        }, DOUBLE_CLICK_TIMEOUT);
        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)
          this.emit("click", (0, captor_1.getMouseCoords)(e, this.container));
      };
      MouseCaptor2.prototype.handleRightClick = function(e) {
        if (!this.enabled)
          return;
        this.emit("rightClick", (0, captor_1.getMouseCoords)(e, this.container));
      };
      MouseCaptor2.prototype.handleDoubleClick = function(e) {
        if (!this.enabled)
          return;
        if (e.preventDefault)
          e.preventDefault();
        else
          e.returnValue = false;
        e.stopPropagation();
        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);
        this.emit("doubleClick", mouseCoords);
        if (mouseCoords.sigmaDefaultPrevented)
          return false;
        var camera = this.renderer.getCamera();
        var newRatio = camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO;
        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {
          easing: "quadraticInOut",
          duration: DOUBLE_CLICK_ZOOMING_DURATION
        });
        return false;
      };
      MouseCaptor2.prototype.handleDown = function(e) {
        if (!this.enabled)
          return;
        this.startCameraState = this.renderer.getCamera().getState();
        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;
        this.lastMouseX = x;
        this.lastMouseY = y;
        this.draggedEvents = 0;
        this.downStartTime = Date.now();
        switch (e.which) {
          default:
            this.isMouseDown = true;
            this.emit("mousedown", (0, captor_1.getMouseCoords)(e, this.container));
        }
      };
      MouseCaptor2.prototype.handleUp = function(e) {
        var _this = this;
        if (!this.enabled || !this.isMouseDown)
          return;
        var camera = this.renderer.getCamera();
        this.isMouseDown = false;
        if (typeof this.movingTimeout === "number") {
          clearTimeout(this.movingTimeout);
          this.movingTimeout = null;
        }
        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;
        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };
        if (this.isMoving) {
          camera.animate({
            x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),
            y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y)
          }, {
            duration: MOUSE_INERTIA_DURATION,
            easing: "quadraticOut"
          });
        } else if (this.lastMouseX !== x || this.lastMouseY !== y) {
          camera.setState({
            x: cameraState.x,
            y: cameraState.y
          });
        }
        this.isMoving = false;
        setTimeout(function() {
          _this.draggedEvents = 0;
          _this.renderer.refresh();
        }, 0);
        this.emit("mouseup", (0, captor_1.getMouseCoords)(e, this.container));
      };
      MouseCaptor2.prototype.handleMove = function(e) {
        var _this = this;
        if (!this.enabled)
          return;
        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);
        this.emit("mousemovebody", mouseCoords);
        if (e.target !== this.container)
          return;
        this.emit("mousemove", mouseCoords);
        if (this.isMouseDown) {
          this.isMoving = true;
          this.draggedEvents++;
          if (typeof this.movingTimeout === "number") {
            clearTimeout(this.movingTimeout);
          }
          this.movingTimeout = window.setTimeout(function() {
            _this.movingTimeout = null;
            _this.isMoving = false;
          }, DRAG_TIMEOUT);
          var camera = this.renderer.getCamera();
          var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;
          var lastMouse = this.renderer.viewportToFramedGraph({
            x: this.lastMouseX,
            y: this.lastMouseY
          });
          var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });
          var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;
          var cameraState = camera.getState();
          var x = cameraState.x + offsetX, y = cameraState.y + offsetY;
          camera.setState({ x, y });
          this.lastMouseX = eX;
          this.lastMouseY = eY;
          if (e.preventDefault)
            e.preventDefault();
          else
            e.returnValue = false;
          e.stopPropagation();
          return false;
        }
      };
      MouseCaptor2.prototype.handleWheel = function(e) {
        var _this = this;
        if (!this.enabled)
          return false;
        if (e.preventDefault)
          e.preventDefault();
        else
          e.returnValue = false;
        e.stopPropagation();
        var delta = (0, captor_1.getWheelDelta)(e);
        if (!delta)
          return false;
        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);
        this.emit("wheel", wheelCoords);
        if (wheelCoords.sigmaDefaultPrevented)
          return false;
        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;
        var camera = this.renderer.getCamera();
        var newRatio = camera.getState().ratio * ratioDiff;
        var wheelDirection = delta > 0 ? 1 : -1;
        var now = Date.now();
        if (this.currentWheelDirection === wheelDirection && this.lastWheelTriggerTime && now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {
          return false;
        }
        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {
          easing: "quadraticOut",
          duration: MOUSE_ZOOM_DURATION
        }, function() {
          _this.currentWheelDirection = 0;
        });
        this.currentWheelDirection = wheelDirection;
        this.lastWheelTriggerTime = now;
        return false;
      };
      MouseCaptor2.prototype.handleOut = function() {
      };
      return MouseCaptor2;
    }(captor_1.default);
    exports.default = MouseCaptor;
  }
});

// node_modules/@yomguithereal/helpers/extend.js
var require_extend = __commonJS({
  "node_modules/@yomguithereal/helpers/extend.js"(exports, module) {
    module.exports = function extend(array, values) {
      var l2 = values.length;
      if (l2 === 0)
        return;
      var l1 = array.length;
      array.length += l2;
      for (var i = 0; i < l2; i++)
        array[l1 + i] = values[i];
    };
  }
});

// node_modules/sigma/core/quadtree.js
var require_quadtree = __commonJS({
  "node_modules/sigma/core/quadtree.js"(exports) {
    "use strict";
    var __read = exports && exports.__read || function(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m)
        return o;
      var i = m.call(o), r, ar = [], e;
      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
          ar.push(r.value);
      } catch (error) {
        e = { error };
      } finally {
        try {
          if (r && !r.done && (m = i["return"]))
            m.call(i);
        } finally {
          if (e)
            throw e.error;
        }
      }
      return ar;
    };
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;
    var extend_1 = __importDefault(require_extend());
    var BLOCKS = 4;
    var MAX_LEVEL = 5;
    var OUTSIDE_BLOCK = "outside";
    var X_OFFSET = 0;
    var Y_OFFSET = 1;
    var WIDTH_OFFSET = 2;
    var HEIGHT_OFFSET = 3;
    var TOP_LEFT = 1;
    var TOP_RIGHT = 2;
    var BOTTOM_LEFT = 3;
    var BOTTOM_RIGHT = 4;
    var hasWarnedTooMuchOutside = false;
    function isRectangleAligned(rect) {
      return rect.x1 === rect.x2 || rect.y1 === rect.y2;
    }
    exports.isRectangleAligned = isRectangleAligned;
    function getCircumscribedAlignedRectangle(rect) {
      var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));
      var heightVector = {
        x: (rect.y1 - rect.y2) * rect.height / width,
        y: (rect.x2 - rect.x1) * rect.height / width
      };
      var tl = { x: rect.x1, y: rect.y1 };
      var tr = { x: rect.x2, y: rect.y2 };
      var bl = {
        x: rect.x1 + heightVector.x,
        y: rect.y1 + heightVector.y
      };
      var br = {
        x: rect.x2 + heightVector.x,
        y: rect.y2 + heightVector.y
      };
      var xL = Math.min(tl.x, tr.x, bl.x, br.x);
      var xR = Math.max(tl.x, tr.x, bl.x, br.x);
      var yT = Math.min(tl.y, tr.y, bl.y, br.y);
      var yB = Math.max(tl.y, tr.y, bl.y, br.y);
      return {
        x1: xL,
        y1: yT,
        x2: xR,
        y2: yT,
        height: yB - yT
      };
    }
    exports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;
    function squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {
      return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;
    }
    exports.squareCollidesWithQuad = squareCollidesWithQuad;
    function rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {
      return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;
    }
    exports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;
    function pointIsInQuad(x, y, qx, qy, qw, qh) {
      var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;
      return top ? left ? TOP_LEFT : TOP_RIGHT : left ? BOTTOM_LEFT : BOTTOM_RIGHT;
    }
    function buildQuadrants(maxLevel, data) {
      var stack = [0, 0];
      while (stack.length) {
        var level = stack.pop(), block = stack.pop();
        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;
        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;
        data[topLeftBlock + X_OFFSET] = x;
        data[topLeftBlock + Y_OFFSET] = y;
        data[topLeftBlock + WIDTH_OFFSET] = hw;
        data[topLeftBlock + HEIGHT_OFFSET] = hh;
        data[topRightBlock + X_OFFSET] = x + hw;
        data[topRightBlock + Y_OFFSET] = y;
        data[topRightBlock + WIDTH_OFFSET] = hw;
        data[topRightBlock + HEIGHT_OFFSET] = hh;
        data[bottomLeftBlock + X_OFFSET] = x;
        data[bottomLeftBlock + Y_OFFSET] = y + hh;
        data[bottomLeftBlock + WIDTH_OFFSET] = hw;
        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;
        data[bottomRightBlock + X_OFFSET] = x + hw;
        data[bottomRightBlock + Y_OFFSET] = y + hh;
        data[bottomRightBlock + WIDTH_OFFSET] = hw;
        data[bottomRightBlock + HEIGHT_OFFSET] = hh;
        if (level < maxLevel - 1) {
          stack.push(bottomRightBlock, level + 1);
          stack.push(bottomLeftBlock, level + 1);
          stack.push(topRightBlock, level + 1);
          stack.push(topLeftBlock, level + 1);
        }
      }
    }
    function insertNode(maxLevel, data, containers, key, x, y, size) {
      var x1 = x - size, y1 = y - size, w = size * 2;
      var level = 0, block = 0;
      while (true) {
        if (level >= maxLevel) {
          containers[block] = containers[block] || [];
          containers[block].push(key);
          return;
        }
        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;
        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);
        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);
        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);
        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);
        var collisions = [
          collidingWithTopLeft,
          collidingWithTopRight,
          collidingWithBottomLeft,
          collidingWithBottomRight
        ].reduce(function(acc, current) {
          if (current)
            return acc + 1;
          else
            return acc;
        }, 0);
        if (collisions === 0 && level === 0) {
          containers[OUTSIDE_BLOCK].push(key);
          if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {
            hasWarnedTooMuchOutside = true;
            console.warn("sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. You might have a problem with the normalization function or the custom bounding box.");
          }
          return;
        }
        if (collisions === 0)
          throw new Error("sigma/quadtree.insertNode: no collision (level: " + level + ", key: " + key + ", x: " + x + ", y: " + y + ", size: " + size + ").");
        if (collisions === 3)
          throw new Error("sigma/quadtree.insertNode: 3 impossible collisions (level: " + level + ", key: " + key + ", x: " + x + ", y: " + y + ", size: " + size + ").");
        if (collisions > 1) {
          containers[block] = containers[block] || [];
          containers[block].push(key);
          return;
        } else {
          level++;
        }
        if (collidingWithTopLeft)
          block = topLeftBlock;
        if (collidingWithTopRight)
          block = topRightBlock;
        if (collidingWithBottomLeft)
          block = bottomLeftBlock;
        if (collidingWithBottomRight)
          block = bottomRightBlock;
      }
    }
    function getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {
      var stack = [0, 0];
      var collectedNodes = [];
      var container;
      while (stack.length) {
        var level = stack.pop(), block = stack.pop();
        container = containers[block];
        if (container)
          (0, extend_1.default)(collectedNodes, container);
        if (level >= maxLevel)
          continue;
        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;
        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);
        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);
        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);
        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);
        if (collidingWithTopLeft)
          stack.push(topLeftBlock, level + 1);
        if (collidingWithTopRight)
          stack.push(topRightBlock, level + 1);
        if (collidingWithBottomLeft)
          stack.push(bottomLeftBlock, level + 1);
        if (collidingWithBottomRight)
          stack.push(bottomRightBlock, level + 1);
      }
      return collectedNodes;
    }
    var QuadTree = function() {
      function QuadTree2(params) {
        var _a;
        if (params === void 0) {
          params = {};
        }
        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);
        this.cache = null;
        this.lastRectangle = null;
        var L = Math.pow(4, MAX_LEVEL);
        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));
        if (params.boundaries)
          this.resize(params.boundaries);
        else
          this.resize({
            x: 0,
            y: 0,
            width: 1,
            height: 1
          });
      }
      QuadTree2.prototype.add = function(key, x, y, size) {
        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);
        return this;
      };
      QuadTree2.prototype.resize = function(boundaries) {
        this.clear();
        this.data[X_OFFSET] = boundaries.x;
        this.data[Y_OFFSET] = boundaries.y;
        this.data[WIDTH_OFFSET] = boundaries.width;
        this.data[HEIGHT_OFFSET] = boundaries.height;
        buildQuadrants(MAX_LEVEL, this.data);
      };
      QuadTree2.prototype.clear = function() {
        var _a;
        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);
        return this;
      };
      QuadTree2.prototype.point = function(x, y) {
        var nodes2 = this.containers[OUTSIDE_BLOCK];
        var block = 0, level = 0;
        do {
          if (this.containers[block])
            nodes2.push.apply(nodes2, __spreadArray([], __read(this.containers[block]), false));
          var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);
          block = 4 * block + quad * BLOCKS;
          level++;
        } while (level <= MAX_LEVEL);
        return nodes2;
      };
      QuadTree2.prototype.rectangle = function(x1, y1, x2, y2, height) {
        var _a;
        var lr = this.lastRectangle;
        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {
          return this.cache;
        }
        this.lastRectangle = {
          x1,
          y1,
          x2,
          y2,
          height
        };
        if (!isRectangleAligned(this.lastRectangle))
          this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);
        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);
        (_a = this.cache).push.apply(_a, __spreadArray([], __read(this.containers[OUTSIDE_BLOCK]), false));
        return this.cache;
      };
      return QuadTree2;
    }();
    exports.default = QuadTree;
  }
});

// node_modules/sigma/core/labels.js
var require_labels = __commonJS({
  "node_modules/sigma/core/labels.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;
    var LabelCandidate = function() {
      function LabelCandidate2(key, size) {
        this.key = key;
        this.size = size;
      }
      LabelCandidate2.compare = function(first, second) {
        if (first.size > second.size)
          return -1;
        if (first.size < second.size)
          return 1;
        if (first.key > second.key)
          return 1;
        return -1;
      };
      return LabelCandidate2;
    }();
    var LabelGrid = function() {
      function LabelGrid2() {
        this.width = 0;
        this.height = 0;
        this.cellSize = 0;
        this.columns = 0;
        this.rows = 0;
        this.cells = {};
      }
      LabelGrid2.prototype.resizeAndClear = function(dimensions, cellSize) {
        this.width = dimensions.width;
        this.height = dimensions.height;
        this.cellSize = cellSize;
        this.columns = Math.ceil(dimensions.width / cellSize);
        this.rows = Math.ceil(dimensions.height / cellSize);
        this.cells = {};
      };
      LabelGrid2.prototype.getIndex = function(pos) {
        var xIndex = Math.floor(pos.x / this.cellSize);
        var yIndex = Math.floor(pos.y / this.cellSize);
        return xIndex * this.columns + yIndex;
      };
      LabelGrid2.prototype.add = function(key, size, pos) {
        var candidate = new LabelCandidate(key, size);
        var index = this.getIndex(pos);
        var cell = this.cells[index];
        if (!cell) {
          cell = [];
          this.cells[index] = cell;
        }
        cell.push(candidate);
      };
      LabelGrid2.prototype.organize = function() {
        for (var k in this.cells) {
          var cell = this.cells[k];
          cell.sort(LabelCandidate.compare);
        }
      };
      LabelGrid2.prototype.getLabelsToDisplay = function(ratio, density) {
        var cellArea = this.cellSize * this.cellSize;
        var scaledCellArea = cellArea / ratio / ratio;
        var scaledDensity = scaledCellArea * density / cellArea;
        var labelsToDisplayPerCell = Math.ceil(scaledDensity);
        var labels = [];
        for (var k in this.cells) {
          var cell = this.cells[k];
          for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {
            labels.push(cell[i].key);
          }
        }
        return labels;
      };
      return LabelGrid2;
    }();
    exports.LabelGrid = LabelGrid;
    function edgeLabelsToDisplayFromNodes(params) {
      var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;
      var worthyEdges = [];
      graph.forEachEdge(function(edge, _, source, target) {
        if (source === hoveredNode || target === hoveredNode || highlightedNodes.has(source) || highlightedNodes.has(target) || displayedNodeLabels.has(source) && displayedNodeLabels.has(target)) {
          worthyEdges.push(edge);
        }
      });
      return worthyEdges;
    }
    exports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;
  }
});

// node_modules/sigma/rendering/canvas/label.js
var require_label = __commonJS({
  "node_modules/sigma/rendering/canvas/label.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function drawLabel(context, data, settings) {
      if (!data.label)
        return;
      var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute ? data[settings.labelColor.attribute] || settings.labelColor.color || "#000" : settings.labelColor.color;
      context.fillStyle = color;
      context.font = weight + " " + size + "px " + font;
      context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);
    }
    exports.default = drawLabel;
  }
});

// node_modules/sigma/rendering/canvas/hover.js
var require_hover = __commonJS({
  "node_modules/sigma/rendering/canvas/hover.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var label_1 = __importDefault(require_label());
    function drawHover(context, data, settings) {
      var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;
      context.font = weight + " " + size + "px " + font;
      context.fillStyle = "#FFF";
      context.shadowOffsetX = 0;
      context.shadowOffsetY = 0;
      context.shadowBlur = 8;
      context.shadowColor = "#000";
      var PADDING = 2;
      if (typeof data.label === "string") {
        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;
        var angleRadian = Math.asin(boxHeight / 2 / radius);
        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));
        context.beginPath();
        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);
        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);
        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);
        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);
        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);
        context.closePath();
        context.fill();
      } else {
        context.beginPath();
        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);
        context.closePath();
        context.fill();
      }
      context.shadowOffsetX = 0;
      context.shadowOffsetY = 0;
      context.shadowBlur = 0;
      (0, label_1.default)(context, data, settings);
    }
    exports.default = drawHover;
  }
});

// node_modules/sigma/rendering/canvas/edge-label.js
var require_edge_label = __commonJS({
  "node_modules/sigma/rendering/canvas/edge-label.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {
      var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || "#000" : settings.edgeLabelColor.color;
      var label = edgeData.label;
      if (!label)
        return;
      context.fillStyle = color;
      context.font = weight + " " + size + "px " + font;
      var sSize = sourceData.size;
      var tSize = targetData.size;
      var sx = sourceData.x;
      var sy = sourceData.y;
      var tx = targetData.x;
      var ty = targetData.y;
      var cx = (sx + tx) / 2;
      var cy = (sy + ty) / 2;
      var dx = tx - sx;
      var dy = ty - sy;
      var d = Math.sqrt(dx * dx + dy * dy);
      if (d < sSize + tSize)
        return;
      sx += dx * sSize / d;
      sy += dy * sSize / d;
      tx -= dx * tSize / d;
      ty -= dy * tSize / d;
      cx = (sx + tx) / 2;
      cy = (sy + ty) / 2;
      dx = tx - sx;
      dy = ty - sy;
      d = Math.sqrt(dx * dx + dy * dy);
      var textLength = context.measureText(label).width;
      if (textLength > d) {
        var ellipsis = "\u2026";
        label = label + ellipsis;
        textLength = context.measureText(label).width;
        while (textLength > d && label.length > 1) {
          label = label.slice(0, -2) + ellipsis;
          textLength = context.measureText(label).width;
        }
        if (label.length < 4)
          return;
      }
      var angle;
      if (dx > 0) {
        if (dy > 0)
          angle = Math.acos(dx / d);
        else
          angle = Math.asin(dy / d);
      } else {
        if (dy > 0)
          angle = Math.acos(dx / d) + Math.PI;
        else
          angle = Math.asin(dx / d) + Math.PI / 2;
      }
      context.save();
      context.translate(cx, cy);
      context.rotate(angle);
      context.fillText(label, -textLength / 2, edgeData.size / 2 + size);
      context.restore();
    }
    exports.default = drawEdgeLabel;
  }
});

// node_modules/sigma/rendering/webgl/shaders/node.fast.vert.glsl.js
var require_node_fast_vert_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/node.fast.vert.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var o = { d: (t2, e2) => {
        for (var n in e2)
          o.o(e2, n) && !o.o(t2, n) && Object.defineProperty(t2, n, { enumerable: true, get: e2[n] });
      }, o: (o2, t2) => Object.prototype.hasOwnProperty.call(o2, t2), r: (o2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(o2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o2, "__esModule", { value: true });
      } }, t = {};
      o.r(t), o.d(t, { default: () => e });
      const e = "attribute vec2 a_position;\nattribute float a_size;\nattribute vec4 a_color;\n\nuniform float u_ratio;\nuniform float u_scale;\nuniform mat3 u_matrix;\n\nvarying vec4 v_color;\nvarying float v_border;\n\nconst float bias = 255.0 / 254.0;\n\nvoid main() {\n  gl_Position = vec4(\n    (u_matrix * vec3(a_position, 1)).xy,\n    0,\n    1\n  );\n\n  // Multiply the point size twice:\n  //  - x SCALING_RATIO to correct the canvas scaling\n  //  - x 2 to correct the formulae\n  gl_PointSize = a_size * u_ratio * u_scale * 2.0;\n\n  v_border = (1.0 / u_ratio) * (0.5 / a_size);\n\n  // Extract the color:\n  v_color = a_color;\n  v_color.a *= bias;\n}\n";
      module.exports = t;
    })();
  }
});

// node_modules/sigma/rendering/webgl/shaders/node.fast.frag.glsl.js
var require_node_fast_frag_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/node.fast.frag.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var o = { d: (e2, n2) => {
        for (var r in n2)
          o.o(n2, r) && !o.o(e2, r) && Object.defineProperty(e2, r, { enumerable: true, get: n2[r] });
      }, o: (o2, e2) => Object.prototype.hasOwnProperty.call(o2, e2), r: (o2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(o2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o2, "__esModule", { value: true });
      } }, e = {};
      o.r(e), o.d(e, { default: () => n });
      const n = "precision mediump float;\n\nvarying vec4 v_color;\nvarying float v_border;\n\nconst float radius = 0.5;\n\nvoid main(void) {\n  vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\n  float dist = radius - length(m);\n\n  float t = 0.0;\n  if (dist > v_border)\n    t = 1.0;\n  else if (dist > 0.0)\n    t = dist / v_border;\n\n  gl_FragColor = mix(color0, v_color, t);\n}\n";
      module.exports = e;
    })();
  }
});

// node_modules/sigma/rendering/webgl/shaders/utils.js
var require_utils2 = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;
    function loadShader(type, gl, source) {
      var glType = type === "VERTEX" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;
      var shader = gl.createShader(glType);
      if (shader === null) {
        throw new Error("loadShader: error while creating the shader");
      }
      gl.shaderSource(shader, source);
      gl.compileShader(shader);
      var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
      if (!successfullyCompiled) {
        var infoLog = gl.getShaderInfoLog(shader);
        gl.deleteShader(shader);
        throw new Error("loadShader: error while compiling the shader:\n" + infoLog + "\n" + source);
      }
      return shader;
    }
    function loadVertexShader(gl, source) {
      return loadShader("VERTEX", gl, source);
    }
    exports.loadVertexShader = loadVertexShader;
    function loadFragmentShader(gl, source) {
      return loadShader("FRAGMENT", gl, source);
    }
    exports.loadFragmentShader = loadFragmentShader;
    function loadProgram(gl, shaders) {
      var program = gl.createProgram();
      if (program === null) {
        throw new Error("loadProgram: error while creating the program.");
      }
      var i, l;
      for (i = 0, l = shaders.length; i < l; i++)
        gl.attachShader(program, shaders[i]);
      gl.linkProgram(program);
      var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);
      if (!successfullyLinked) {
        gl.deleteProgram(program);
        throw new Error("loadProgram: error while linking the program.");
      }
      return program;
    }
    exports.loadProgram = loadProgram;
  }
});

// node_modules/sigma/rendering/webgl/programs/common/program.js
var require_program = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/common/program.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AbstractProgram = void 0;
    var utils_1 = require_utils2();
    var AbstractProgram = function() {
      function AbstractProgram2(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {
        this.array = new Float32Array();
        this.points = points;
        this.attributes = attributes;
        this.gl = gl;
        this.vertexShaderSource = vertexShaderSource;
        this.fragmentShaderSource = fragmentShaderSource;
        var buffer = gl.createBuffer();
        if (buffer === null)
          throw new Error("AbstractProgram: error while creating the buffer");
        this.buffer = buffer;
        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
        this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);
        this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);
        this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);
      }
      AbstractProgram2.prototype.bufferData = function() {
        var gl = this.gl;
        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);
      };
      AbstractProgram2.prototype.allocate = function(capacity) {
        this.array = new Float32Array(this.points * this.attributes * capacity);
      };
      AbstractProgram2.prototype.hasNothingToRender = function() {
        return this.array.length === 0;
      };
      return AbstractProgram2;
    }();
    exports.AbstractProgram = AbstractProgram;
  }
});

// node_modules/sigma/rendering/webgl/programs/common/node.js
var require_node = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/common/node.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createNodeCompoundProgram = exports.AbstractNodeProgram = void 0;
    var program_1 = require_program();
    var AbstractNodeProgram = function(_super) {
      __extends(AbstractNodeProgram2, _super);
      function AbstractNodeProgram2(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {
        var _this = _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;
        _this.positionLocation = gl.getAttribLocation(_this.program, "a_position");
        _this.sizeLocation = gl.getAttribLocation(_this.program, "a_size");
        _this.colorLocation = gl.getAttribLocation(_this.program, "a_color");
        var matrixLocation = gl.getUniformLocation(_this.program, "u_matrix");
        if (matrixLocation === null)
          throw new Error("AbstractNodeProgram: error while getting matrixLocation");
        _this.matrixLocation = matrixLocation;
        var ratioLocation = gl.getUniformLocation(_this.program, "u_ratio");
        if (ratioLocation === null)
          throw new Error("AbstractNodeProgram: error while getting ratioLocation");
        _this.ratioLocation = ratioLocation;
        var scaleLocation = gl.getUniformLocation(_this.program, "u_scale");
        if (scaleLocation === null)
          throw new Error("AbstractNodeProgram: error while getting scaleLocation");
        _this.scaleLocation = scaleLocation;
        return _this;
      }
      AbstractNodeProgram2.prototype.bind = function() {
        var gl = this.gl;
        gl.enableVertexAttribArray(this.positionLocation);
        gl.enableVertexAttribArray(this.sizeLocation);
        gl.enableVertexAttribArray(this.colorLocation);
        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 0);
        gl.vertexAttribPointer(this.sizeLocation, 1, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 8);
        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, this.attributes * Float32Array.BYTES_PER_ELEMENT, 12);
      };
      return AbstractNodeProgram2;
    }(program_1.AbstractProgram);
    exports.AbstractNodeProgram = AbstractNodeProgram;
    function createNodeCompoundProgram(programClasses) {
      return function() {
        function NodeCompoundProgram(gl, renderer) {
          this.programs = programClasses.map(function(ProgramClass) {
            return new ProgramClass(gl, renderer);
          });
        }
        NodeCompoundProgram.prototype.bufferData = function() {
          this.programs.forEach(function(program) {
            return program.bufferData();
          });
        };
        NodeCompoundProgram.prototype.allocate = function(capacity) {
          this.programs.forEach(function(program) {
            return program.allocate(capacity);
          });
        };
        NodeCompoundProgram.prototype.bind = function() {
        };
        NodeCompoundProgram.prototype.render = function(params) {
          this.programs.forEach(function(program) {
            return program.render(params);
          });
        };
        NodeCompoundProgram.prototype.process = function(data, hidden, offset) {
          this.programs.forEach(function(program) {
            return program.process(data, hidden, offset);
          });
        };
        return NodeCompoundProgram;
      }();
    }
    exports.createNodeCompoundProgram = createNodeCompoundProgram;
  }
});

// node_modules/sigma/rendering/webgl/programs/node.fast.js
var require_node_fast = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/node.fast.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils();
    var node_fast_vert_glsl_1 = __importDefault(require_node_fast_vert_glsl());
    var node_fast_frag_glsl_1 = __importDefault(require_node_fast_frag_glsl());
    var node_1 = require_node();
    var POINTS = 1;
    var ATTRIBUTES = 4;
    var NodeFastProgram = function(_super) {
      __extends(NodeFastProgram2, _super);
      function NodeFastProgram2(gl) {
        var _this = _super.call(this, gl, node_fast_vert_glsl_1.default, node_fast_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;
        _this.bind();
        return _this;
      }
      NodeFastProgram2.prototype.process = function(data, hidden, offset) {
        var array = this.array;
        var i = offset * POINTS * ATTRIBUTES;
        if (hidden) {
          array[i++] = 0;
          array[i++] = 0;
          array[i++] = 0;
          array[i++] = 0;
          return;
        }
        var color = (0, utils_1.floatColor)(data.color);
        array[i++] = data.x;
        array[i++] = data.y;
        array[i++] = data.size;
        array[i] = color;
      };
      NodeFastProgram2.prototype.render = function(params) {
        if (this.hasNothingToRender())
          return;
        var gl = this.gl;
        var program = this.program;
        gl.useProgram(program);
        gl.uniform1f(this.ratioLocation, 1 / Math.sqrt(params.ratio));
        gl.uniform1f(this.scaleLocation, params.scalingRatio);
        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);
        gl.drawArrays(gl.POINTS, 0, this.array.length / ATTRIBUTES);
      };
      return NodeFastProgram2;
    }(node_1.AbstractNodeProgram);
    exports.default = NodeFastProgram;
  }
});

// node_modules/sigma/rendering/webgl/shaders/edge.vert.glsl.js
var require_edge_vert_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/edge.vert.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var e = { d: (n2, o2) => {
        for (var t in o2)
          e.o(o2, t) && !e.o(n2, t) && Object.defineProperty(n2, t, { enumerable: true, get: o2[t] });
      }, o: (e2, n2) => Object.prototype.hasOwnProperty.call(e2, n2), r: (e2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      } }, n = {};
      e.r(n), e.d(n, { default: () => o });
      const o = 'attribute vec4 a_color;\nattribute vec2 a_normal;\nattribute vec2 a_position;\n\nuniform mat3 u_matrix;\nuniform float u_sqrtZoomRatio;\nuniform float u_correctionRatio;\n\nvarying vec4 v_color;\nvarying vec2 v_normal;\nvarying float v_thickness;\n\nconst float minThickness = 1.7;\nconst float bias = 255.0 / 254.0;\n\nvoid main() {\n  float normalLength = length(a_normal);\n  vec2 unitNormal = a_normal / normalLength;\n\n  // We require edges to be at least `minThickness` pixels thick *on screen*\n  // (so we need to compensate the SQRT zoom ratio):\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\n\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\n  // referential (in a ([0, 1], [0, 1]) space), using our "magic" correction\n  // ratio:\n  float webGLThickness = pixelsThickness * u_correctionRatio;\n\n  // Finally, we adapt the edge thickness to the "SQRT rule" in sigma (so that\n  // items are not too big when zoomed in, and not too small when zoomed out).\n  // The exact computation should be `adapted = value * zoom / sqrt(zoom)`, but\n  // it\'s simpler like this:\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\n\n  // Here is the proper position of the vertex\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness, 1)).xy, 0, 1);\n\n  // For the fragment shader though, we need a thickness that takes the "magic"\n  // correction ratio into account (as in webGLThickness), but so that the\n  // antialiasint effect does not depend on the zoom level. So here\'s yet\n  // another thickness version:\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\n\n  v_normal = unitNormal;\n  v_color = a_color;\n  v_color.a *= bias;\n}\n';
      module.exports = n;
    })();
  }
});

// node_modules/sigma/rendering/webgl/shaders/edge.frag.glsl.js
var require_edge_frag_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/edge.frag.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var e = { d: (n2, t2) => {
        for (var o in t2)
          e.o(t2, o) && !e.o(n2, o) && Object.defineProperty(n2, o, { enumerable: true, get: t2[o] });
      }, o: (e2, n2) => Object.prototype.hasOwnProperty.call(e2, n2), r: (e2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      } }, n = {};
      e.r(n), e.d(n, { default: () => t });
      const t = "precision mediump float;\n\nvarying vec4 v_color;\nvarying vec2 v_normal;\nvarying float v_thickness;\n\nconst float feather = 0.001;\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\n\n\nvoid main(void) {\n  float dist = length(v_normal) * v_thickness;\n\n  float t = smoothstep(\n    v_thickness - feather,\n    v_thickness,\n    dist\n  );\n\n  gl_FragColor = mix(v_color, transparent, t);\n}";
      module.exports = n;
    })();
  }
});

// node_modules/sigma/rendering/webgl/programs/common/edge.js
var require_edge = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/common/edge.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createEdgeCompoundProgram = exports.AbstractEdgeProgram = void 0;
    var program_1 = require_program();
    var AbstractEdgeProgram = function(_super) {
      __extends(AbstractEdgeProgram2, _super);
      function AbstractEdgeProgram2(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {
        return _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;
      }
      return AbstractEdgeProgram2;
    }(program_1.AbstractProgram);
    exports.AbstractEdgeProgram = AbstractEdgeProgram;
    function createEdgeCompoundProgram(programClasses) {
      return function() {
        function EdgeCompoundProgram(gl, renderer) {
          this.programs = programClasses.map(function(ProgramClass) {
            return new ProgramClass(gl, renderer);
          });
        }
        EdgeCompoundProgram.prototype.bufferData = function() {
          this.programs.forEach(function(program) {
            return program.bufferData();
          });
        };
        EdgeCompoundProgram.prototype.allocate = function(capacity) {
          this.programs.forEach(function(program) {
            return program.allocate(capacity);
          });
        };
        EdgeCompoundProgram.prototype.bind = function() {
        };
        EdgeCompoundProgram.prototype.computeIndices = function() {
          this.programs.forEach(function(program) {
            return program.computeIndices();
          });
        };
        EdgeCompoundProgram.prototype.render = function(params) {
          this.programs.forEach(function(program) {
            program.bind();
            program.bufferData();
            program.render(params);
          });
        };
        EdgeCompoundProgram.prototype.process = function(sourceData, targetData, data, hidden, offset) {
          this.programs.forEach(function(program) {
            return program.process(sourceData, targetData, data, hidden, offset);
          });
        };
        return EdgeCompoundProgram;
      }();
    }
    exports.createEdgeCompoundProgram = createEdgeCompoundProgram;
  }
});

// node_modules/sigma/rendering/webgl/programs/edge.js
var require_edge2 = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/edge.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils();
    var edge_vert_glsl_1 = __importDefault(require_edge_vert_glsl());
    var edge_frag_glsl_1 = __importDefault(require_edge_frag_glsl());
    var edge_1 = require_edge();
    var POINTS = 4;
    var ATTRIBUTES = 5;
    var STRIDE = POINTS * ATTRIBUTES;
    var EdgeProgram = function(_super) {
      __extends(EdgeProgram2, _super);
      function EdgeProgram2(gl) {
        var _this = _super.call(this, gl, edge_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;
        var indicesBuffer = gl.createBuffer();
        if (indicesBuffer === null)
          throw new Error("EdgeProgram: error while creating indicesBuffer");
        _this.indicesBuffer = indicesBuffer;
        _this.positionLocation = gl.getAttribLocation(_this.program, "a_position");
        _this.colorLocation = gl.getAttribLocation(_this.program, "a_color");
        _this.normalLocation = gl.getAttribLocation(_this.program, "a_normal");
        var matrixLocation = gl.getUniformLocation(_this.program, "u_matrix");
        if (matrixLocation === null)
          throw new Error("EdgeProgram: error while getting matrixLocation");
        _this.matrixLocation = matrixLocation;
        var correctionRatioLocation = gl.getUniformLocation(_this.program, "u_correctionRatio");
        if (correctionRatioLocation === null)
          throw new Error("EdgeProgram: error while getting correctionRatioLocation");
        _this.correctionRatioLocation = correctionRatioLocation;
        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, "u_sqrtZoomRatio");
        if (sqrtZoomRatioLocation === null)
          throw new Error("EdgeProgram: error while getting sqrtZoomRatioLocation");
        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;
        _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);
        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;
        _this.indicesArray = new _this.IndicesArray();
        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;
        _this.bind();
        return _this;
      }
      EdgeProgram2.prototype.bind = function() {
        var gl = this.gl;
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);
        gl.enableVertexAttribArray(this.positionLocation);
        gl.enableVertexAttribArray(this.normalLocation);
        gl.enableVertexAttribArray(this.colorLocation);
        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);
        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);
        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);
      };
      EdgeProgram2.prototype.computeIndices = function() {
        var l = this.array.length / ATTRIBUTES;
        var size = l + l / 2;
        var indices = new this.IndicesArray(size);
        for (var i = 0, c = 0; i < l; i += 4) {
          indices[c++] = i;
          indices[c++] = i + 1;
          indices[c++] = i + 2;
          indices[c++] = i + 2;
          indices[c++] = i + 1;
          indices[c++] = i + 3;
        }
        this.indicesArray = indices;
      };
      EdgeProgram2.prototype.bufferData = function() {
        _super.prototype.bufferData.call(this);
        var gl = this.gl;
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);
      };
      EdgeProgram2.prototype.process = function(sourceData, targetData, data, hidden, offset) {
        if (hidden) {
          for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)
            this.array[i_1] = 0;
          return;
        }
        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = (0, utils_1.floatColor)(data.color);
        var dx = x2 - x1, dy = y2 - y1;
        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;
        if (len) {
          len = 1 / Math.sqrt(len);
          n1 = -dy * len * thickness;
          n2 = dx * len * thickness;
        }
        var i = POINTS * ATTRIBUTES * offset;
        var array = this.array;
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = color;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i] = color;
      };
      EdgeProgram2.prototype.render = function(params) {
        if (this.hasNothingToRender())
          return;
        var gl = this.gl;
        var program = this.program;
        gl.useProgram(program);
        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);
        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));
        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);
        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);
      };
      return EdgeProgram2;
    }(edge_1.AbstractEdgeProgram);
    exports.default = EdgeProgram;
  }
});

// node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js
var require_edge_arrowHead_vert_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var a = { d: (e2, t2) => {
        for (var o in t2)
          a.o(t2, o) && !a.o(e2, o) && Object.defineProperty(e2, o, { enumerable: true, get: t2[o] });
      }, o: (a2, e2) => Object.prototype.hasOwnProperty.call(a2, e2), r: (a2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(a2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a2, "__esModule", { value: true });
      } }, e = {};
      a.r(e), a.d(e, { default: () => t });
      const t = "attribute vec2 a_position;\nattribute vec2 a_normal;\nattribute float a_radius;\nattribute vec4 a_color;\nattribute vec3 a_barycentric;\n\nuniform mat3 u_matrix;\nuniform float u_sqrtZoomRatio;\nuniform float u_correctionRatio;\n\nvarying vec4 v_color;\n\nconst float minThickness = 1.7;\nconst float bias = 255.0 / 254.0;\nconst float arrowHeadWidthLengthRatio = 0.66;\nconst float arrowHeadLengthThicknessRatio = 2.5;\n\nvoid main() {\n  float normalLength = length(a_normal);\n  vec2 unitNormal = a_normal / normalLength;\n\n  // These first computations are taken from edge.vert.glsl and\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\n  // happening:\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\n  float webGLThickness = pixelsThickness * u_correctionRatio;\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\n  float adaptedWebGLNodeRadius = a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\n  float adaptedWebGLArrowHeadHalfWidth = adaptedWebGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\n\n  float da = a_barycentric.x;\n  float db = a_barycentric.y;\n  float dc = a_barycentric.z;\n\n  vec2 delta = vec2(\n      da * (adaptedWebGLNodeRadius * unitNormal.y)\n    + db * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y + adaptedWebGLArrowHeadHalfWidth * unitNormal.x)\n    + dc * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y - adaptedWebGLArrowHeadHalfWidth * unitNormal.x),\n\n      da * (-adaptedWebGLNodeRadius * unitNormal.x)\n    + db * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x + adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\n    + dc * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x - adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\n  );\n\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\n\n  gl_Position = vec4(position, 0, 1);\n\n  // Extract the color:\n  v_color = a_color;\n  v_color.a *= bias;\n}\n";
      module.exports = e;
    })();
  }
});

// node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js
var require_edge_arrowHead_frag_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var e = { d: (o2, r2) => {
        for (var t in r2)
          e.o(r2, t) && !e.o(o2, t) && Object.defineProperty(o2, t, { enumerable: true, get: r2[t] });
      }, o: (e2, o2) => Object.prototype.hasOwnProperty.call(e2, o2), r: (e2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      } }, o = {};
      e.r(o), e.d(o, { default: () => r });
      const r = "precision mediump float;\n\nvarying vec4 v_color;\n\nvoid main(void) {\n  gl_FragColor = v_color;\n}\n";
      module.exports = o;
    })();
  }
});

// node_modules/sigma/rendering/webgl/programs/edge.arrowHead.js
var require_edge_arrowHead = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/edge.arrowHead.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils();
    var edge_arrowHead_vert_glsl_1 = __importDefault(require_edge_arrowHead_vert_glsl());
    var edge_arrowHead_frag_glsl_1 = __importDefault(require_edge_arrowHead_frag_glsl());
    var edge_1 = require_edge();
    var POINTS = 3;
    var ATTRIBUTES = 9;
    var STRIDE = POINTS * ATTRIBUTES;
    var EdgeArrowHeadProgram = function(_super) {
      __extends(EdgeArrowHeadProgram2, _super);
      function EdgeArrowHeadProgram2(gl) {
        var _this = _super.call(this, gl, edge_arrowHead_vert_glsl_1.default, edge_arrowHead_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;
        _this.positionLocation = gl.getAttribLocation(_this.program, "a_position");
        _this.colorLocation = gl.getAttribLocation(_this.program, "a_color");
        _this.normalLocation = gl.getAttribLocation(_this.program, "a_normal");
        _this.radiusLocation = gl.getAttribLocation(_this.program, "a_radius");
        _this.barycentricLocation = gl.getAttribLocation(_this.program, "a_barycentric");
        var matrixLocation = gl.getUniformLocation(_this.program, "u_matrix");
        if (matrixLocation === null)
          throw new Error("EdgeArrowHeadProgram: error while getting matrixLocation");
        _this.matrixLocation = matrixLocation;
        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, "u_sqrtZoomRatio");
        if (sqrtZoomRatioLocation === null)
          throw new Error("EdgeArrowHeadProgram: error while getting sqrtZoomRatioLocation");
        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;
        var correctionRatioLocation = gl.getUniformLocation(_this.program, "u_correctionRatio");
        if (correctionRatioLocation === null)
          throw new Error("EdgeArrowHeadProgram: error while getting correctionRatioLocation");
        _this.correctionRatioLocation = correctionRatioLocation;
        _this.bind();
        return _this;
      }
      EdgeArrowHeadProgram2.prototype.bind = function() {
        var gl = this.gl;
        gl.enableVertexAttribArray(this.positionLocation);
        gl.enableVertexAttribArray(this.normalLocation);
        gl.enableVertexAttribArray(this.radiusLocation);
        gl.enableVertexAttribArray(this.colorLocation);
        gl.enableVertexAttribArray(this.barycentricLocation);
        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);
        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);
        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);
        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);
        gl.vertexAttribPointer(this.barycentricLocation, 3, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 24);
      };
      EdgeArrowHeadProgram2.prototype.computeIndices = function() {
      };
      EdgeArrowHeadProgram2.prototype.process = function(sourceData, targetData, data, hidden, offset) {
        if (hidden) {
          for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)
            this.array[i_1] = 0;
          return;
        }
        var thickness = data.size || 1, radius = targetData.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = (0, utils_1.floatColor)(data.color);
        var dx = x2 - x1, dy = y2 - y1;
        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;
        if (len) {
          len = 1 / Math.sqrt(len);
          n1 = -dy * len * thickness;
          n2 = dx * len * thickness;
        }
        var i = POINTS * ATTRIBUTES * offset;
        var array = this.array;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = radius;
        array[i++] = color;
        array[i++] = 1;
        array[i++] = 0;
        array[i++] = 0;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = radius;
        array[i++] = color;
        array[i++] = 0;
        array[i++] = 1;
        array[i++] = 0;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = radius;
        array[i++] = color;
        array[i++] = 0;
        array[i++] = 0;
        array[i] = 1;
      };
      EdgeArrowHeadProgram2.prototype.render = function(params) {
        if (this.hasNothingToRender())
          return;
        var gl = this.gl;
        var program = this.program;
        gl.useProgram(program);
        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);
        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));
        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);
        gl.drawArrays(gl.TRIANGLES, 0, this.array.length / ATTRIBUTES);
      };
      return EdgeArrowHeadProgram2;
    }(edge_1.AbstractEdgeProgram);
    exports.default = EdgeArrowHeadProgram;
  }
});

// node_modules/sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js
var require_edge_clamped_vert_glsl = __commonJS({
  "node_modules/sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js"(exports, module) {
    (() => {
      "use strict";
      var e = { d: (o2, n2) => {
        for (var t in n2)
          e.o(n2, t) && !e.o(o2, t) && Object.defineProperty(o2, t, { enumerable: true, get: n2[t] });
      }, o: (e2, o2) => Object.prototype.hasOwnProperty.call(e2, o2), r: (e2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      } }, o = {};
      e.r(o), e.d(o, { default: () => n });
      const n = "attribute vec4 a_color;\nattribute vec2 a_normal;\nattribute vec2 a_position;\nattribute float a_radius;\n\nuniform mat3 u_matrix;\nuniform float u_sqrtZoomRatio;\nuniform float u_correctionRatio;\n\nvarying vec4 v_color;\nvarying vec2 v_normal;\nvarying float v_thickness;\n\nconst float minThickness = 1.7;\nconst float bias = 255.0 / 254.0;\nconst float arrowHeadLengthThicknessRatio = 2.5;\n\nvoid main() {\n  float normalLength = length(a_normal);\n  vec2 unitNormal = a_normal / normalLength;\n\n  // These first computations are taken from edge.vert.glsl. Please read it to\n  // get better comments on what's happening:\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\n  float webGLThickness = pixelsThickness * u_correctionRatio;\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\n\n  // Here, we move the point to leave space for the arrow head:\n  float direction = sign(a_radius);\n  float adaptedWebGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\n\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength);\n\n  // Here is the proper position of the vertex\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness + compensationVector, 1)).xy, 0, 1);\n\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\n\n  v_normal = unitNormal;\n  v_color = a_color;\n  v_color.a *= bias;\n}\n";
      module.exports = o;
    })();
  }
});

// node_modules/sigma/rendering/webgl/programs/edge.clamped.js
var require_edge_clamped = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/edge.clamped.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var edge_1 = require_edge();
    var utils_1 = require_utils();
    var edge_clamped_vert_glsl_1 = __importDefault(require_edge_clamped_vert_glsl());
    var edge_frag_glsl_1 = __importDefault(require_edge_frag_glsl());
    var POINTS = 4;
    var ATTRIBUTES = 6;
    var STRIDE = POINTS * ATTRIBUTES;
    var EdgeClampedProgram = function(_super) {
      __extends(EdgeClampedProgram2, _super);
      function EdgeClampedProgram2(gl) {
        var _this = _super.call(this, gl, edge_clamped_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;
        var indicesBuffer = gl.createBuffer();
        if (indicesBuffer === null)
          throw new Error("EdgeClampedProgram: error while getting resolutionLocation");
        _this.indicesBuffer = indicesBuffer;
        _this.positionLocation = gl.getAttribLocation(_this.program, "a_position");
        _this.colorLocation = gl.getAttribLocation(_this.program, "a_color");
        _this.normalLocation = gl.getAttribLocation(_this.program, "a_normal");
        _this.radiusLocation = gl.getAttribLocation(_this.program, "a_radius");
        var matrixLocation = gl.getUniformLocation(_this.program, "u_matrix");
        if (matrixLocation === null)
          throw new Error("EdgeClampedProgram: error while getting matrixLocation");
        _this.matrixLocation = matrixLocation;
        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, "u_sqrtZoomRatio");
        if (sqrtZoomRatioLocation === null)
          throw new Error("EdgeClampedProgram: error while getting cameraRatioLocation");
        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;
        var correctionRatioLocation = gl.getUniformLocation(_this.program, "u_correctionRatio");
        if (correctionRatioLocation === null)
          throw new Error("EdgeClampedProgram: error while getting viewportRatioLocation");
        _this.correctionRatioLocation = correctionRatioLocation;
        _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);
        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;
        _this.indicesArray = new _this.IndicesArray();
        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;
        _this.bind();
        return _this;
      }
      EdgeClampedProgram2.prototype.bind = function() {
        var gl = this.gl;
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);
        gl.enableVertexAttribArray(this.positionLocation);
        gl.enableVertexAttribArray(this.normalLocation);
        gl.enableVertexAttribArray(this.colorLocation);
        gl.enableVertexAttribArray(this.radiusLocation);
        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);
        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);
        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);
        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);
      };
      EdgeClampedProgram2.prototype.process = function(sourceData, targetData, data, hidden, offset) {
        if (hidden) {
          for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)
            this.array[i_1] = 0;
          return;
        }
        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, radius = targetData.size || 1, color = (0, utils_1.floatColor)(data.color);
        var dx = x2 - x1, dy = y2 - y1;
        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;
        if (len) {
          len = 1 / Math.sqrt(len);
          n1 = -dy * len * thickness;
          n2 = dx * len * thickness;
        }
        var i = POINTS * ATTRIBUTES * offset;
        var array = this.array;
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        array[i++] = 0;
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = color;
        array[i++] = 0;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        array[i++] = radius;
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = color;
        array[i] = -radius;
      };
      EdgeClampedProgram2.prototype.computeIndices = function() {
        var l = this.array.length / ATTRIBUTES;
        var size = l + l / 2;
        var indices = new this.IndicesArray(size);
        for (var i = 0, c = 0; i < l; i += 4) {
          indices[c++] = i;
          indices[c++] = i + 1;
          indices[c++] = i + 2;
          indices[c++] = i + 2;
          indices[c++] = i + 1;
          indices[c++] = i + 3;
        }
        this.indicesArray = indices;
      };
      EdgeClampedProgram2.prototype.bufferData = function() {
        _super.prototype.bufferData.call(this);
        var gl = this.gl;
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);
      };
      EdgeClampedProgram2.prototype.render = function(params) {
        if (this.hasNothingToRender())
          return;
        var gl = this.gl;
        var program = this.program;
        gl.useProgram(program);
        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);
        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));
        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);
        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);
      };
      return EdgeClampedProgram2;
    }(edge_1.AbstractEdgeProgram);
    exports.default = EdgeClampedProgram;
  }
});

// node_modules/sigma/rendering/webgl/programs/edge.arrow.js
var require_edge_arrow = __commonJS({
  "node_modules/sigma/rendering/webgl/programs/edge.arrow.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var edge_1 = require_edge();
    var edge_arrowHead_1 = __importDefault(require_edge_arrowHead());
    var edge_clamped_1 = __importDefault(require_edge_clamped());
    var program = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);
    exports.default = program;
  }
});

// node_modules/sigma/settings.js
var require_settings = __commonJS({
  "node_modules/sigma/settings.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DEFAULT_SETTINGS = exports.validateSettings = void 0;
    var label_1 = __importDefault(require_label());
    var hover_1 = __importDefault(require_hover());
    var edge_label_1 = __importDefault(require_edge_label());
    var node_fast_1 = __importDefault(require_node_fast());
    var edge_1 = __importDefault(require_edge2());
    var edge_arrow_1 = __importDefault(require_edge_arrow());
    function validateSettings(settings) {
      if (typeof settings.labelDensity !== "number" || settings.labelDensity < 0) {
        throw new Error("Settings: invalid `labelDensity`. Expecting a positive number.");
      }
    }
    exports.validateSettings = validateSettings;
    exports.DEFAULT_SETTINGS = {
      hideEdgesOnMove: false,
      hideLabelsOnMove: false,
      renderLabels: true,
      renderEdgeLabels: false,
      enableEdgeClickEvents: false,
      enableEdgeWheelEvents: false,
      enableEdgeHoverEvents: false,
      defaultNodeColor: "#999",
      defaultNodeType: "circle",
      defaultEdgeColor: "#ccc",
      defaultEdgeType: "line",
      labelFont: "Arial",
      labelSize: 14,
      labelWeight: "normal",
      labelColor: { color: "#000" },
      edgeLabelFont: "Arial",
      edgeLabelSize: 14,
      edgeLabelWeight: "normal",
      edgeLabelColor: { attribute: "color" },
      stagePadding: 30,
      labelDensity: 0.07,
      labelGridCellSize: 60,
      labelRenderedSizeThreshold: 6,
      nodeReducer: null,
      edgeReducer: null,
      zIndex: false,
      labelRenderer: label_1.default,
      hoverRenderer: hover_1.default,
      edgeLabelRenderer: edge_label_1.default,
      nodeProgramClasses: {
        circle: node_fast_1.default
      },
      edgeProgramClasses: {
        arrow: edge_arrow_1.default,
        line: edge_1.default
      }
    };
  }
});

// node_modules/sigma/core/captors/touch.js
var require_touch = __commonJS({
  "node_modules/sigma/core/captors/touch.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __read = exports && exports.__read || function(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m)
        return o;
      var i = m.call(o), r, ar = [], e;
      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
          ar.push(r.value);
      } catch (error) {
        e = { error };
      } finally {
        try {
          if (r && !r.done && (m = i["return"]))
            m.call(i);
        } finally {
          if (e)
            throw e.error;
        }
      }
      return ar;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var captor_1 = __importStar(require_captor());
    var DRAG_TIMEOUT = 200;
    var TOUCH_INERTIA_RATIO = 3;
    var TOUCH_INERTIA_DURATION = 200;
    var TouchCaptor = function(_super) {
      __extends(TouchCaptor2, _super);
      function TouchCaptor2(container, renderer) {
        var _this = _super.call(this, container, renderer) || this;
        _this.enabled = true;
        _this.isMoving = false;
        _this.touchMode = 0;
        _this.handleStart = _this.handleStart.bind(_this);
        _this.handleLeave = _this.handleLeave.bind(_this);
        _this.handleMove = _this.handleMove.bind(_this);
        container.addEventListener("touchstart", _this.handleStart, false);
        container.addEventListener("touchend", _this.handleLeave, false);
        container.addEventListener("touchcancel", _this.handleLeave, false);
        container.addEventListener("touchmove", _this.handleMove, false);
        return _this;
      }
      TouchCaptor2.prototype.kill = function() {
        var container = this.container;
        container.removeEventListener("touchstart", this.handleStart);
        container.removeEventListener("touchend", this.handleLeave);
        container.removeEventListener("touchcancel", this.handleLeave);
        container.removeEventListener("touchmove", this.handleMove);
      };
      TouchCaptor2.prototype.getDimensions = function() {
        return {
          width: this.container.offsetWidth,
          height: this.container.offsetHeight
        };
      };
      TouchCaptor2.prototype.dispatchRelatedMouseEvent = function(type, e, position, emitter) {
        var mousePosition = position || (0, captor_1.getPosition)(e.touches[0], this.container);
        var mouseEvent = new MouseEvent(type, {
          clientX: mousePosition.x,
          clientY: mousePosition.y,
          altKey: e.altKey,
          ctrlKey: e.ctrlKey
        });
        (emitter || this.container).dispatchEvent(mouseEvent);
      };
      TouchCaptor2.prototype.handleStart = function(e) {
        var _this = this;
        if (!this.enabled)
          return;
        e.preventDefault();
        if (e.touches.length === 1)
          this.dispatchRelatedMouseEvent("mousedown", e);
        var touches = (0, captor_1.getTouchesArray)(e.touches);
        this.isMoving = true;
        this.touchMode = touches.length;
        this.startCameraState = this.renderer.getCamera().getState();
        this.startTouchesPositions = touches.map(function(touch) {
          return (0, captor_1.getPosition)(touch, _this.container);
        });
        this.lastTouchesPositions = this.startTouchesPositions;
        if (this.touchMode === 2) {
          var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;
          this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);
          this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));
        }
        this.emit("touchdown", (0, captor_1.getTouchCoords)(e, this.container));
      };
      TouchCaptor2.prototype.handleLeave = function(e) {
        if (!this.enabled)
          return;
        e.preventDefault();
        if (e.touches.length === 0 && this.lastTouchesPositions && this.lastTouchesPositions.length) {
          this.dispatchRelatedMouseEvent("mouseup", e, this.lastTouchesPositions[0], document);
          this.dispatchRelatedMouseEvent("click", e, this.lastTouchesPositions[0]);
        }
        if (this.movingTimeout) {
          this.isMoving = false;
          clearTimeout(this.movingTimeout);
        }
        switch (this.touchMode) {
          case 2:
            if (e.touches.length === 1) {
              this.handleStart(e);
              e.preventDefault();
              break;
            }
          case 1:
            if (this.isMoving) {
              var camera = this.renderer.getCamera();
              var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };
              camera.animate({
                x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),
                y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y)
              }, {
                duration: TOUCH_INERTIA_DURATION,
                easing: "quadraticOut"
              });
            }
            this.isMoving = false;
            this.touchMode = 0;
            break;
        }
        this.emit("touchup", (0, captor_1.getTouchCoords)(e, this.container));
      };
      TouchCaptor2.prototype.handleMove = function(e) {
        var _a;
        var _this = this;
        if (!this.enabled)
          return;
        e.preventDefault();
        if (e.touches.length === 1)
          this.dispatchRelatedMouseEvent("mousemove", e);
        var startCameraState = this.startCameraState;
        var touches = (0, captor_1.getTouchesArray)(e.touches);
        var touchesPositions = touches.map(function(touch) {
          return (0, captor_1.getPosition)(touch, _this.container);
        });
        this.lastTouchesPositions = touchesPositions;
        this.isMoving = true;
        if (this.movingTimeout)
          clearTimeout(this.movingTimeout);
        this.movingTimeout = window.setTimeout(function() {
          _this.isMoving = false;
        }, DRAG_TIMEOUT);
        switch (this.touchMode) {
          case 1: {
            var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;
            var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;
            this.renderer.getCamera().setState({
              x: startCameraState.x + xStart - x,
              y: startCameraState.y + yStart - y
            });
            break;
          }
          case 2: {
            var newCameraState = {};
            var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;
            var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;
            var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;
            var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;
            newCameraState.ratio = startCameraState.ratio / ratioDiff;
            newCameraState.angle = startCameraState.angle + angleDiff;
            var dimensions = this.getDimensions();
            var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });
            var smallestDimension = Math.min(dimensions.width, dimensions.height);
            var dx = smallestDimension / dimensions.width;
            var dy = smallestDimension / dimensions.height;
            var ratio = newCameraState.ratio / smallestDimension;
            var x = x0 - smallestDimension / 2 / dx;
            var y = y0 - smallestDimension / 2 / dy;
            _a = __read([
              x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),
              y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle)
            ], 2), x = _a[0], y = _a[1];
            newCameraState.x = touchGraphPosition.x - x * ratio;
            newCameraState.y = touchGraphPosition.y + y * ratio;
            this.renderer.getCamera().setState(newCameraState);
            break;
          }
        }
        this.emit("touchmove", (0, captor_1.getTouchCoords)(e, this.container));
      };
      return TouchCaptor2;
    }(captor_1.default);
    exports.default = TouchCaptor;
  }
});

// node_modules/sigma/utils/edge-collisions.js
var require_edge_collisions = __commonJS({
  "node_modules/sigma/utils/edge-collisions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;
    function isPixelColored(gl, x, y) {
      var pixels = new Uint8Array(4);
      gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);
      return pixels[3] > 0;
    }
    exports.isPixelColored = isPixelColored;
    function doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {
      if (x < xS - thickness && x < xT - thickness)
        return false;
      if (y < yS - thickness && y < yT - thickness)
        return false;
      if (x > xS + thickness && x > xT + thickness)
        return false;
      if (y > yS + thickness && y > yT + thickness)
        return false;
      var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));
      return distance < thickness / 2;
    }
    exports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;
  }
});

// node_modules/sigma/sigma.js
var require_sigma = __commonJS({
  "node_modules/sigma/sigma.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var events_1 = require_events();
    var extent_1 = __importDefault(require_extent());
    var camera_1 = __importDefault(require_camera());
    var mouse_1 = __importDefault(require_mouse());
    var quadtree_1 = __importDefault(require_quadtree());
    var utils_1 = require_utils();
    var labels_1 = require_labels();
    var settings_1 = require_settings();
    var touch_1 = __importDefault(require_touch());
    var matrices_1 = require_matrices();
    var edge_collisions_1 = require_edge_collisions();
    var nodeExtent = extent_1.default.nodeExtent;
    var PIXEL_RATIO = (0, utils_1.getPixelRatio)();
    function applyNodeDefaults(settings, key, data) {
      if (!data.hasOwnProperty("x") || !data.hasOwnProperty("y"))
        throw new Error('Sigma: could not find a valid position (x, y) for node "' + key + '". All your nodes must have a number "x" and "y". Maybe your forgot to apply a layout or your "nodeReducer" is not returning the correct data?');
      if (!data.color)
        data.color = settings.defaultNodeColor;
      if (!data.label && data.label !== "")
        data.label = null;
      if (data.label !== void 0 && data.label !== null)
        data.label = "" + data.label;
      else
        data.label = null;
      if (!data.size)
        data.size = 2;
      if (!data.hasOwnProperty("hidden"))
        data.hidden = false;
      if (!data.hasOwnProperty("highlighted"))
        data.highlighted = false;
      if (!data.type || data.type === "")
        data.type = settings.defaultNodeType;
      if (!data.zIndex)
        data.zIndex = 0;
      return data;
    }
    function applyEdgeDefaults(settings, key, data) {
      if (!data.color)
        data.color = settings.defaultEdgeColor;
      if (!data.label)
        data.label = "";
      if (!data.size)
        data.size = 0.5;
      if (!data.hasOwnProperty("hidden"))
        data.hidden = false;
      if (!data.type || data.type === "")
        data.type = settings.defaultEdgeType;
      if (!data.zIndex)
        data.zIndex = 0;
      return data;
    }
    var Sigma = function(_super) {
      __extends(Sigma2, _super);
      function Sigma2(graph, container, settings) {
        if (settings === void 0) {
          settings = {};
        }
        var _this = _super.call(this) || this;
        _this.elements = {};
        _this.canvasContexts = {};
        _this.webGLContexts = {};
        _this.activeListeners = {};
        _this.quadtree = new quadtree_1.default();
        _this.labelGrid = new labels_1.LabelGrid();
        _this.nodeDataCache = {};
        _this.edgeDataCache = {};
        _this.nodeKeyToIndex = {};
        _this.edgeKeyToIndex = {};
        _this.nodeExtent = { x: [0, 1], y: [0, 1] };
        _this.matrix = (0, matrices_1.identity)();
        _this.invMatrix = (0, matrices_1.identity)();
        _this.correctionRatio = 1;
        _this.customBBox = null;
        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({
          x: [-Infinity, Infinity],
          y: [-Infinity, Infinity]
        });
        _this.cameraSizeRatio = 1;
        _this.width = 0;
        _this.height = 0;
        _this.displayedLabels = /* @__PURE__ */ new Set();
        _this.highlightedNodes = /* @__PURE__ */ new Set();
        _this.hoveredNode = null;
        _this.hoveredEdge = null;
        _this.renderFrame = null;
        _this.renderHighlightedNodesFrame = null;
        _this.needToProcess = false;
        _this.needToSoftProcess = false;
        _this.checkEdgesEventsFrame = null;
        _this.nodePrograms = {};
        _this.hoverNodePrograms = {};
        _this.edgePrograms = {};
        _this.settings = (0, utils_1.assign)({}, settings_1.DEFAULT_SETTINGS, settings);
        (0, settings_1.validateSettings)(_this.settings);
        (0, utils_1.validateGraph)(graph);
        if (!(container instanceof HTMLElement))
          throw new Error("Sigma: container should be an html element.");
        _this.graph = graph;
        _this.container = container;
        _this.initializeCache();
        _this.createWebGLContext("edges", { preserveDrawingBuffer: true });
        _this.createCanvasContext("edgeLabels");
        _this.createWebGLContext("nodes");
        _this.createCanvasContext("labels");
        _this.createCanvasContext("hovers");
        _this.createWebGLContext("hoverNodes");
        _this.createCanvasContext("mouse");
        var gl = _this.webGLContexts.nodes;
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
        gl.enable(gl.BLEND);
        gl = _this.webGLContexts.edges;
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
        gl.enable(gl.BLEND);
        for (var type in _this.settings.nodeProgramClasses) {
          var NodeProgramClass = _this.settings.nodeProgramClasses[type];
          _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);
          _this.hoverNodePrograms[type] = new NodeProgramClass(_this.webGLContexts.hoverNodes, _this);
        }
        for (var type in _this.settings.edgeProgramClasses) {
          var EdgeProgramClass = _this.settings.edgeProgramClasses[type];
          _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);
        }
        _this.resize();
        _this.camera = new camera_1.default();
        _this.bindCameraHandlers();
        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);
        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);
        _this.bindEventHandlers();
        _this.bindGraphHandlers();
        _this.process();
        _this.render();
        return _this;
      }
      Sigma2.prototype.createCanvas = function(id) {
        var canvas = (0, utils_1.createElement)("canvas", {
          position: "absolute"
        }, {
          class: "sigma-" + id
        });
        this.elements[id] = canvas;
        this.container.appendChild(canvas);
        return canvas;
      };
      Sigma2.prototype.createCanvasContext = function(id) {
        var canvas = this.createCanvas(id);
        var contextOptions = {
          preserveDrawingBuffer: false,
          antialias: false
        };
        this.canvasContexts[id] = canvas.getContext("2d", contextOptions);
        return this;
      };
      Sigma2.prototype.createWebGLContext = function(id, options) {
        var canvas = this.createCanvas(id);
        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, options || {});
        var context;
        context = canvas.getContext("webgl2", contextOptions);
        if (!context)
          context = canvas.getContext("webgl", contextOptions);
        if (!context)
          context = canvas.getContext("experimental-webgl", contextOptions);
        this.webGLContexts[id] = context;
        return this;
      };
      Sigma2.prototype.initializeCache = function() {
        var _this = this;
        var graph = this.graph;
        var i = 0;
        graph.forEachNode(function(key) {
          _this.nodeKeyToIndex[key] = i++;
        });
        i = 0;
        graph.forEachEdge(function(key) {
          _this.edgeKeyToIndex[key] = i++;
        });
      };
      Sigma2.prototype.bindCameraHandlers = function() {
        var _this = this;
        this.activeListeners.camera = function() {
          _this._scheduleRefresh();
        };
        this.camera.on("updated", this.activeListeners.camera);
        return this;
      };
      Sigma2.prototype.bindEventHandlers = function() {
        var _this = this;
        this.activeListeners.handleResize = function() {
          _this.needToSoftProcess = true;
          _this._scheduleRefresh();
        };
        window.addEventListener("resize", this.activeListeners.handleResize);
        var mouseIsOnNode = function(mouseX, mouseY, nodeX, nodeY, size) {
          return mouseX > nodeX - size && mouseX < nodeX + size && mouseY > nodeY - size && mouseY < nodeY + size && Math.sqrt(Math.pow(mouseX - nodeX, 2) + Math.pow(mouseY - nodeY, 2)) < size;
        };
        var getQuadNodes = function(mouseX, mouseY) {
          var mouseGraphPosition = _this.viewportToFramedGraph({ x: mouseX, y: mouseY });
          return _this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);
        };
        this.activeListeners.handleMove = function(e) {
          var quadNodes = getQuadNodes(e.x, e.y);
          var minDistance = Infinity, nodeToHover = null;
          for (var i = 0, l = quadNodes.length; i < l; i++) {
            var node = quadNodes[i];
            var data = _this.nodeDataCache[node];
            var pos = _this.framedGraphToViewport(data);
            var size = _this.scaleSize(data.size);
            if (!data.hidden && mouseIsOnNode(e.x, e.y, pos.x, pos.y, size)) {
              var distance = Math.sqrt(Math.pow(e.x - pos.x, 2) + Math.pow(e.y - pos.y, 2));
              if (distance < minDistance) {
                minDistance = distance;
                nodeToHover = node;
              }
            }
          }
          if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {
            if (_this.hoveredNode)
              _this.emit("leaveNode", { node: _this.hoveredNode });
            _this.hoveredNode = nodeToHover;
            _this.emit("enterNode", { node: nodeToHover });
            _this.scheduleHighlightedNodesRender();
            return;
          }
          if (_this.hoveredNode) {
            var data = _this.nodeDataCache[_this.hoveredNode];
            var pos = _this.framedGraphToViewport(data);
            var size = _this.scaleSize(data.size);
            if (!mouseIsOnNode(e.x, e.y, pos.x, pos.y, size)) {
              var node = _this.hoveredNode;
              _this.hoveredNode = null;
              _this.emit("leaveNode", { node });
              return _this.scheduleHighlightedNodesRender();
            }
          }
          var mousePosition = { x: e.x, y: e.y };
          if (_this.settings.enableEdgeHoverEvents === true) {
            _this.checkEdgeHoverEvents(mousePosition);
          } else if (_this.settings.enableEdgeHoverEvents === "debounce") {
            if (!_this.checkEdgesEventsFrame)
              _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function() {
                _this.checkEdgeHoverEvents(mousePosition);
                _this.checkEdgesEventsFrame = null;
              });
          }
        };
        var createMouseListener = function(eventType) {
          return function(e) {
            var baseEvent = {
              event: e,
              preventSigmaDefault: function() {
                this.event.preventSigmaDefault();
              }
            };
            if (_this.hoveredNode)
              return _this.emit(eventType + "Node", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));
            if (eventType === "wheel" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {
              var edge = _this.getEdgeAtPoint(e.x, e.y);
              if (edge)
                return _this.emit(eventType + "Edge", __assign(__assign({}, baseEvent), { edge }));
            }
            return _this.emit(eventType + "Stage", baseEvent);
          };
        };
        this.activeListeners.handleClick = createMouseListener("click");
        this.activeListeners.handleRightClick = createMouseListener("rightClick");
        this.activeListeners.handleDoubleClick = createMouseListener("doubleClick");
        this.activeListeners.handleWheel = createMouseListener("wheel");
        this.activeListeners.handleDown = createMouseListener("down");
        this.mouseCaptor.on("mousemove", this.activeListeners.handleMove);
        this.mouseCaptor.on("click", this.activeListeners.handleClick);
        this.mouseCaptor.on("rightClick", this.activeListeners.handleRightClick);
        this.mouseCaptor.on("doubleClick", this.activeListeners.handleDoubleClick);
        this.mouseCaptor.on("wheel", this.activeListeners.handleWheel);
        this.mouseCaptor.on("mousedown", this.activeListeners.handleDown);
        return this;
      };
      Sigma2.prototype.bindGraphHandlers = function() {
        var _this = this;
        var graph = this.graph;
        this.activeListeners.graphUpdate = function() {
          _this.needToProcess = true;
          _this._scheduleRefresh();
        };
        this.activeListeners.softGraphUpdate = function() {
          _this.needToSoftProcess = true;
          _this._scheduleRefresh();
        };
        this.activeListeners.addNodeGraphUpdate = function(e) {
          _this.nodeKeyToIndex[e.key] = graph.order - 1;
          _this.activeListeners.graphUpdate();
        };
        this.activeListeners.addEdgeGraphUpdate = function(e) {
          _this.nodeKeyToIndex[e.key] = graph.order - 1;
          _this.activeListeners.graphUpdate();
        };
        graph.on("nodeAdded", this.activeListeners.addNodeGraphUpdate);
        graph.on("nodeDropped", this.activeListeners.graphUpdate);
        graph.on("nodeAttributesUpdated", this.activeListeners.softGraphUpdate);
        graph.on("eachNodeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.on("edgeAdded", this.activeListeners.addEdgeGraphUpdate);
        graph.on("edgeDropped", this.activeListeners.graphUpdate);
        graph.on("edgeAttributesUpdated", this.activeListeners.softGraphUpdate);
        graph.on("eachEdgeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.on("edgesCleared", this.activeListeners.graphUpdate);
        graph.on("cleared", this.activeListeners.graphUpdate);
        return this;
      };
      Sigma2.prototype.checkEdgeHoverEvents = function(mousePosition) {
        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(mousePosition.x, mousePosition.y);
        if (edgeToHover !== this.hoveredEdge) {
          if (this.hoveredEdge)
            this.emit("leaveEdge", { edge: this.hoveredEdge });
          if (edgeToHover)
            this.emit("enterEdge", { edge: edgeToHover });
          this.hoveredEdge = edgeToHover;
        }
        return this;
      };
      Sigma2.prototype.getEdgeAtPoint = function(x, y) {
        var _this = this;
        var _a = this, edgeDataCache = _a.edgeDataCache, nodeDataCache = _a.nodeDataCache;
        if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * PIXEL_RATIO, y * PIXEL_RATIO))
          return null;
        var _b = this.viewportToGraph({ x, y }), graphX = _b.x, graphY = _b.y;
        var transformationRatio = 0;
        this.graph.someEdge(function(key, _, sourceId, targetId, _a2, _b2) {
          var xs = _a2.x, ys = _a2.y;
          var xt = _b2.x, yt = _b2.y;
          if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)
            return false;
          if (xs !== xt || ys !== yt) {
            var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));
            var _c = _this.graphToViewport({ x: xs, y: ys }), vp_xs = _c.x, vp_ys = _c.y;
            var _d = _this.graphToViewport({ x: xt, y: yt }), vp_xt = _d.x, vp_yt = _d.y;
            var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));
            transformationRatio = graphLength / viewportLength;
            return true;
          }
        });
        if (!transformationRatio)
          return null;
        return this.graph.findEdge(function(key, edgeAttributes, _s, _t, sourcePosition, targetPosition) {
          if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y, edgeDataCache[key].size * transformationRatio / _this.cameraSizeRatio)) {
            return true;
          }
        }) || null;
      };
      Sigma2.prototype.process = function(keepArrays) {
        var _this = this;
        if (keepArrays === void 0) {
          keepArrays = false;
        }
        var graph = this.graph;
        var settings = this.settings;
        var dimensions = this.getDimensions();
        var nodeZExtent = [Infinity, -Infinity];
        var edgeZExtent = [Infinity, -Infinity];
        this.quadtree.clear();
        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);
        this.highlightedNodes = /* @__PURE__ */ new Set();
        var nodeExtentProperties = ["x", "y"];
        this.nodeExtent = nodeExtent(graph, nodeExtentProperties);
        var nullCamera = new camera_1.default();
        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting("stagePadding") || 0);
        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);
        var nodesPerPrograms = {};
        var nodes2 = graph.nodes();
        for (var i = 0, l = nodes2.length; i < l; i++) {
          var node = nodes2[i];
          var attr = Object.assign({}, graph.getNodeAttributes(node));
          if (settings.nodeReducer)
            attr = settings.nodeReducer(node, attr);
          var data = applyNodeDefaults(this.settings, node, attr);
          nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;
          this.nodeDataCache[node] = data;
          this.normalizationFunction.applyTo(data);
          if (this.settings.zIndex) {
            if (data.zIndex < nodeZExtent[0])
              nodeZExtent[0] = data.zIndex;
            if (data.zIndex > nodeZExtent[1])
              nodeZExtent[1] = data.zIndex;
          }
        }
        for (var type in this.nodePrograms) {
          if (!this.nodePrograms.hasOwnProperty(type)) {
            throw new Error('Sigma: could not find a suitable program for node type "' + type + '"!');
          }
          if (!keepArrays)
            this.nodePrograms[type].allocate(nodesPerPrograms[type] || 0);
          nodesPerPrograms[type] = 0;
        }
        if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1])
          nodes2 = (0, utils_1.zIndexOrdering)(nodeZExtent, function(node2) {
            return _this.nodeDataCache[node2].zIndex;
          }, nodes2);
        for (var i = 0, l = nodes2.length; i < l; i++) {
          var node = nodes2[i];
          var data = this.nodeDataCache[node];
          this.quadtree.add(node, data.x, 1 - data.y, data.size / this.width);
          if (data.label)
            this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));
          this.nodePrograms[data.type].process(data, data.hidden, nodesPerPrograms[data.type]++);
          if (data.highlighted && !data.hidden)
            this.highlightedNodes.add(node);
          this.nodeKeyToIndex[node] = i;
        }
        this.labelGrid.organize();
        var edgesPerPrograms = {};
        var edges2 = graph.edges();
        for (var i = 0, l = edges2.length; i < l; i++) {
          var edge = edges2[i];
          var attr = Object.assign({}, graph.getEdgeAttributes(edge));
          if (settings.edgeReducer)
            attr = settings.edgeReducer(edge, attr);
          var data = applyEdgeDefaults(this.settings, edge, attr);
          edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;
          this.edgeDataCache[edge] = data;
          if (this.settings.zIndex) {
            if (data.zIndex < edgeZExtent[0])
              edgeZExtent[0] = data.zIndex;
            if (data.zIndex > edgeZExtent[1])
              edgeZExtent[1] = data.zIndex;
          }
        }
        for (var type in this.edgePrograms) {
          if (!this.edgePrograms.hasOwnProperty(type)) {
            throw new Error('Sigma: could not find a suitable program for edge type "' + type + '"!');
          }
          if (!keepArrays)
            this.edgePrograms[type].allocate(edgesPerPrograms[type] || 0);
          edgesPerPrograms[type] = 0;
        }
        if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1])
          edges2 = (0, utils_1.zIndexOrdering)(edgeZExtent, function(edge2) {
            return _this.edgeDataCache[edge2].zIndex;
          }, edges2);
        for (var i = 0, l = edges2.length; i < l; i++) {
          var edge = edges2[i];
          var data = this.edgeDataCache[edge];
          var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];
          var hidden = data.hidden || sourceData.hidden || targetData.hidden;
          this.edgePrograms[data.type].process(sourceData, targetData, data, hidden, edgesPerPrograms[data.type]++);
          this.nodeKeyToIndex[edge] = i;
        }
        for (var type in this.edgePrograms) {
          var program = this.edgePrograms[type];
          if (!keepArrays && typeof program.computeIndices === "function")
            program.computeIndices();
        }
        return this;
      };
      Sigma2.prototype._refresh = function() {
        if (this.needToProcess) {
          this.process();
        } else if (this.needToSoftProcess) {
          this.process(true);
        }
        this.needToProcess = false;
        this.needToSoftProcess = false;
        this.render();
        return this;
      };
      Sigma2.prototype._scheduleRefresh = function() {
        var _this = this;
        if (!this.renderFrame) {
          this.renderFrame = (0, utils_1.requestFrame)(function() {
            _this._refresh();
            _this.renderFrame = null;
          });
        }
        return this;
      };
      Sigma2.prototype.renderLabels = function() {
        if (!this.settings.renderLabels)
          return this;
        var cameraState = this.camera.getState();
        var visibleNodes;
        if (cameraState.ratio >= 1) {
          visibleNodes = new Set(this.graph.nodes());
        } else {
          var viewRectangle = this.viewRectangle();
          visibleNodes = new Set(this.quadtree.rectangle(viewRectangle.x1, 1 - viewRectangle.y1, viewRectangle.x2, 1 - viewRectangle.y2, viewRectangle.height));
        }
        var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);
        this.displayedLabels = /* @__PURE__ */ new Set();
        var context = this.canvasContexts.labels;
        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {
          var node = labelsToDisplay[i];
          var data = this.nodeDataCache[node];
          if (data.hidden)
            continue;
          var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;
          var size = this.scaleSize(data.size);
          if (size < this.settings.labelRenderedSizeThreshold)
            continue;
          if (!visibleNodes.has(node))
            continue;
          this.displayedLabels.add(node);
          this.settings.labelRenderer(context, {
            key: node,
            label: data.label,
            color: data.color,
            size,
            x,
            y
          }, this.settings);
        }
        return this;
      };
      Sigma2.prototype.renderEdgeLabels = function() {
        if (!this.settings.renderEdgeLabels)
          return this;
        var context = this.canvasContexts.edgeLabels;
        context.clearRect(0, 0, this.width, this.height);
        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({
          graph: this.graph,
          hoveredNode: this.hoveredNode,
          displayedNodeLabels: this.displayedLabels,
          highlightedNodes: this.highlightedNodes
        });
        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {
          var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];
          if (edgeData.hidden || sourceData.hidden || targetData.hidden) {
            continue;
          }
          this.settings.edgeLabelRenderer(context, {
            key: edge,
            label: edgeData.label,
            color: edgeData.color,
            size: this.scaleSize(edgeData.size)
          }, __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);
        }
        return this;
      };
      Sigma2.prototype.renderHighlightedNodes = function() {
        var _this = this;
        var context = this.canvasContexts.hovers;
        context.clearRect(0, 0, this.width, this.height);
        var render = function(node) {
          var data = _this.nodeDataCache[node];
          var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;
          var size = _this.scaleSize(data.size);
          _this.settings.hoverRenderer(context, {
            key: node,
            label: data.label,
            color: data.color,
            size,
            x,
            y
          }, _this.settings);
        };
        var nodesToRender = [];
        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {
          nodesToRender.push(this.hoveredNode);
        }
        this.highlightedNodes.forEach(function(node) {
          if (node !== _this.hoveredNode)
            nodesToRender.push(node);
        });
        nodesToRender.forEach(function(node) {
          return render(node);
        });
        var nodesPerPrograms = {};
        nodesToRender.forEach(function(node) {
          var type2 = _this.nodeDataCache[node].type;
          nodesPerPrograms[type2] = (nodesPerPrograms[type2] || 0) + 1;
        });
        for (var type in this.hoverNodePrograms) {
          this.hoverNodePrograms[type].allocate(nodesPerPrograms[type] || 0);
          nodesPerPrograms[type] = 0;
        }
        nodesToRender.forEach(function(node) {
          var data = _this.nodeDataCache[node];
          _this.hoverNodePrograms[data.type].process(data, data.hidden, nodesPerPrograms[data.type]++);
        });
        for (var type in this.hoverNodePrograms) {
          var program = this.hoverNodePrograms[type];
          program.bind();
          program.bufferData();
          program.render({
            matrix: this.matrix,
            width: this.width,
            height: this.height,
            ratio: this.camera.ratio,
            correctionRatio: this.correctionRatio / this.camera.ratio,
            scalingRatio: PIXEL_RATIO
          });
        }
      };
      Sigma2.prototype.scheduleHighlightedNodesRender = function() {
        var _this = this;
        if (this.renderHighlightedNodesFrame || this.renderFrame)
          return;
        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function() {
          _this.renderHighlightedNodesFrame = null;
          _this.renderHighlightedNodes();
          _this.renderEdgeLabels();
        });
      };
      Sigma2.prototype.render = function() {
        if (this.renderFrame) {
          (0, utils_1.cancelFrame)(this.renderFrame);
          this.renderFrame = null;
          this.needToProcess = false;
          this.needToSoftProcess = false;
        }
        this.resize();
        this.clear();
        this.updateCachedValues();
        if (!this.graph.order)
          return this;
        var mouseCaptor = this.mouseCaptor;
        var moving = this.camera.isAnimated() || mouseCaptor.isMoving || mouseCaptor.draggedEvents || mouseCaptor.currentWheelDirection;
        var cameraState = this.camera.getState();
        var viewportDimensions = this.getDimensions();
        var graphDimensions = this.getGraphDimensions();
        var padding = this.getSetting("stagePadding") || 0;
        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);
        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);
        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);
        for (var type in this.nodePrograms) {
          var program = this.nodePrograms[type];
          program.bind();
          program.bufferData();
          program.render({
            matrix: this.matrix,
            width: this.width,
            height: this.height,
            ratio: cameraState.ratio,
            correctionRatio: this.correctionRatio / cameraState.ratio,
            scalingRatio: PIXEL_RATIO
          });
        }
        if (!this.settings.hideEdgesOnMove || !moving) {
          for (var type in this.edgePrograms) {
            var program = this.edgePrograms[type];
            program.bind();
            program.bufferData();
            program.render({
              matrix: this.matrix,
              width: this.width,
              height: this.height,
              ratio: cameraState.ratio,
              correctionRatio: this.correctionRatio / cameraState.ratio,
              scalingRatio: PIXEL_RATIO
            });
          }
        }
        if (this.settings.hideLabelsOnMove && moving)
          return this;
        this.renderLabels();
        this.renderEdgeLabels();
        this.renderHighlightedNodes();
        this.emit("afterRender");
        return this;
      };
      Sigma2.prototype.updateCachedValues = function() {
        var ratio = this.camera.getState().ratio;
        this.cameraSizeRatio = Math.sqrt(ratio);
      };
      Sigma2.prototype.getCamera = function() {
        return this.camera;
      };
      Sigma2.prototype.getGraph = function() {
        return this.graph;
      };
      Sigma2.prototype.getMouseCaptor = function() {
        return this.mouseCaptor;
      };
      Sigma2.prototype.getTouchCaptor = function() {
        return this.touchCaptor;
      };
      Sigma2.prototype.getDimensions = function() {
        return { width: this.width, height: this.height };
      };
      Sigma2.prototype.getGraphDimensions = function() {
        var extent = this.customBBox || this.nodeExtent;
        return {
          width: extent.x[1] - extent.x[0] || 1,
          height: extent.y[1] - extent.y[0] || 1
        };
      };
      Sigma2.prototype.getNodeDisplayData = function(key) {
        var node = this.nodeDataCache[key];
        return node ? Object.assign({}, node) : void 0;
      };
      Sigma2.prototype.getEdgeDisplayData = function(key) {
        var edge = this.edgeDataCache[key];
        return edge ? Object.assign({}, edge) : void 0;
      };
      Sigma2.prototype.getSettings = function() {
        return __assign({}, this.settings);
      };
      Sigma2.prototype.getSetting = function(key) {
        return this.settings[key];
      };
      Sigma2.prototype.setSetting = function(key, value) {
        this.settings[key] = value;
        (0, settings_1.validateSettings)(this.settings);
        this.needToProcess = true;
        this._scheduleRefresh();
        return this;
      };
      Sigma2.prototype.updateSetting = function(key, updater) {
        this.settings[key] = updater(this.settings[key]);
        (0, settings_1.validateSettings)(this.settings);
        this.needToProcess = true;
        this._scheduleRefresh();
        return this;
      };
      Sigma2.prototype.resize = function() {
        var previousWidth = this.width, previousHeight = this.height;
        this.width = this.container.offsetWidth;
        this.height = this.container.offsetHeight;
        if (this.width === 0)
          throw new Error("Sigma: container has no width.");
        if (this.height === 0)
          throw new Error("Sigma: container has no height.");
        if (previousWidth === this.width && previousHeight === this.height)
          return this;
        for (var id in this.elements) {
          var element = this.elements[id];
          element.style.width = this.width + "px";
          element.style.height = this.height + "px";
        }
        for (var id in this.canvasContexts) {
          this.elements[id].setAttribute("width", this.width * PIXEL_RATIO + "px");
          this.elements[id].setAttribute("height", this.height * PIXEL_RATIO + "px");
          if (PIXEL_RATIO !== 1)
            this.canvasContexts[id].scale(PIXEL_RATIO, PIXEL_RATIO);
        }
        for (var id in this.webGLContexts) {
          this.elements[id].setAttribute("width", this.width * PIXEL_RATIO + "px");
          this.elements[id].setAttribute("height", this.height * PIXEL_RATIO + "px");
          this.webGLContexts[id].viewport(0, 0, this.width * PIXEL_RATIO, this.height * PIXEL_RATIO);
        }
        return this;
      };
      Sigma2.prototype.clear = function() {
        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);
        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);
        this.webGLContexts.hoverNodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);
        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);
        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);
        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);
        return this;
      };
      Sigma2.prototype.refresh = function() {
        this.needToProcess = true;
        this._refresh();
        return this;
      };
      Sigma2.prototype.scheduleRefresh = function() {
        this.needToProcess = true;
        this._scheduleRefresh();
        return this;
      };
      Sigma2.prototype.getViewportZoomedState = function(viewportTarget, newRatio) {
        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;
        var ratioDiff = newRatio / ratio;
        var center = {
          x: this.width / 2,
          y: this.height / 2
        };
        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);
        var graphCenterPosition = this.viewportToFramedGraph(center);
        return {
          angle,
          x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,
          y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,
          ratio: newRatio
        };
      };
      Sigma2.prototype.viewRectangle = function() {
        var marginX = 0 * this.width / 8, marginY = 0 * this.height / 8;
        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });
        return {
          x1: p1.x,
          y1: p1.y,
          x2: p2.x,
          y2: p2.y,
          height: p2.y - h.y
        };
      };
      Sigma2.prototype.framedGraphToViewport = function(coordinates, override) {
        if (override === void 0) {
          override = {};
        }
        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;
        var matrix = override.matrix ? override.matrix : recomputeMatrix ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting("stagePadding") || 0) : this.matrix;
        var framedGraphVec = [coordinates.x, coordinates.y, 1];
        var viewportVec = (0, matrices_1.multiplyVec)(matrix, framedGraphVec);
        return {
          x: (1 + viewportVec[0]) * this.width / 2,
          y: (1 - viewportVec[1]) * this.height / 2
        };
      };
      Sigma2.prototype.viewportToFramedGraph = function(coordinates, override) {
        if (override === void 0) {
          override = {};
        }
        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;
        var invMatrix = override.matrix ? override.matrix : recomputeMatrix ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting("stagePadding") || 0, true) : this.invMatrix;
        var viewportVec = [coordinates.x / this.width * 2 - 1, 1 - coordinates.y / this.height * 2, 1];
        var framedGraphVec = (0, matrices_1.multiplyVec)(invMatrix, viewportVec);
        return {
          x: framedGraphVec[0],
          y: framedGraphVec[1]
        };
      };
      Sigma2.prototype.viewportToGraph = function(viewportPoint) {
        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint));
      };
      Sigma2.prototype.graphToViewport = function(graphPoint) {
        return this.framedGraphToViewport(this.normalizationFunction(graphPoint));
      };
      Sigma2.prototype.getBBox = function() {
        return nodeExtent(this.graph, ["x", "y"]);
      };
      Sigma2.prototype.getCustomBBox = function() {
        return this.customBBox;
      };
      Sigma2.prototype.setCustomBBox = function(customBBox) {
        this.customBBox = customBBox;
        this._scheduleRefresh();
        return this;
      };
      Sigma2.prototype.kill = function() {
        var graph = this.graph;
        this.emit("kill");
        this.removeAllListeners();
        this.camera.removeListener("updated", this.activeListeners.camera);
        window.removeEventListener("resize", this.activeListeners.handleResize);
        this.mouseCaptor.kill();
        this.touchCaptor.kill();
        graph.removeListener("nodeAdded", this.activeListeners.addNodeGraphUpdate);
        graph.removeListener("nodeDropped", this.activeListeners.graphUpdate);
        graph.removeListener("nodeAttributesUpdated", this.activeListeners.softGraphUpdate);
        graph.removeListener("eachNodeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.removeListener("edgeAdded", this.activeListeners.addEdgeGraphUpdate);
        graph.removeListener("edgeDropped", this.activeListeners.graphUpdate);
        graph.removeListener("edgeAttributesUpdated", this.activeListeners.softGraphUpdate);
        graph.removeListener("eachEdgeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.removeListener("edgesCleared", this.activeListeners.graphUpdate);
        graph.removeListener("cleared", this.activeListeners.graphUpdate);
        this.quadtree = new quadtree_1.default();
        this.nodeDataCache = {};
        this.edgeDataCache = {};
        this.highlightedNodes.clear();
        if (this.renderFrame) {
          (0, utils_1.cancelFrame)(this.renderFrame);
          this.renderFrame = null;
        }
        if (this.renderHighlightedNodesFrame) {
          (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);
          this.renderHighlightedNodesFrame = null;
        }
        var container = this.container;
        while (container.firstChild)
          container.removeChild(container.firstChild);
      };
      Sigma2.prototype.scaleSize = function(size) {
        return size / this.cameraSizeRatio;
      };
      Sigma2.prototype.getCanvases = function() {
        return __assign({}, this.elements);
      };
      return Sigma2;
    }(events_1.EventEmitter);
    exports.default = Sigma;
  }
});

// node_modules/sigma/index.js
var require_sigma2 = __commonJS({
  "node_modules/sigma/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;
    var sigma_1 = __importDefault(require_sigma());
    exports.Sigma = sigma_1.default;
    var camera_1 = __importDefault(require_camera());
    exports.Camera = camera_1.default;
    var quadtree_1 = __importDefault(require_quadtree());
    exports.QuadTree = quadtree_1.default;
    var mouse_1 = __importDefault(require_mouse());
    exports.MouseCaptor = mouse_1.default;
    exports.default = sigma_1.default;
  }
});

// node_modules/graphology/dist/graphology.umd.min.js
var require_graphology_umd_min = __commonJS({
  "node_modules/graphology/dist/graphology.umd.min.js"(exports, module) {
    !function(t, e) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = e() : typeof define == "function" && define.amd ? define(e) : (t = typeof globalThis != "undefined" ? globalThis : t || self).graphology = e();
    }(exports, function() {
      "use strict";
      function t(e2) {
        return t = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t2) {
          return typeof t2;
        } : function(t2) {
          return t2 && typeof Symbol == "function" && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
        }, t(e2);
      }
      function e(t2, e2) {
        t2.prototype = Object.create(e2.prototype), t2.prototype.constructor = t2, r(t2, e2);
      }
      function n(t2) {
        return n = Object.setPrototypeOf ? Object.getPrototypeOf : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, n(t2);
      }
      function r(t2, e2) {
        return r = Object.setPrototypeOf || function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, r(t2, e2);
      }
      function i() {
        if (typeof Reflect == "undefined" || !Reflect.construct)
          return false;
        if (Reflect.construct.sham)
          return false;
        if (typeof Proxy == "function")
          return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (t2) {
          return false;
        }
      }
      function o(t2, e2, n2) {
        return o = i() ? Reflect.construct : function(t3, e3, n3) {
          var i2 = [null];
          i2.push.apply(i2, e3);
          var o2 = new (Function.bind.apply(t3, i2))();
          return n3 && r(o2, n3.prototype), o2;
        }, o.apply(null, arguments);
      }
      function a(t2) {
        var e2 = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
        return a = function(t3) {
          if (t3 === null || (i2 = t3, Function.toString.call(i2).indexOf("[native code]") === -1))
            return t3;
          var i2;
          if (typeof t3 != "function")
            throw new TypeError("Super expression must either be null or a function");
          if (e2 !== void 0) {
            if (e2.has(t3))
              return e2.get(t3);
            e2.set(t3, a2);
          }
          function a2() {
            return o(t3, arguments, n(this).constructor);
          }
          return a2.prototype = Object.create(t3.prototype, { constructor: { value: a2, enumerable: false, writable: true, configurable: true } }), r(a2, t3);
        }, a(t2);
      }
      function u(t2) {
        if (t2 === void 0)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      var c = function() {
        for (var t2 = arguments[0], e2 = 1, n2 = arguments.length; e2 < n2; e2++)
          if (arguments[e2])
            for (var r2 in arguments[e2])
              t2[r2] = arguments[e2][r2];
        return t2;
      };
      function d(t2, e2, n2, r2) {
        var i2 = t2._nodes.get(e2), o2 = null;
        return i2 ? o2 = r2 === "mixed" ? i2.out && i2.out[n2] || i2.undirected && i2.undirected[n2] : r2 === "directed" ? i2.out && i2.out[n2] : i2.undirected && i2.undirected[n2] : o2;
      }
      function s(e2) {
        return e2 !== null && t(e2) === "object" && typeof e2.addUndirectedEdgeWithKey == "function" && typeof e2.dropNode == "function";
      }
      function h(e2) {
        return t(e2) === "object" && e2 !== null && e2.constructor === Object;
      }
      function f(t2) {
        var e2;
        for (e2 in t2)
          return false;
        return true;
      }
      function p(t2, e2, n2) {
        Object.defineProperty(t2, e2, { enumerable: false, configurable: false, writable: true, value: n2 });
      }
      function l(t2, e2, n2) {
        var r2 = { enumerable: true, configurable: true };
        typeof n2 == "function" ? r2.get = n2 : (r2.value = n2, r2.writable = false), Object.defineProperty(t2, e2, r2);
      }
      function g(t2) {
        return !!h(t2) && !(t2.attributes && !Array.isArray(t2.attributes));
      }
      typeof Object.assign == "function" && (c = Object.assign);
      var y, v = { exports: {} }, b = typeof Reflect == "object" ? Reflect : null, w = b && typeof b.apply == "function" ? b.apply : function(t2, e2, n2) {
        return Function.prototype.apply.call(t2, e2, n2);
      };
      y = b && typeof b.ownKeys == "function" ? b.ownKeys : Object.getOwnPropertySymbols ? function(t2) {
        return Object.getOwnPropertyNames(t2).concat(Object.getOwnPropertySymbols(t2));
      } : function(t2) {
        return Object.getOwnPropertyNames(t2);
      };
      var m = Number.isNaN || function(t2) {
        return t2 != t2;
      };
      function _() {
        _.init.call(this);
      }
      v.exports = _, v.exports.once = function(t2, e2) {
        return new Promise(function(n2, r2) {
          function i2(n3) {
            t2.removeListener(e2, o2), r2(n3);
          }
          function o2() {
            typeof t2.removeListener == "function" && t2.removeListener("error", i2), n2([].slice.call(arguments));
          }
          U(t2, e2, o2, { once: true }), e2 !== "error" && function(t3, e3, n3) {
            typeof t3.on == "function" && U(t3, "error", e3, n3);
          }(t2, i2, { once: true });
        });
      }, _.EventEmitter = _, _.prototype._events = void 0, _.prototype._eventsCount = 0, _.prototype._maxListeners = void 0;
      var k = 10;
      function G(t2) {
        if (typeof t2 != "function")
          throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t2);
      }
      function x(t2) {
        return t2._maxListeners === void 0 ? _.defaultMaxListeners : t2._maxListeners;
      }
      function E(t2, e2, n2, r2) {
        var i2, o2, a2, u2;
        if (G(n2), (o2 = t2._events) === void 0 ? (o2 = t2._events = Object.create(null), t2._eventsCount = 0) : (o2.newListener !== void 0 && (t2.emit("newListener", e2, n2.listener ? n2.listener : n2), o2 = t2._events), a2 = o2[e2]), a2 === void 0)
          a2 = o2[e2] = n2, ++t2._eventsCount;
        else if (typeof a2 == "function" ? a2 = o2[e2] = r2 ? [n2, a2] : [a2, n2] : r2 ? a2.unshift(n2) : a2.push(n2), (i2 = x(t2)) > 0 && a2.length > i2 && !a2.warned) {
          a2.warned = true;
          var c2 = new Error("Possible EventEmitter memory leak detected. " + a2.length + " " + String(e2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          c2.name = "MaxListenersExceededWarning", c2.emitter = t2, c2.type = e2, c2.count = a2.length, u2 = c2, console && console.warn && console.warn(u2);
        }
        return t2;
      }
      function S() {
        if (!this.fired)
          return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
      }
      function A(t2, e2, n2) {
        var r2 = { fired: false, wrapFn: void 0, target: t2, type: e2, listener: n2 }, i2 = S.bind(r2);
        return i2.listener = n2, r2.wrapFn = i2, i2;
      }
      function L(t2, e2, n2) {
        var r2 = t2._events;
        if (r2 === void 0)
          return [];
        var i2 = r2[e2];
        return i2 === void 0 ? [] : typeof i2 == "function" ? n2 ? [i2.listener || i2] : [i2] : n2 ? function(t3) {
          for (var e3 = new Array(t3.length), n3 = 0; n3 < e3.length; ++n3)
            e3[n3] = t3[n3].listener || t3[n3];
          return e3;
        }(i2) : N(i2, i2.length);
      }
      function D(t2) {
        var e2 = this._events;
        if (e2 !== void 0) {
          var n2 = e2[t2];
          if (typeof n2 == "function")
            return 1;
          if (n2 !== void 0)
            return n2.length;
        }
        return 0;
      }
      function N(t2, e2) {
        for (var n2 = new Array(e2), r2 = 0; r2 < e2; ++r2)
          n2[r2] = t2[r2];
        return n2;
      }
      function U(t2, e2, n2, r2) {
        if (typeof t2.on == "function")
          r2.once ? t2.once(e2, n2) : t2.on(e2, n2);
        else {
          if (typeof t2.addEventListener != "function")
            throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t2);
          t2.addEventListener(e2, function i2(o2) {
            r2.once && t2.removeEventListener(e2, i2), n2(o2);
          });
        }
      }
      function j(t2) {
        if (typeof t2 != "function")
          throw new Error("obliterator/iterator: expecting a function!");
        this.next = t2;
      }
      Object.defineProperty(_, "defaultMaxListeners", { enumerable: true, get: function() {
        return k;
      }, set: function(t2) {
        if (typeof t2 != "number" || t2 < 0 || m(t2))
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t2 + ".");
        k = t2;
      } }), _.init = function() {
        this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
      }, _.prototype.setMaxListeners = function(t2) {
        if (typeof t2 != "number" || t2 < 0 || m(t2))
          throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t2 + ".");
        return this._maxListeners = t2, this;
      }, _.prototype.getMaxListeners = function() {
        return x(this);
      }, _.prototype.emit = function(t2) {
        for (var e2 = [], n2 = 1; n2 < arguments.length; n2++)
          e2.push(arguments[n2]);
        var r2 = t2 === "error", i2 = this._events;
        if (i2 !== void 0)
          r2 = r2 && i2.error === void 0;
        else if (!r2)
          return false;
        if (r2) {
          var o2;
          if (e2.length > 0 && (o2 = e2[0]), o2 instanceof Error)
            throw o2;
          var a2 = new Error("Unhandled error." + (o2 ? " (" + o2.message + ")" : ""));
          throw a2.context = o2, a2;
        }
        var u2 = i2[t2];
        if (u2 === void 0)
          return false;
        if (typeof u2 == "function")
          w(u2, this, e2);
        else {
          var c2 = u2.length, d2 = N(u2, c2);
          for (n2 = 0; n2 < c2; ++n2)
            w(d2[n2], this, e2);
        }
        return true;
      }, _.prototype.addListener = function(t2, e2) {
        return E(this, t2, e2, false);
      }, _.prototype.on = _.prototype.addListener, _.prototype.prependListener = function(t2, e2) {
        return E(this, t2, e2, true);
      }, _.prototype.once = function(t2, e2) {
        return G(e2), this.on(t2, A(this, t2, e2)), this;
      }, _.prototype.prependOnceListener = function(t2, e2) {
        return G(e2), this.prependListener(t2, A(this, t2, e2)), this;
      }, _.prototype.removeListener = function(t2, e2) {
        var n2, r2, i2, o2, a2;
        if (G(e2), (r2 = this._events) === void 0)
          return this;
        if ((n2 = r2[t2]) === void 0)
          return this;
        if (n2 === e2 || n2.listener === e2)
          --this._eventsCount == 0 ? this._events = Object.create(null) : (delete r2[t2], r2.removeListener && this.emit("removeListener", t2, n2.listener || e2));
        else if (typeof n2 != "function") {
          for (i2 = -1, o2 = n2.length - 1; o2 >= 0; o2--)
            if (n2[o2] === e2 || n2[o2].listener === e2) {
              a2 = n2[o2].listener, i2 = o2;
              break;
            }
          if (i2 < 0)
            return this;
          i2 === 0 ? n2.shift() : function(t3, e3) {
            for (; e3 + 1 < t3.length; e3++)
              t3[e3] = t3[e3 + 1];
            t3.pop();
          }(n2, i2), n2.length === 1 && (r2[t2] = n2[0]), r2.removeListener !== void 0 && this.emit("removeListener", t2, a2 || e2);
        }
        return this;
      }, _.prototype.off = _.prototype.removeListener, _.prototype.removeAllListeners = function(t2) {
        var e2, n2, r2;
        if ((n2 = this._events) === void 0)
          return this;
        if (n2.removeListener === void 0)
          return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : n2[t2] !== void 0 && (--this._eventsCount == 0 ? this._events = Object.create(null) : delete n2[t2]), this;
        if (arguments.length === 0) {
          var i2, o2 = Object.keys(n2);
          for (r2 = 0; r2 < o2.length; ++r2)
            (i2 = o2[r2]) !== "removeListener" && this.removeAllListeners(i2);
          return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
        }
        if (typeof (e2 = n2[t2]) == "function")
          this.removeListener(t2, e2);
        else if (e2 !== void 0)
          for (r2 = e2.length - 1; r2 >= 0; r2--)
            this.removeListener(t2, e2[r2]);
        return this;
      }, _.prototype.listeners = function(t2) {
        return L(this, t2, true);
      }, _.prototype.rawListeners = function(t2) {
        return L(this, t2, false);
      }, _.listenerCount = function(t2, e2) {
        return typeof t2.listenerCount == "function" ? t2.listenerCount(e2) : D.call(t2, e2);
      }, _.prototype.listenerCount = D, _.prototype.eventNames = function() {
        return this._eventsCount > 0 ? y(this._events) : [];
      }, typeof Symbol != "undefined" && (j.prototype[Symbol.iterator] = function() {
        return this;
      }), j.of = function() {
        var t2 = arguments, e2 = t2.length, n2 = 0;
        return new j(function() {
          return n2 >= e2 ? { done: true } : { done: false, value: t2[n2++] };
        });
      }, j.empty = function() {
        return new j(function() {
          return { done: true };
        });
      }, j.fromSequence = function(t2) {
        var e2 = 0, n2 = t2.length;
        return new j(function() {
          return e2 >= n2 ? { done: true } : { done: false, value: t2[e2++] };
        });
      }, j.is = function(t2) {
        return t2 instanceof j || typeof t2 == "object" && t2 !== null && typeof t2.next == "function";
      };
      var O = j, C = {};
      C.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer != "undefined", C.SYMBOL_SUPPORT = typeof Symbol != "undefined";
      var z = O, M = C, P = M.ARRAY_BUFFER_SUPPORT, T = M.SYMBOL_SUPPORT;
      var R = function(t2) {
        var e2 = function(t3) {
          return typeof t3 == "string" || Array.isArray(t3) || P && ArrayBuffer.isView(t3) ? z.fromSequence(t3) : typeof t3 != "object" || t3 === null ? null : T && typeof t3[Symbol.iterator] == "function" ? t3[Symbol.iterator]() : typeof t3.next == "function" ? t3 : null;
        }(t2);
        if (!e2)
          throw new Error("obliterator: target is not iterable nor a valid iterator.");
        return e2;
      }, W = R, K = function(t2, e2) {
        for (var n2, r2 = arguments.length > 1 ? e2 : 1 / 0, i2 = r2 !== 1 / 0 ? new Array(r2) : [], o2 = 0, a2 = W(t2); ; ) {
          if (o2 === r2)
            return i2;
          if ((n2 = a2.next()).done)
            return o2 !== e2 && (i2.length = o2), i2;
          i2[o2++] = n2.value;
        }
      }, I = function(t2) {
        function n2(e2) {
          var n3;
          return (n3 = t2.call(this) || this).name = "GraphError", n3.message = e2, n3;
        }
        return e(n2, t2), n2;
      }(a(Error)), F = function(t2) {
        function n2(e2) {
          var r2;
          return (r2 = t2.call(this, e2) || this).name = "InvalidArgumentsGraphError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(u(r2), n2.prototype.constructor), r2;
        }
        return e(n2, t2), n2;
      }(I), Y = function(t2) {
        function n2(e2) {
          var r2;
          return (r2 = t2.call(this, e2) || this).name = "NotFoundGraphError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(u(r2), n2.prototype.constructor), r2;
        }
        return e(n2, t2), n2;
      }(I), B = function(t2) {
        function n2(e2) {
          var r2;
          return (r2 = t2.call(this, e2) || this).name = "UsageGraphError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(u(r2), n2.prototype.constructor), r2;
        }
        return e(n2, t2), n2;
      }(I);
      function q(t2, e2) {
        this.key = t2, this.attributes = e2, this.clear();
      }
      function J(t2, e2) {
        this.key = t2, this.attributes = e2, this.clear();
      }
      function V(t2, e2) {
        this.key = t2, this.attributes = e2, this.clear();
      }
      function H(t2, e2, n2, r2, i2) {
        this.key = e2, this.attributes = i2, this.undirected = t2, this.source = n2, this.target = r2;
      }
      function Q(t2, e2, n2, r2, i2, o2, a2) {
        var u2, c2, d2 = "out", s2 = "in";
        if (e2 && (d2 = s2 = "undirected"), t2.multi) {
          if ((c2 = (u2 = o2[d2])[i2]) === void 0 && (c2 = /* @__PURE__ */ new Set(), u2[i2] = c2), c2.add(n2), r2 === i2 && e2)
            return;
          (u2 = a2[s2])[r2] === void 0 && (u2[r2] = c2);
        } else {
          if (o2[d2][i2] = n2, r2 === i2 && e2)
            return;
          a2[s2][r2] = n2;
        }
      }
      function X(t2, e2, n2) {
        var r2 = t2.multi, i2 = n2.source, o2 = n2.target, a2 = i2.key, u2 = o2.key, c2 = i2[e2 ? "undirected" : "out"], d2 = e2 ? "undirected" : "in";
        if (u2 in c2)
          if (r2) {
            var s2 = c2[u2];
            s2.size === 1 ? (delete c2[u2], delete o2[d2][a2]) : s2.delete(n2);
          } else
            delete c2[u2];
        r2 || delete o2[d2][a2];
      }
      q.prototype.clear = function() {
        this.inDegree = 0, this.outDegree = 0, this.undirectedDegree = 0, this.directedSelfLoops = 0, this.undirectedSelfLoops = 0, this.in = {}, this.out = {}, this.undirected = {};
      }, J.prototype.clear = function() {
        this.inDegree = 0, this.outDegree = 0, this.directedSelfLoops = 0, this.in = {}, this.out = {};
      }, J.prototype.upgradeToMixed = function() {
        this.undirectedDegree = 0, this.undirectedSelfLoops = 0, this.undirected = {};
      }, V.prototype.clear = function() {
        this.undirectedDegree = 0, this.undirectedSelfLoops = 0, this.undirected = {};
      }, V.prototype.upgradeToMixed = function() {
        this.inDegree = 0, this.outDegree = 0, this.directedSelfLoops = 0, this.in = {}, this.out = {};
      };
      function Z(t2, e2, n2, r2, i2, o2, a2) {
        var u2, c2, d2, s2;
        if (r2 = "" + r2, n2 === 0) {
          if (!(u2 = t2._nodes.get(r2)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(r2, '" node in the graph.'));
          d2 = i2, s2 = o2;
        } else if (n2 === 3) {
          if (i2 = "" + i2, !(c2 = t2._edges.get(i2)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(i2, '" edge in the graph.'));
          var h2 = c2.source.key, f2 = c2.target.key;
          if (r2 === h2)
            u2 = c2.target;
          else {
            if (r2 !== f2)
              throw new Y("Graph.".concat(e2, ': the "').concat(r2, '" node is not attached to the "').concat(i2, '" edge (').concat(h2, ", ").concat(f2, ")."));
            u2 = c2.source;
          }
          d2 = o2, s2 = a2;
        } else {
          if (!(c2 = t2._edges.get(r2)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(r2, '" edge in the graph.'));
          u2 = n2 === 1 ? c2.source : c2.target, d2 = i2, s2 = o2;
        }
        return [u2, d2, s2];
      }
      var $ = [{ name: function(t2) {
        return "get".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2 = Z(this, e2, n2, t3, r2, i2), a2 = o2[0], u2 = o2[1];
          return a2.attributes[u2];
        };
      } }, { name: function(t2) {
        return "get".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          return Z(this, e2, n2, t3, r2)[0].attributes;
        };
      } }, { name: function(t2) {
        return "has".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2 = Z(this, e2, n2, t3, r2, i2), a2 = o2[0], u2 = o2[1];
          return a2.attributes.hasOwnProperty(u2);
        };
      } }, { name: function(t2) {
        return "set".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2, o2) {
          var a2 = Z(this, e2, n2, t3, r2, i2, o2), u2 = a2[0], c2 = a2[1], d2 = a2[2];
          return u2.attributes[c2] = d2, this.emit("nodeAttributesUpdated", { key: u2.key, type: "set", attributes: u2.attributes, name: c2 }), this;
        };
      } }, { name: function(t2) {
        return "update".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2, o2) {
          var a2 = Z(this, e2, n2, t3, r2, i2, o2), u2 = a2[0], c2 = a2[1], d2 = a2[2];
          if (typeof d2 != "function")
            throw new F("Graph.".concat(e2, ": updater should be a function."));
          var s2 = u2.attributes, h2 = d2(s2[c2]);
          return s2[c2] = h2, this.emit("nodeAttributesUpdated", { key: u2.key, type: "set", attributes: u2.attributes, name: c2 }), this;
        };
      } }, { name: function(t2) {
        return "remove".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2 = Z(this, e2, n2, t3, r2, i2), a2 = o2[0], u2 = o2[1];
          return delete a2.attributes[u2], this.emit("nodeAttributesUpdated", { key: a2.key, type: "remove", attributes: a2.attributes, name: u2 }), this;
        };
      } }, { name: function(t2) {
        return "replace".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2 = Z(this, e2, n2, t3, r2, i2), a2 = o2[0], u2 = o2[1];
          if (!h(u2))
            throw new F("Graph.".concat(e2, ": provided attributes are not a plain object."));
          return a2.attributes = u2, this.emit("nodeAttributesUpdated", { key: a2.key, type: "replace", attributes: a2.attributes }), this;
        };
      } }, { name: function(t2) {
        return "merge".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2 = Z(this, e2, n2, t3, r2, i2), a2 = o2[0], u2 = o2[1];
          if (!h(u2))
            throw new F("Graph.".concat(e2, ": provided attributes are not a plain object."));
          return c(a2.attributes, u2), this.emit("nodeAttributesUpdated", { key: a2.key, type: "merge", attributes: a2.attributes, data: u2 }), this;
        };
      } }, { name: function(t2) {
        return "update".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2 = Z(this, e2, n2, t3, r2, i2), a2 = o2[0], u2 = o2[1];
          if (typeof u2 != "function")
            throw new F("Graph.".concat(e2, ": provided updater is not a function."));
          return a2.attributes = u2(a2.attributes), this.emit("nodeAttributesUpdated", { key: a2.key, type: "update", attributes: a2.attributes }), this;
        };
      } }];
      var tt = [{ name: function(t2) {
        return "get".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          var i2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 2) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var o2 = "" + t3, a2 = "" + r2;
            if (r2 = arguments[2], !(i2 = d(this, o2, a2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(o2, '" - "').concat(a2, '").'));
          } else if (t3 = "" + t3, !(i2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (n2 !== "mixed" && i2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return i2.attributes[r2];
        };
      } }, { name: function(t2) {
        return "get".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3) {
          var r2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 1) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var i2 = "" + t3, o2 = "" + arguments[1];
            if (!(r2 = d(this, i2, o2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(i2, '" - "').concat(o2, '").'));
          } else if (t3 = "" + t3, !(r2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (n2 !== "mixed" && r2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return r2.attributes;
        };
      } }, { name: function(t2) {
        return "has".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          var i2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 2) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var o2 = "" + t3, a2 = "" + r2;
            if (r2 = arguments[2], !(i2 = d(this, o2, a2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(o2, '" - "').concat(a2, '").'));
          } else if (t3 = "" + t3, !(i2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (n2 !== "mixed" && i2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return i2.attributes.hasOwnProperty(r2);
        };
      } }, { name: function(t2) {
        return "set".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 3) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var a2 = "" + t3, u2 = "" + r2;
            if (r2 = arguments[2], i2 = arguments[3], !(o2 = d(this, a2, u2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(a2, '" - "').concat(u2, '").'));
          } else if (t3 = "" + t3, !(o2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (n2 !== "mixed" && o2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return o2.attributes[r2] = i2, this.emit("edgeAttributesUpdated", { key: o2.key, type: "set", attributes: o2.attributes, name: r2 }), this;
        };
      } }, { name: function(t2) {
        return "update".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2, i2) {
          var o2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 3) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var a2 = "" + t3, u2 = "" + r2;
            if (r2 = arguments[2], i2 = arguments[3], !(o2 = d(this, a2, u2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(a2, '" - "').concat(u2, '").'));
          } else if (t3 = "" + t3, !(o2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (typeof i2 != "function")
            throw new F("Graph.".concat(e2, ": updater should be a function."));
          if (n2 !== "mixed" && o2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return o2.attributes[r2] = i2(o2.attributes[r2]), this.emit("edgeAttributesUpdated", { key: o2.key, type: "set", attributes: o2.attributes, name: r2 }), this;
        };
      } }, { name: function(t2) {
        return "remove".concat(t2, "Attribute");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          var i2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 2) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var o2 = "" + t3, a2 = "" + r2;
            if (r2 = arguments[2], !(i2 = d(this, o2, a2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(o2, '" - "').concat(a2, '").'));
          } else if (t3 = "" + t3, !(i2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (n2 !== "mixed" && i2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return delete i2.attributes[r2], this.emit("edgeAttributesUpdated", { key: i2.key, type: "remove", attributes: i2.attributes, name: r2 }), this;
        };
      } }, { name: function(t2) {
        return "replace".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          var i2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 2) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var o2 = "" + t3, a2 = "" + r2;
            if (r2 = arguments[2], !(i2 = d(this, o2, a2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(o2, '" - "').concat(a2, '").'));
          } else if (t3 = "" + t3, !(i2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (!h(r2))
            throw new F("Graph.".concat(e2, ": provided attributes are not a plain object."));
          if (n2 !== "mixed" && i2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return i2.attributes = r2, this.emit("edgeAttributesUpdated", { key: i2.key, type: "replace", attributes: i2.attributes }), this;
        };
      } }, { name: function(t2) {
        return "merge".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          var i2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 2) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var o2 = "" + t3, a2 = "" + r2;
            if (r2 = arguments[2], !(i2 = d(this, o2, a2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(o2, '" - "').concat(a2, '").'));
          } else if (t3 = "" + t3, !(i2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (!h(r2))
            throw new F("Graph.".concat(e2, ": provided attributes are not a plain object."));
          if (n2 !== "mixed" && i2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return c(i2.attributes, r2), this.emit("edgeAttributesUpdated", { key: i2.key, type: "merge", attributes: i2.attributes, data: r2 }), this;
        };
      } }, { name: function(t2) {
        return "update".concat(t2, "Attributes");
      }, attacher: function(t2, e2, n2) {
        t2.prototype[e2] = function(t3, r2) {
          var i2;
          if (this.type !== "mixed" && n2 !== "mixed" && n2 !== this.type)
            throw new B("Graph.".concat(e2, ": cannot find this type of edges in your ").concat(this.type, " graph."));
          if (arguments.length > 2) {
            if (this.multi)
              throw new B("Graph.".concat(e2, ": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));
            var o2 = "" + t3, a2 = "" + r2;
            if (r2 = arguments[2], !(i2 = d(this, o2, a2, n2)))
              throw new Y("Graph.".concat(e2, ': could not find an edge for the given path ("').concat(o2, '" - "').concat(a2, '").'));
          } else if (t3 = "" + t3, !(i2 = this._edges.get(t3)))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" edge in the graph.'));
          if (typeof r2 != "function")
            throw new F("Graph.".concat(e2, ": provided updater is not a function."));
          if (n2 !== "mixed" && i2.undirected !== (n2 === "undirected"))
            throw new Y("Graph.".concat(e2, ': could not find the "').concat(t3, '" ').concat(n2, " edge in the graph."));
          return i2.attributes = r2(i2.attributes), this.emit("edgeAttributesUpdated", { key: i2.key, type: "update", attributes: i2.attributes }), this;
        };
      } }];
      var et = O, nt = R, rt = function() {
        var t2 = arguments, e2 = null, n2 = -1;
        return new et(function r2() {
          if (e2 === null) {
            if (++n2 >= t2.length)
              return { done: true };
            e2 = nt(t2[n2]);
          }
          var i2 = e2.next();
          return i2.done ? (e2 = null, r2()) : i2;
        });
      }, it = [{ name: "edges", type: "mixed" }, { name: "inEdges", type: "directed", direction: "in" }, { name: "outEdges", type: "directed", direction: "out" }, { name: "inboundEdges", type: "mixed", direction: "in" }, { name: "outboundEdges", type: "mixed", direction: "out" }, { name: "directedEdges", type: "directed" }, { name: "undirectedEdges", type: "undirected" }];
      function ot(t2, e2) {
        for (var n2 in e2)
          t2.push(e2[n2].key);
      }
      function at(t2, e2) {
        for (var n2 in e2)
          e2[n2].forEach(function(e3) {
            return t2.push(e3.key);
          });
      }
      function ut(t2, e2, n2) {
        for (var r2 in t2)
          if (r2 !== n2) {
            var i2 = t2[r2];
            e2(i2.key, i2.attributes, i2.source.key, i2.target.key, i2.source.attributes, i2.target.attributes, i2.undirected);
          }
      }
      function ct(t2, e2, n2) {
        for (var r2 in t2)
          r2 !== n2 && t2[r2].forEach(function(t3) {
            return e2(t3.key, t3.attributes, t3.source.key, t3.target.key, t3.source.attributes, t3.target.attributes, t3.undirected);
          });
      }
      function dt(t2, e2, n2) {
        for (var r2 in t2)
          if (r2 !== n2) {
            var i2 = t2[r2];
            if (e2(i2.key, i2.attributes, i2.source.key, i2.target.key, i2.source.attributes, i2.target.attributes, i2.undirected))
              return i2.key;
          }
      }
      function st(t2, e2, n2) {
        var r2, i2, o2, a2, u2;
        for (var c2 in t2)
          if (c2 !== n2) {
            for (r2 = t2[c2].values(); (i2 = r2.next()).done !== true; )
              if (a2 = (o2 = i2.value).source, u2 = o2.target, e2(o2.key, o2.attributes, a2.key, u2.key, a2.attributes, u2.attributes, o2.undirected))
                return o2.key;
          }
      }
      function ht(t2, e2) {
        var n2 = Object.keys(t2), r2 = n2.length, i2 = null, o2 = 0;
        return new O(function a2() {
          var u2;
          if (i2) {
            var c2 = i2.next();
            if (c2.done)
              return i2 = null, o2++, a2();
            u2 = c2.value;
          } else {
            if (o2 >= r2)
              return { done: true };
            var d2 = n2[o2];
            if (d2 === e2)
              return o2++, a2();
            if ((u2 = t2[d2]) instanceof Set)
              return i2 = u2.values(), a2();
            o2++;
          }
          return { done: false, value: { edge: u2.key, attributes: u2.attributes, source: u2.source.key, target: u2.target.key, sourceAttributes: u2.source.attributes, targetAttributes: u2.target.attributes, undirected: u2.undirected } };
        });
      }
      function ft(t2, e2, n2) {
        var r2 = e2[n2];
        r2 && t2.push(r2.key);
      }
      function pt(t2, e2, n2) {
        var r2 = e2[n2];
        r2 && r2.forEach(function(e3) {
          return t2.push(e3.key);
        });
      }
      function lt(t2, e2, n2) {
        var r2 = t2[e2];
        if (r2) {
          var i2 = r2.source, o2 = r2.target;
          n2(r2.key, r2.attributes, i2.key, o2.key, i2.attributes, o2.attributes, r2.undirected);
        }
      }
      function gt(t2, e2, n2) {
        var r2 = t2[e2];
        r2 && r2.forEach(function(t3) {
          return n2(t3.key, t3.attributes, t3.source.key, t3.target.key, t3.source.attributes, t3.target.attributes, t3.undirected);
        });
      }
      function yt(t2, e2, n2) {
        var r2 = t2[e2];
        if (r2) {
          var i2 = r2.source, o2 = r2.target;
          return n2(r2.key, r2.attributes, i2.key, o2.key, i2.attributes, o2.attributes, r2.undirected) ? r2.key : void 0;
        }
      }
      function vt(t2, e2, n2) {
        var r2 = t2[e2];
        if (r2) {
          for (var i2, o2, a2 = r2.values(); (i2 = a2.next()).done !== true; )
            if (n2((o2 = i2.value).key, o2.attributes, o2.source.key, o2.target.key, o2.source.attributes, o2.target.attributes, o2.undirected))
              return o2.key;
        }
      }
      function bt(t2, e2) {
        var n2 = t2[e2];
        if (n2 instanceof Set) {
          var r2 = n2.values();
          return new O(function() {
            var t3 = r2.next();
            if (t3.done)
              return t3;
            var e3 = t3.value;
            return { done: false, value: { edge: e3.key, attributes: e3.attributes, source: e3.source.key, target: e3.target.key, sourceAttributes: e3.source.attributes, targetAttributes: e3.target.attributes, undirected: e3.undirected } };
          });
        }
        return O.of([n2.key, n2.attributes, n2.source.key, n2.target.key, n2.source.attributes, n2.target.attributes]);
      }
      function wt(t2, e2) {
        if (t2.size === 0)
          return [];
        if (e2 === "mixed" || e2 === t2.type)
          return typeof Array.from == "function" ? Array.from(t2._edges.keys()) : K(t2._edges.keys(), t2._edges.size);
        for (var n2, r2, i2 = e2 === "undirected" ? t2.undirectedSize : t2.directedSize, o2 = new Array(i2), a2 = e2 === "undirected", u2 = t2._edges.values(), c2 = 0; (n2 = u2.next()).done !== true; )
          (r2 = n2.value).undirected === a2 && (o2[c2++] = r2.key);
        return o2;
      }
      function mt(t2, e2, n2) {
        if (t2.size !== 0) {
          for (var r2, i2, o2 = e2 !== "mixed" && e2 !== t2.type, a2 = e2 === "undirected", u2 = t2._edges.values(); (r2 = u2.next()).done !== true; )
            if (i2 = r2.value, !o2 || i2.undirected === a2) {
              var c2 = i2, d2 = c2.key, s2 = c2.attributes, h2 = c2.source, f2 = c2.target;
              n2(d2, s2, h2.key, f2.key, h2.attributes, f2.attributes, i2.undirected);
            }
        }
      }
      function _t(t2, e2, n2) {
        if (t2.size !== 0) {
          for (var r2, i2, o2 = e2 !== "mixed" && e2 !== t2.type, a2 = e2 === "undirected", u2 = t2._edges.values(); (r2 = u2.next()).done !== true; )
            if (i2 = r2.value, !o2 || i2.undirected === a2) {
              var c2 = i2, d2 = c2.key, s2 = c2.attributes, h2 = c2.source, f2 = c2.target;
              if (n2(d2, s2, h2.key, f2.key, h2.attributes, f2.attributes, i2.undirected))
                return d2;
            }
        }
      }
      function kt(t2, e2) {
        if (t2.size === 0)
          return O.empty();
        var n2 = e2 !== "mixed" && e2 !== t2.type, r2 = e2 === "undirected", i2 = t2._edges.values();
        return new O(function() {
          for (var t3, e3; ; ) {
            if ((t3 = i2.next()).done)
              return t3;
            if (e3 = t3.value, !n2 || e3.undirected === r2)
              break;
          }
          return { value: { edge: e3.key, attributes: e3.attributes, source: e3.source.key, target: e3.target.key, sourceAttributes: e3.source.attributes, targetAttributes: e3.target.attributes, undirected: e3.undirected }, done: false };
        });
      }
      function Gt(t2, e2, n2, r2) {
        var i2 = [], o2 = t2 ? at : ot;
        return e2 !== "undirected" && (n2 !== "out" && o2(i2, r2.in), n2 !== "in" && o2(i2, r2.out), !n2 && r2.directedSelfLoops > 0 && i2.splice(i2.lastIndexOf(r2.key), 1)), e2 !== "directed" && o2(i2, r2.undirected), i2;
      }
      function xt(t2, e2, n2, r2, i2) {
        var o2 = t2 ? ct : ut;
        e2 !== "undirected" && (n2 !== "out" && o2(r2.in, i2), n2 !== "in" && o2(r2.out, i2, n2 ? null : r2.key)), e2 !== "directed" && o2(r2.undirected, i2);
      }
      function Et(t2, e2, n2, r2, i2) {
        var o2, a2 = t2 ? st : dt;
        if (e2 !== "undirected") {
          if (n2 !== "out" && (o2 = a2(r2.in, i2)))
            return o2;
          if (n2 !== "in" && (o2 = a2(r2.out, i2, n2 ? null : r2.key)))
            return o2;
        }
        if (e2 !== "directed" && (o2 = a2(r2.undirected, i2)))
          return o2;
      }
      function St(t2, e2, n2) {
        var r2 = O.empty();
        return t2 !== "undirected" && (e2 !== "out" && n2.in !== void 0 && (r2 = rt(r2, ht(n2.in))), e2 !== "in" && n2.out !== void 0 && (r2 = rt(r2, ht(n2.out, e2 ? null : n2.key)))), t2 !== "directed" && n2.undirected !== void 0 && (r2 = rt(r2, ht(n2.undirected))), r2;
      }
      function At(t2, e2, n2, r2, i2) {
        var o2 = e2 ? pt : ft, a2 = [];
        return t2 !== "undirected" && (r2.in !== void 0 && n2 !== "out" && o2(a2, r2.in, i2), r2.out !== void 0 && n2 !== "in" && o2(a2, r2.out, i2), !n2 && r2.directedSelfLoops > 0 && a2.splice(a2.lastIndexOf(r2.key), 1)), t2 !== "directed" && r2.undirected !== void 0 && o2(a2, r2.undirected, i2), a2;
      }
      function Lt(t2, e2, n2, r2, i2, o2) {
        var a2 = e2 ? gt : lt;
        t2 !== "undirected" && (r2.in !== void 0 && n2 !== "out" && a2(r2.in, i2, o2), r2.key !== i2 && r2.out !== void 0 && n2 !== "in" && a2(r2.out, i2, o2)), t2 !== "directed" && r2.undirected !== void 0 && a2(r2.undirected, i2, o2);
      }
      function Dt(t2, e2, n2, r2, i2, o2) {
        var a2, u2 = e2 ? vt : yt;
        if (t2 !== "undirected") {
          if (r2.in !== void 0 && n2 !== "out" && (a2 = u2(r2.in, i2, o2)))
            return a2;
          if (r2.key !== i2 && r2.out !== void 0 && n2 !== "in" && (a2 = u2(r2.out, i2, o2, n2 ? null : r2.key)))
            return a2;
        }
        if (t2 !== "directed" && r2.undirected !== void 0 && (a2 = u2(r2.undirected, i2, o2)))
          return a2;
      }
      function Nt(t2, e2, n2, r2) {
        var i2 = O.empty();
        return t2 !== "undirected" && (n2.in !== void 0 && e2 !== "out" && r2 in n2.in && (i2 = rt(i2, bt(n2.in, r2))), n2.out !== void 0 && e2 !== "in" && r2 in n2.out && (i2 = rt(i2, bt(n2.out, r2)))), t2 !== "directed" && n2.undirected !== void 0 && r2 in n2.undirected && (i2 = rt(i2, bt(n2.undirected, r2))), i2;
      }
      var Ut = [{ name: "neighbors", type: "mixed" }, { name: "inNeighbors", type: "directed", direction: "in" }, { name: "outNeighbors", type: "directed", direction: "out" }, { name: "inboundNeighbors", type: "mixed", direction: "in" }, { name: "outboundNeighbors", type: "mixed", direction: "out" }, { name: "directedNeighbors", type: "directed" }, { name: "undirectedNeighbors", type: "undirected" }];
      function jt(t2, e2) {
        if (e2 !== void 0)
          for (var n2 in e2)
            t2.add(n2);
      }
      function Ot(t2, e2, n2) {
        for (var r2 in e2) {
          var i2 = e2[r2];
          i2 instanceof Set && (i2 = i2.values().next().value);
          var o2 = i2.source, a2 = i2.target, u2 = o2 === t2 ? a2 : o2;
          n2(u2.key, u2.attributes);
        }
      }
      function Ct(t2, e2, n2, r2) {
        for (var i2 in n2) {
          var o2 = n2[i2];
          o2 instanceof Set && (o2 = o2.values().next().value);
          var a2 = o2.source, u2 = o2.target, c2 = a2 === e2 ? u2 : a2;
          t2.has(c2.key) || (t2.add(c2.key), r2(c2.key, c2.attributes));
        }
      }
      function zt(t2, e2, n2) {
        for (var r2 in e2) {
          var i2 = e2[r2];
          i2 instanceof Set && (i2 = i2.values().next().value);
          var o2 = i2.source, a2 = i2.target, u2 = o2 === t2 ? a2 : o2;
          if (n2(u2.key, u2.attributes))
            return u2.key;
        }
      }
      function Mt(t2, e2, n2, r2) {
        for (var i2 in n2) {
          var o2 = n2[i2];
          o2 instanceof Set && (o2 = o2.values().next().value);
          var a2 = o2.source, u2 = o2.target, c2 = a2 === e2 ? u2 : a2;
          if (!t2.has(c2.key)) {
            if (t2.add(c2.key), r2(c2.key, c2.attributes))
              return c2.key;
          }
        }
      }
      function Pt(t2, e2) {
        var n2 = Object.keys(e2), r2 = n2.length, i2 = 0;
        return new O(function() {
          if (i2 >= r2)
            return { done: true };
          var o2 = e2[n2[i2++]];
          o2 instanceof Set && (o2 = o2.values().next().value);
          var a2 = o2.source, u2 = o2.target, c2 = a2 === t2 ? u2 : a2;
          return { done: false, value: { neighbor: c2.key, attributes: c2.attributes } };
        });
      }
      function Tt(t2, e2, n2) {
        var r2 = Object.keys(n2), i2 = r2.length, o2 = 0;
        return new O(function a2() {
          if (o2 >= i2)
            return { done: true };
          var u2 = n2[r2[o2++]];
          u2 instanceof Set && (u2 = u2.values().next().value);
          var c2 = u2.source, d2 = u2.target, s2 = c2 === e2 ? d2 : c2;
          return t2.has(s2.key) ? a2() : (t2.add(s2.key), { done: false, value: { neighbor: s2.key, attributes: s2.attributes } });
        });
      }
      function Rt(t2, e2) {
        var n2 = e2.name, r2 = e2.type, i2 = e2.direction;
        t2.prototype[n2] = function(t3) {
          if (r2 !== "mixed" && this.type !== "mixed" && r2 !== this.type)
            return [];
          t3 = "" + t3;
          var e3 = this._nodes.get(t3);
          if (e3 === void 0)
            throw new Y("Graph.".concat(n2, ': could not find the "').concat(t3, '" node in the graph.'));
          return function(t4, e4, n3) {
            if (t4 !== "mixed") {
              if (t4 === "undirected")
                return Object.keys(n3.undirected);
              if (typeof e4 == "string")
                return Object.keys(n3[e4]);
            }
            var r3 = /* @__PURE__ */ new Set();
            return t4 !== "undirected" && (e4 !== "out" && jt(r3, n3.in), e4 !== "in" && jt(r3, n3.out)), t4 !== "directed" && jt(r3, n3.undirected), K(r3.values(), r3.size);
          }(r2 === "mixed" ? this.type : r2, i2, e3);
        };
      }
      function Wt(t2, e2) {
        var n2 = e2.name, r2 = e2.type, i2 = e2.direction, o2 = "forEach" + n2[0].toUpperCase() + n2.slice(1, -1);
        t2.prototype[o2] = function(t3, e3) {
          if (r2 === "mixed" || this.type === "mixed" || r2 === this.type) {
            t3 = "" + t3;
            var n3 = this._nodes.get(t3);
            if (n3 === void 0)
              throw new Y("Graph.".concat(o2, ': could not find the "').concat(t3, '" node in the graph.'));
            !function(t4, e4, n4, r3) {
              if (t4 !== "mixed") {
                if (t4 === "undirected")
                  return Ot(n4, n4.undirected, r3);
                if (typeof e4 == "string")
                  return Ot(n4, n4[e4], r3);
              }
              var i3 = /* @__PURE__ */ new Set();
              t4 !== "undirected" && (e4 !== "out" && Ct(i3, n4, n4.in, r3), e4 !== "in" && Ct(i3, n4, n4.out, r3)), t4 !== "directed" && Ct(i3, n4, n4.undirected, r3);
            }(r2 === "mixed" ? this.type : r2, i2, n3, e3);
          }
        };
        var a2 = "map" + n2[0].toUpperCase() + n2.slice(1);
        t2.prototype[a2] = function(t3, e3) {
          var n3 = [];
          return this[o2](t3, function(t4, r3) {
            n3.push(e3(t4, r3));
          }), n3;
        };
        var u2 = "filter" + n2[0].toUpperCase() + n2.slice(1);
        t2.prototype[u2] = function(t3, e3) {
          var n3 = [];
          return this[o2](t3, function(t4, r3) {
            e3(t4, r3) && n3.push(t4);
          }), n3;
        };
        var c2 = "reduce" + n2[0].toUpperCase() + n2.slice(1);
        t2.prototype[c2] = function(t3, e3, n3) {
          if (arguments.length < 3)
            throw new F("Graph.".concat(c2, ": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array."));
          var r3 = n3;
          return this[o2](t3, function(t4, n4) {
            r3 = e3(r3, t4, n4);
          }), r3;
        };
      }
      function Kt(t2, e2) {
        var n2 = e2.name, r2 = e2.type, i2 = e2.direction, o2 = n2[0].toUpperCase() + n2.slice(1, -1), a2 = "find" + o2;
        t2.prototype[a2] = function(t3, e3) {
          if (r2 === "mixed" || this.type === "mixed" || r2 === this.type) {
            t3 = "" + t3;
            var n3 = this._nodes.get(t3);
            if (n3 === void 0)
              throw new Y("Graph.".concat(a2, ': could not find the "').concat(t3, '" node in the graph.'));
            return function(t4, e4, n4, r3) {
              if (t4 !== "mixed") {
                if (t4 === "undirected")
                  return zt(n4, n4.undirected, r3);
                if (typeof e4 == "string")
                  return zt(n4, n4[e4], r3);
              }
              var i3, o3 = /* @__PURE__ */ new Set();
              if (t4 !== "undirected") {
                if (e4 !== "out" && (i3 = Mt(o3, n4, n4.in, r3)))
                  return i3;
                if (e4 !== "in" && (i3 = Mt(o3, n4, n4.out, r3)))
                  return i3;
              }
              if (t4 !== "directed" && (i3 = Mt(o3, n4, n4.undirected, r3)))
                return i3;
            }(r2 === "mixed" ? this.type : r2, i2, n3, e3);
          }
        };
        var u2 = "some" + o2;
        t2.prototype[u2] = function(t3, e3) {
          return !!this[a2](t3, e3);
        };
        var c2 = "every" + o2;
        t2.prototype[c2] = function(t3, e3) {
          return !this[a2](t3, function(t4, n3) {
            return !e3(t4, n3);
          });
        };
      }
      function It(t2, e2) {
        var n2 = e2.name, r2 = e2.type, i2 = e2.direction, o2 = n2.slice(0, -1) + "Entries";
        t2.prototype[o2] = function(t3) {
          if (r2 !== "mixed" && this.type !== "mixed" && r2 !== this.type)
            return O.empty();
          t3 = "" + t3;
          var e3 = this._nodes.get(t3);
          if (e3 === void 0)
            throw new Y("Graph.".concat(o2, ': could not find the "').concat(t3, '" node in the graph.'));
          return function(t4, e4, n3) {
            if (t4 !== "mixed") {
              if (t4 === "undirected")
                return Pt(n3, n3.undirected);
              if (typeof e4 == "string")
                return Pt(n3, n3[e4]);
            }
            var r3 = O.empty(), i3 = /* @__PURE__ */ new Set();
            return t4 !== "undirected" && (e4 !== "out" && (r3 = rt(r3, Tt(i3, n3, n3.in))), e4 !== "in" && (r3 = rt(r3, Tt(i3, n3, n3.out)))), t4 !== "directed" && (r3 = rt(r3, Tt(i3, n3, n3.undirected))), r3;
          }(r2 === "mixed" ? this.type : r2, i2, e3);
        };
      }
      function Ft(t2, e2, n2, r2, i2) {
        for (var o2, a2, u2, c2, d2, s2, h2, f2 = r2._nodes.values(), p2 = r2.type; (o2 = f2.next()).done !== true; ) {
          var l2 = false;
          if (a2 = o2.value, p2 !== "undirected") {
            for (u2 in c2 = a2.out)
              if (s2 = (d2 = c2[u2]).target, l2 = true, h2 = i2(a2.key, s2.key, a2.attributes, s2.attributes, d2.key, d2.attributes, d2.undirected), t2 && h2)
                return d2;
          }
          if (p2 !== "directed") {
            for (u2 in c2 = a2.undirected)
              if (!(e2 && a2.key > u2) && ((s2 = (d2 = c2[u2]).target).key !== u2 && (s2 = d2.source), l2 = true, h2 = i2(a2.key, s2.key, a2.attributes, s2.attributes, d2.key, d2.attributes, d2.undirected), t2 && h2))
                return d2;
          }
          if (n2 && !l2 && (h2 = i2(a2.key, null, a2.attributes, null, null, null, null), t2 && h2))
            return null;
        }
      }
      function Yt(t2, e2, n2, r2, i2) {
        for (var o2, a2, u2, c2, d2, s2, h2, f2, p2, l2 = r2._nodes.values(), g2 = r2.type; (o2 = l2.next()).done !== true; ) {
          var y2 = false;
          if (a2 = o2.value, g2 !== "undirected") {
            for (u2 in s2 = a2.out)
              for (c2 = s2[u2].values(); (d2 = c2.next()).done !== true; )
                if (f2 = (h2 = d2.value).target, y2 = true, p2 = i2(a2.key, f2.key, a2.attributes, f2.attributes, h2.key, h2.attributes, h2.undirected), t2 && p2)
                  return h2;
          }
          if (g2 !== "directed") {
            for (u2 in s2 = a2.undirected)
              if (!(e2 && a2.key > u2)) {
                for (c2 = s2[u2].values(); (d2 = c2.next()).done !== true; )
                  if ((f2 = (h2 = d2.value).target).key !== u2 && (f2 = h2.source), y2 = true, p2 = i2(a2.key, f2.key, a2.attributes, f2.attributes, h2.key, h2.attributes, h2.undirected), t2 && p2)
                    return h2;
              }
          }
          if (n2 && !y2 && (p2 = i2(a2.key, null, a2.attributes, null, null, null, null), t2 && p2))
            return null;
        }
      }
      function Bt(t2, e2) {
        var n2 = { key: t2 };
        return f(e2.attributes) || (n2.attributes = c({}, e2.attributes)), n2;
      }
      function qt(t2, e2) {
        var n2 = { key: t2, source: e2.source.key, target: e2.target.key };
        return f(e2.attributes) || (n2.attributes = c({}, e2.attributes)), e2.undirected && (n2.undirected = true), n2;
      }
      function Jt(t2) {
        return h(t2) ? "key" in t2 ? !("attributes" in t2) || h(t2.attributes) && t2.attributes !== null ? null : "invalid-attributes" : "no-key" : "not-object";
      }
      function Vt(t2) {
        return h(t2) ? "source" in t2 ? "target" in t2 ? !("attributes" in t2) || h(t2.attributes) && t2.attributes !== null ? "undirected" in t2 && typeof t2.undirected != "boolean" ? "invalid-undirected" : null : "invalid-attributes" : "no-target" : "no-source" : "not-object";
      }
      var Ht, Qt = (Ht = 255 & Math.floor(256 * Math.random()), function() {
        return Ht++;
      }), Xt = /* @__PURE__ */ new Set(["directed", "undirected", "mixed"]), Zt = /* @__PURE__ */ new Set(["domain", "_events", "_eventsCount", "_maxListeners"]), $t = { allowSelfLoops: true, multi: false, type: "mixed" };
      function te(t2, e2, n2) {
        var r2 = new t2.NodeDataClass(e2, n2);
        return t2._nodes.set(e2, r2), t2.emit("nodeAdded", { key: e2, attributes: n2 }), r2;
      }
      function ee(t2, e2, n2, r2, i2, o2, a2, u2) {
        if (!r2 && t2.type === "undirected")
          throw new B("Graph.".concat(e2, ": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead."));
        if (r2 && t2.type === "directed")
          throw new B("Graph.".concat(e2, ": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead."));
        if (u2 && !h(u2))
          throw new F("Graph.".concat(e2, ': invalid attributes. Expecting an object but got "').concat(u2, '"'));
        if (o2 = "" + o2, a2 = "" + a2, u2 = u2 || {}, !t2.allowSelfLoops && o2 === a2)
          throw new B("Graph.".concat(e2, ': source & target are the same ("').concat(o2, `"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`));
        var c2 = t2._nodes.get(o2), d2 = t2._nodes.get(a2);
        if (!c2)
          throw new Y("Graph.".concat(e2, ': source node "').concat(o2, '" not found.'));
        if (!d2)
          throw new Y("Graph.".concat(e2, ': target node "').concat(a2, '" not found.'));
        var s2 = { key: null, undirected: r2, source: o2, target: a2, attributes: u2 };
        if (n2)
          i2 = t2._edgeKeyGenerator();
        else if (i2 = "" + i2, t2._edges.has(i2))
          throw new B("Graph.".concat(e2, ': the "').concat(i2, '" edge already exists in the graph.'));
        if (!t2.multi && (r2 ? c2.undirected[a2] !== void 0 : c2.out[a2] !== void 0))
          throw new B("Graph.".concat(e2, ': an edge linking "').concat(o2, '" to "').concat(a2, `" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`));
        var f2 = new H(r2, i2, c2, d2, u2);
        return t2._edges.set(i2, f2), o2 === a2 ? r2 ? (c2.undirectedSelfLoops++, t2._undirectedSelfLoopCount++) : (c2.directedSelfLoops++, t2._directedSelfLoopCount++) : r2 ? (c2.undirectedDegree++, d2.undirectedDegree++) : (c2.outDegree++, d2.inDegree++), Q(t2, r2, f2, o2, a2, c2, d2), r2 ? t2._undirectedSize++ : t2._directedSize++, s2.key = i2, t2.emit("edgeAdded", s2), i2;
      }
      function ne(t2, e2, n2, r2, i2, o2, a2, u2, d2) {
        if (!r2 && t2.type === "undirected")
          throw new B("Graph.".concat(e2, ": you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead."));
        if (r2 && t2.type === "directed")
          throw new B("Graph.".concat(e2, ": you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead."));
        if (u2) {
          if (d2) {
            if (typeof u2 != "function")
              throw new F("Graph.".concat(e2, ': invalid updater function. Expecting a function but got "').concat(u2, '"'));
          } else if (!h(u2))
            throw new F("Graph.".concat(e2, ': invalid attributes. Expecting an object but got "').concat(u2, '"'));
        }
        var s2;
        if (o2 = "" + o2, a2 = "" + a2, d2 && (s2 = u2, u2 = void 0), !t2.allowSelfLoops && o2 === a2)
          throw new B("Graph.".concat(e2, ': source & target are the same ("').concat(o2, `"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`));
        var f2, p2, l2 = t2._nodes.get(o2), g2 = t2._nodes.get(a2);
        if (!n2 && (f2 = t2._edges.get(i2))) {
          if (!(f2.source.key === o2 && f2.target.key === a2 || r2 && f2.source.key === a2 && f2.target.key === o2))
            throw new B("Graph.".concat(e2, ': inconsistency detected when attempting to merge the "').concat(i2, '" edge with "').concat(o2, '" source & "').concat(a2, '" target vs. ("').concat(f2.source.key, '", "').concat(f2.target.key, '").'));
          p2 = f2;
        }
        if (p2 || t2.multi || !l2 || (p2 = r2 ? l2.undirected[a2] : l2.out[a2]), p2) {
          var y2 = [p2.key, false, false, false];
          if (d2 ? !s2 : !u2)
            return y2;
          if (d2) {
            var v2 = p2.attributes;
            p2.attributes = s2(v2), t2.emit("edgeAttributesUpdated", { type: "replace", key: p2.key, attributes: p2.attributes });
          } else
            c(p2.attributes, u2), t2.emit("edgeAttributesUpdated", { type: "merge", key: p2.key, attributes: p2.attributes, data: u2 });
          return y2;
        }
        u2 = u2 || {}, d2 && s2 && (u2 = s2(u2));
        var b2 = { key: null, undirected: r2, source: o2, target: a2, attributes: u2 };
        if (n2)
          i2 = t2._edgeKeyGenerator();
        else if (i2 = "" + i2, t2._edges.has(i2))
          throw new B("Graph.".concat(e2, ': the "').concat(i2, '" edge already exists in the graph.'));
        var w2 = false, m2 = false;
        return l2 || (l2 = te(t2, o2, {}), w2 = true, o2 === a2 && (g2 = l2, m2 = true)), g2 || (g2 = te(t2, a2, {}), m2 = true), f2 = new H(r2, i2, l2, g2, u2), t2._edges.set(i2, f2), o2 === a2 ? r2 ? (l2.undirectedSelfLoops++, t2._undirectedSelfLoopCount++) : (l2.directedSelfLoops++, t2._directedSelfLoopCount++) : r2 ? (l2.undirectedDegree++, g2.undirectedDegree++) : (l2.outDegree++, g2.inDegree++), Q(t2, r2, f2, o2, a2, l2, g2), r2 ? t2._undirectedSize++ : t2._directedSize++, b2.key = i2, t2.emit("edgeAdded", b2), [i2, true, w2, m2];
      }
      var re = function(n2) {
        function r2(t2) {
          var e2;
          if (e2 = n2.call(this) || this, typeof (t2 = c({}, $t, t2)).multi != "boolean")
            throw new F(`Graph.constructor: invalid 'multi' option. Expecting a boolean but got "`.concat(t2.multi, '".'));
          if (!Xt.has(t2.type))
            throw new F(`Graph.constructor: invalid 'type' option. Should be one of "mixed", "directed" or "undirected" but got "`.concat(t2.type, '".'));
          if (typeof t2.allowSelfLoops != "boolean")
            throw new F(`Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got "`.concat(t2.allowSelfLoops, '".'));
          var r3 = t2.type === "mixed" ? q : t2.type === "directed" ? J : V;
          p(u(e2), "NodeDataClass", r3);
          var i3 = Qt(), o2 = 0;
          return p(u(e2), "_attributes", {}), p(u(e2), "_nodes", /* @__PURE__ */ new Map()), p(u(e2), "_edges", /* @__PURE__ */ new Map()), p(u(e2), "_directedSize", 0), p(u(e2), "_undirectedSize", 0), p(u(e2), "_directedSelfLoopCount", 0), p(u(e2), "_undirectedSelfLoopCount", 0), p(u(e2), "_edgeKeyGenerator", function() {
            var t3;
            do {
              t3 = "geid_" + i3 + "_" + o2++;
            } while (e2._edges.has(t3));
            return t3;
          }), p(u(e2), "_options", t2), Zt.forEach(function(t3) {
            return p(u(e2), t3, e2[t3]);
          }), l(u(e2), "order", function() {
            return e2._nodes.size;
          }), l(u(e2), "size", function() {
            return e2._edges.size;
          }), l(u(e2), "directedSize", function() {
            return e2._directedSize;
          }), l(u(e2), "undirectedSize", function() {
            return e2._undirectedSize;
          }), l(u(e2), "selfLoopCount", function() {
            return e2._directedSelfLoopCount + e2._undirectedSelfLoopCount;
          }), l(u(e2), "directedSelfLoopCount", function() {
            return e2._directedSelfLoopCount;
          }), l(u(e2), "undirectedSelfLoopCount", function() {
            return e2._undirectedSelfLoopCount;
          }), l(u(e2), "multi", e2._options.multi), l(u(e2), "type", e2._options.type), l(u(e2), "allowSelfLoops", e2._options.allowSelfLoops), l(u(e2), "implementation", function() {
            return "graphology";
          }), e2;
        }
        e(r2, n2);
        var i2 = r2.prototype;
        return i2._resetInstanceCounters = function() {
          this._directedSize = 0, this._undirectedSize = 0, this._directedSelfLoopCount = 0, this._undirectedSelfLoopCount = 0;
        }, i2.hasNode = function(t2) {
          return this._nodes.has("" + t2);
        }, i2.hasDirectedEdge = function(t2, e2) {
          if (this.type === "undirected")
            return false;
          if (arguments.length === 1) {
            var n3 = "" + t2, r3 = this._edges.get(n3);
            return !!r3 && !r3.undirected;
          }
          if (arguments.length === 2) {
            t2 = "" + t2, e2 = "" + e2;
            var i3 = this._nodes.get(t2);
            if (!i3)
              return false;
            var o2 = i3.out[e2];
            return !!o2 && (!this.multi || !!o2.size);
          }
          throw new F("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length, ", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."));
        }, i2.hasUndirectedEdge = function(t2, e2) {
          if (this.type === "directed")
            return false;
          if (arguments.length === 1) {
            var n3 = "" + t2, r3 = this._edges.get(n3);
            return !!r3 && r3.undirected;
          }
          if (arguments.length === 2) {
            t2 = "" + t2, e2 = "" + e2;
            var i3 = this._nodes.get(t2);
            if (!i3)
              return false;
            var o2 = i3.undirected[e2];
            return !!o2 && (!this.multi || !!o2.size);
          }
          throw new F("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length, ", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."));
        }, i2.hasEdge = function(t2, e2) {
          if (arguments.length === 1) {
            var n3 = "" + t2;
            return this._edges.has(n3);
          }
          if (arguments.length === 2) {
            t2 = "" + t2, e2 = "" + e2;
            var r3 = this._nodes.get(t2);
            if (!r3)
              return false;
            var i3 = r3.out !== void 0 && r3.out[e2];
            return i3 || (i3 = r3.undirected !== void 0 && r3.undirected[e2]), !!i3 && (!this.multi || !!i3.size);
          }
          throw new F("Graph.hasEdge: invalid arity (".concat(arguments.length, ", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."));
        }, i2.directedEdge = function(t2, e2) {
          if (this.type !== "undirected") {
            if (t2 = "" + t2, e2 = "" + e2, this.multi)
              throw new B("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");
            var n3 = this._nodes.get(t2);
            if (!n3)
              throw new Y('Graph.directedEdge: could not find the "'.concat(t2, '" source node in the graph.'));
            if (!this._nodes.has(e2))
              throw new Y('Graph.directedEdge: could not find the "'.concat(e2, '" target node in the graph.'));
            var r3 = n3.out && n3.out[e2] || void 0;
            return r3 ? r3.key : void 0;
          }
        }, i2.undirectedEdge = function(t2, e2) {
          if (this.type !== "directed") {
            if (t2 = "" + t2, e2 = "" + e2, this.multi)
              throw new B("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");
            var n3 = this._nodes.get(t2);
            if (!n3)
              throw new Y('Graph.undirectedEdge: could not find the "'.concat(t2, '" source node in the graph.'));
            if (!this._nodes.has(e2))
              throw new Y('Graph.undirectedEdge: could not find the "'.concat(e2, '" target node in the graph.'));
            var r3 = n3.undirected && n3.undirected[e2] || void 0;
            return r3 ? r3.key : void 0;
          }
        }, i2.edge = function(t2, e2) {
          if (this.multi)
            throw new B("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.edge: could not find the "'.concat(t2, '" source node in the graph.'));
          if (!this._nodes.has(e2))
            throw new Y('Graph.edge: could not find the "'.concat(e2, '" target node in the graph.'));
          var r3 = n3.out && n3.out[e2] || n3.undirected && n3.undirected[e2] || void 0;
          if (r3)
            return r3.key;
        }, i2.areDirectedNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areDirectedNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "undirected" && (e2 in n3.in || e2 in n3.out);
        }, i2.areOutNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areOutNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "undirected" && e2 in n3.out;
        }, i2.areInNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areInNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "undirected" && e2 in n3.in;
        }, i2.areUndirectedNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areUndirectedNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "directed" && e2 in n3.undirected;
        }, i2.areNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "undirected" && (e2 in n3.in || e2 in n3.out) || this.type !== "directed" && e2 in n3.undirected;
        }, i2.areInboundNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areInboundNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "undirected" && e2 in n3.in || this.type !== "directed" && e2 in n3.undirected;
        }, i2.areOutboundNeighbors = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.areOutboundNeighbors: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type !== "undirected" && e2 in n3.out || this.type !== "directed" && e2 in n3.undirected;
        }, i2.inDegree = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.inDegree: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type === "undirected" ? 0 : e2.inDegree + e2.directedSelfLoops;
        }, i2.outDegree = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.outDegree: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type === "undirected" ? 0 : e2.outDegree + e2.directedSelfLoops;
        }, i2.directedDegree = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.directedDegree: could not find the "'.concat(t2, '" node in the graph.'));
          if (this.type === "undirected")
            return 0;
          var n3 = e2.directedSelfLoops;
          return e2.inDegree + n3 + (e2.outDegree + n3);
        }, i2.undirectedDegree = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.undirectedDegree: could not find the "'.concat(t2, '" node in the graph.'));
          if (this.type === "directed")
            return 0;
          var n3 = e2.undirectedSelfLoops;
          return e2.undirectedDegree + 2 * n3;
        }, i2.degree = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.degree: could not find the "'.concat(t2, '" node in the graph.'));
          var n3 = 0;
          return this.type !== "directed" && (n3 += e2.undirectedDegree + 2 * e2.undirectedSelfLoops), this.type !== "undirected" && (n3 += e2.inDegree + e2.outDegree + 2 * e2.directedSelfLoops), n3;
        }, i2.inDegreeWithoutSelfLoops = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.inDegreeWithoutSelfLoops: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type === "undirected" ? 0 : e2.inDegree;
        }, i2.outDegreeWithoutSelfLoops = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.outDegreeWithoutSelfLoops: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type === "undirected" ? 0 : e2.outDegree;
        }, i2.directedDegreeWithoutSelfLoops = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.directedDegreeWithoutSelfLoops: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type === "undirected" ? 0 : e2.inDegree + e2.outDegree;
        }, i2.undirectedDegreeWithoutSelfLoops = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.undirectedDegreeWithoutSelfLoops: could not find the "'.concat(t2, '" node in the graph.'));
          return this.type === "directed" ? 0 : e2.undirectedDegree;
        }, i2.degreeWithoutSelfLoops = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.degreeWithoutSelfLoops: could not find the "'.concat(t2, '" node in the graph.'));
          var n3 = 0;
          return this.type !== "directed" && (n3 += e2.undirectedDegree), this.type !== "undirected" && (n3 += e2.inDegree + e2.outDegree), n3;
        }, i2.source = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.source: could not find the "'.concat(t2, '" edge in the graph.'));
          return e2.source.key;
        }, i2.target = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.target: could not find the "'.concat(t2, '" edge in the graph.'));
          return e2.target.key;
        }, i2.extremities = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.extremities: could not find the "'.concat(t2, '" edge in the graph.'));
          return [e2.source.key, e2.target.key];
        }, i2.opposite = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._edges.get(e2);
          if (!n3)
            throw new Y('Graph.opposite: could not find the "'.concat(e2, '" edge in the graph.'));
          var r3 = n3.source.key, i3 = n3.target.key;
          if (t2 === r3)
            return i3;
          if (t2 === i3)
            return r3;
          throw new Y('Graph.opposite: the "'.concat(t2, '" node is not attached to the "').concat(e2, '" edge (').concat(r3, ", ").concat(i3, ")."));
        }, i2.hasExtremity = function(t2, e2) {
          t2 = "" + t2, e2 = "" + e2;
          var n3 = this._edges.get(t2);
          if (!n3)
            throw new Y('Graph.hasExtremity: could not find the "'.concat(t2, '" edge in the graph.'));
          return n3.source.key === e2 || n3.target.key === e2;
        }, i2.isUndirected = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.isUndirected: could not find the "'.concat(t2, '" edge in the graph.'));
          return e2.undirected;
        }, i2.isDirected = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.isDirected: could not find the "'.concat(t2, '" edge in the graph.'));
          return !e2.undirected;
        }, i2.isSelfLoop = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.isSelfLoop: could not find the "'.concat(t2, '" edge in the graph.'));
          return e2.source === e2.target;
        }, i2.addNode = function(t2, e2) {
          var n3 = function(t3, e3, n4) {
            if (n4 && !h(n4))
              throw new F('Graph.addNode: invalid attributes. Expecting an object but got "'.concat(n4, '"'));
            if (e3 = "" + e3, n4 = n4 || {}, t3._nodes.has(e3))
              throw new B('Graph.addNode: the "'.concat(e3, '" node already exist in the graph.'));
            var r3 = new t3.NodeDataClass(e3, n4);
            return t3._nodes.set(e3, r3), t3.emit("nodeAdded", { key: e3, attributes: n4 }), r3;
          }(this, t2, e2);
          return n3.key;
        }, i2.mergeNode = function(t2, e2) {
          if (e2 && !h(e2))
            throw new F('Graph.mergeNode: invalid attributes. Expecting an object but got "'.concat(e2, '"'));
          t2 = "" + t2, e2 = e2 || {};
          var n3 = this._nodes.get(t2);
          return n3 ? (e2 && (c(n3.attributes, e2), this.emit("nodeAttributesUpdated", { type: "merge", key: t2, attributes: n3.attributes, data: e2 })), [t2, false]) : (n3 = new this.NodeDataClass(t2, e2), this._nodes.set(t2, n3), this.emit("nodeAdded", { key: t2, attributes: e2 }), [t2, true]);
        }, i2.updateNode = function(t2, e2) {
          if (e2 && typeof e2 != "function")
            throw new F('Graph.updateNode: invalid updater function. Expecting a function but got "'.concat(e2, '"'));
          t2 = "" + t2;
          var n3 = this._nodes.get(t2);
          if (n3) {
            if (e2) {
              var r3 = n3.attributes;
              n3.attributes = e2(r3), this.emit("nodeAttributesUpdated", { type: "replace", key: t2, attributes: n3.attributes });
            }
            return [t2, false];
          }
          var i3 = e2 ? e2({}) : {};
          return n3 = new this.NodeDataClass(t2, i3), this._nodes.set(t2, n3), this.emit("nodeAdded", { key: t2, attributes: i3 }), [t2, true];
        }, i2.dropNode = function(t2) {
          var e2 = this;
          t2 = "" + t2;
          var n3 = this._nodes.get(t2);
          if (!n3)
            throw new Y('Graph.dropNode: could not find the "'.concat(t2, '" node in the graph.'));
          this.forEachEdge(t2, function(t3) {
            e2.dropEdge(t3);
          }), this._nodes.delete(t2), this.emit("nodeDropped", { key: t2, attributes: n3.attributes });
        }, i2.dropEdge = function(t2) {
          var e2;
          if (arguments.length > 1) {
            var n3 = "" + arguments[0], r3 = "" + arguments[1];
            if (!(e2 = d(this, n3, r3, this.type)))
              throw new Y('Graph.dropEdge: could not find the "'.concat(n3, '" -> "').concat(r3, '" edge in the graph.'));
          } else if (t2 = "" + t2, !(e2 = this._edges.get(t2)))
            throw new Y('Graph.dropEdge: could not find the "'.concat(t2, '" edge in the graph.'));
          this._edges.delete(e2.key);
          var i3 = e2, o2 = i3.source, a2 = i3.target, u2 = i3.attributes, c2 = e2.undirected;
          return o2 === a2 ? c2 ? (o2.undirectedSelfLoops--, this._undirectedSelfLoopCount--) : (o2.directedSelfLoops--, this._directedSelfLoopCount--) : c2 ? (o2.undirectedDegree--, a2.undirectedDegree--) : (o2.outDegree--, a2.inDegree--), X(this, c2, e2), c2 ? this._undirectedSize-- : this._directedSize--, this.emit("edgeDropped", { key: t2, attributes: u2, source: o2.key, target: a2.key, undirected: c2 }), this;
        }, i2.clear = function() {
          this._edges.clear(), this._nodes.clear(), this._resetInstanceCounters(), this.emit("cleared");
        }, i2.clearEdges = function() {
          !function(t2) {
            for (var e2, n3 = t2._nodes.values(); (e2 = n3.next()).done !== true; )
              e2.value.clear();
          }(this), this._edges.clear(), this._resetInstanceCounters(), this.emit("edgesCleared");
        }, i2.getAttribute = function(t2) {
          return this._attributes[t2];
        }, i2.getAttributes = function() {
          return this._attributes;
        }, i2.hasAttribute = function(t2) {
          return this._attributes.hasOwnProperty(t2);
        }, i2.setAttribute = function(t2, e2) {
          return this._attributes[t2] = e2, this.emit("attributesUpdated", { type: "set", attributes: this._attributes, name: t2 }), this;
        }, i2.updateAttribute = function(t2, e2) {
          if (typeof e2 != "function")
            throw new F("Graph.updateAttribute: updater should be a function.");
          var n3 = this._attributes[t2];
          return this._attributes[t2] = e2(n3), this.emit("attributesUpdated", { type: "set", attributes: this._attributes, name: t2 }), this;
        }, i2.removeAttribute = function(t2) {
          return delete this._attributes[t2], this.emit("attributesUpdated", { type: "remove", attributes: this._attributes, name: t2 }), this;
        }, i2.replaceAttributes = function(t2) {
          if (!h(t2))
            throw new F("Graph.replaceAttributes: provided attributes are not a plain object.");
          return this._attributes = t2, this.emit("attributesUpdated", { type: "replace", attributes: this._attributes }), this;
        }, i2.mergeAttributes = function(t2) {
          if (!h(t2))
            throw new F("Graph.mergeAttributes: provided attributes are not a plain object.");
          return c(this._attributes, t2), this.emit("attributesUpdated", { type: "merge", attributes: this._attributes, data: t2 }), this;
        }, i2.updateAttributes = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.updateAttributes: provided updater is not a function.");
          return this._attributes = t2(this._attributes), this.emit("attributesUpdated", { type: "update", attributes: this._attributes }), this;
        }, i2.updateEachNodeAttributes = function(t2, e2) {
          if (typeof t2 != "function")
            throw new F("Graph.updateEachNodeAttributes: expecting an updater function.");
          if (e2 && !g(e2))
            throw new F("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");
          for (var n3, r3, i3 = this._nodes.values(); (n3 = i3.next()).done !== true; )
            (r3 = n3.value).attributes = t2(r3.key, r3.attributes);
          this.emit("eachNodeAttributesUpdated", { hints: e2 || null });
        }, i2.updateEachEdgeAttributes = function(t2, e2) {
          if (typeof t2 != "function")
            throw new F("Graph.updateEachEdgeAttributes: expecting an updater function.");
          if (e2 && !g(e2))
            throw new F("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");
          for (var n3, r3, i3, o2, a2 = this._edges.values(); (n3 = a2.next()).done !== true; )
            i3 = (r3 = n3.value).source, o2 = r3.target, r3.attributes = t2(r3.key, r3.attributes, i3.key, o2.key, i3.attributes, o2.attributes, r3.undirected);
          this.emit("eachEdgeAttributesUpdated", { hints: e2 || null });
        }, i2.forEachAdjacencyEntry = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.forEachAdjacencyEntry: expecting a callback.");
          this.multi ? Yt(false, false, false, this, t2) : Ft(false, false, false, this, t2);
        }, i2.forEachAdjacencyEntryWithOrphans = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");
          this.multi ? Yt(false, false, true, this, t2) : Ft(false, false, true, this, t2);
        }, i2.forEachAssymetricAdjacencyEntry = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");
          this.multi ? Yt(false, true, false, this, t2) : Ft(false, true, false, this, t2);
        }, i2.forEachAssymetricAdjacencyEntryWithOrphans = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");
          this.multi ? Yt(false, true, true, this, t2) : Ft(false, true, true, this, t2);
        }, i2.nodes = function() {
          return typeof Array.from == "function" ? Array.from(this._nodes.keys()) : K(this._nodes.keys(), this._nodes.size);
        }, i2.forEachNode = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.forEachNode: expecting a callback.");
          for (var e2, n3, r3 = this._nodes.values(); (e2 = r3.next()).done !== true; )
            t2((n3 = e2.value).key, n3.attributes);
        }, i2.findNode = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.findNode: expecting a callback.");
          for (var e2, n3, r3 = this._nodes.values(); (e2 = r3.next()).done !== true; )
            if (t2((n3 = e2.value).key, n3.attributes))
              return n3.key;
        }, i2.mapNodes = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.mapNode: expecting a callback.");
          for (var e2, n3, r3 = this._nodes.values(), i3 = new Array(this.order), o2 = 0; (e2 = r3.next()).done !== true; )
            n3 = e2.value, i3[o2++] = t2(n3.key, n3.attributes);
          return i3;
        }, i2.someNode = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.someNode: expecting a callback.");
          for (var e2, n3, r3 = this._nodes.values(); (e2 = r3.next()).done !== true; )
            if (t2((n3 = e2.value).key, n3.attributes))
              return true;
          return false;
        }, i2.everyNode = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.everyNode: expecting a callback.");
          for (var e2, n3, r3 = this._nodes.values(); (e2 = r3.next()).done !== true; )
            if (!t2((n3 = e2.value).key, n3.attributes))
              return false;
          return true;
        }, i2.filterNodes = function(t2) {
          if (typeof t2 != "function")
            throw new F("Graph.filterNodes: expecting a callback.");
          for (var e2, n3, r3 = this._nodes.values(), i3 = []; (e2 = r3.next()).done !== true; )
            t2((n3 = e2.value).key, n3.attributes) && i3.push(n3.key);
          return i3;
        }, i2.reduceNodes = function(t2, e2) {
          if (typeof t2 != "function")
            throw new F("Graph.reduceNodes: expecting a callback.");
          if (arguments.length < 2)
            throw new F("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");
          for (var n3, r3, i3 = e2, o2 = this._nodes.values(); (n3 = o2.next()).done !== true; )
            i3 = t2(i3, (r3 = n3.value).key, r3.attributes);
          return i3;
        }, i2.nodeEntries = function() {
          var t2 = this._nodes.values();
          return new O(function() {
            var e2 = t2.next();
            if (e2.done)
              return e2;
            var n3 = e2.value;
            return { value: { node: n3.key, attributes: n3.attributes }, done: false };
          });
        }, i2.exportNode = function(t2) {
          t2 = "" + t2;
          var e2 = this._nodes.get(t2);
          if (!e2)
            throw new Y('Graph.exportNode: could not find the "'.concat(t2, '" node in the graph.'));
          return Bt(t2, e2);
        }, i2.exportEdge = function(t2) {
          t2 = "" + t2;
          var e2 = this._edges.get(t2);
          if (!e2)
            throw new Y('Graph.exportEdge: could not find the "'.concat(t2, '" edge in the graph.'));
          return qt(t2, e2);
        }, i2.export = function() {
          var t2 = new Array(this._nodes.size), e2 = 0;
          this._nodes.forEach(function(n4, r3) {
            t2[e2++] = Bt(r3, n4);
          });
          var n3 = new Array(this._edges.size);
          return e2 = 0, this._edges.forEach(function(t3, r3) {
            n3[e2++] = qt(r3, t3);
          }), { attributes: this.getAttributes(), nodes: t2, edges: n3, options: { type: this.type, multi: this.multi, allowSelfLoops: this.allowSelfLoops } };
        }, i2.importNode = function(t2) {
          var e2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], n3 = Jt(t2);
          if (n3) {
            if (n3 === "not-object")
              throw new F('Graph.importNode: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');
            if (n3 === "no-key")
              throw new F("Graph.importNode: no key provided.");
            if (n3 === "invalid-attributes")
              throw new F("Graph.importNode: invalid attributes. Attributes should be a plain object, null or omitted.");
          }
          var r3 = t2.key, i3 = t2.attributes, o2 = i3 === void 0 ? {} : i3;
          return e2 ? this.mergeNode(r3, o2) : this.addNode(r3, o2), this;
        }, i2.importEdge = function(t2) {
          var e2 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], n3 = Vt(t2);
          if (n3) {
            if (n3 === "not-object")
              throw new F('Graph.importEdge: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');
            if (n3 === "no-source")
              throw new F("Graph.importEdge: missing souce.");
            if (n3 === "no-target")
              throw new F("Graph.importEdge: missing target.");
            if (n3 === "invalid-attributes")
              throw new F("Graph.importEdge: invalid attributes. Attributes should be a plain object, null or omitted.");
            if (n3 === "invalid-undirected")
              throw new F("Graph.importEdge: invalid undirected. Undirected should be boolean or omitted.");
          }
          var r3 = t2.source, i3 = t2.target, o2 = t2.attributes, a2 = o2 === void 0 ? {} : o2, u2 = t2.undirected, c2 = u2 !== void 0 && u2;
          return "key" in t2 ? (e2 ? c2 ? this.mergeUndirectedEdgeWithKey : this.mergeDirectedEdgeWithKey : c2 ? this.addUndirectedEdgeWithKey : this.addDirectedEdgeWithKey).call(this, t2.key, r3, i3, a2) : (e2 ? c2 ? this.mergeUndirectedEdge : this.mergeDirectedEdge : c2 ? this.addUndirectedEdge : this.addDirectedEdge).call(this, r3, i3, a2), this;
        }, i2.import = function(t2) {
          var e2, n3, r3, i3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
          if (s(t2))
            return this.import(t2.export(), i3), this;
          if (!h(t2))
            throw new F("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");
          if (t2.attributes) {
            if (!h(t2.attributes))
              throw new F("Graph.import: invalid attributes. Expecting a plain object.");
            i3 ? this.mergeAttributes(t2.attributes) : this.replaceAttributes(t2.attributes);
          }
          if (t2.nodes) {
            if (r3 = t2.nodes, !Array.isArray(r3))
              throw new F("Graph.import: invalid nodes. Expecting an array.");
            for (e2 = 0, n3 = r3.length; e2 < n3; e2++)
              this.importNode(r3[e2], i3);
          }
          if (t2.edges) {
            if (r3 = t2.edges, !Array.isArray(r3))
              throw new F("Graph.import: invalid edges. Expecting an array.");
            for (e2 = 0, n3 = r3.length; e2 < n3; e2++)
              this.importEdge(r3[e2], i3);
          }
          return this;
        }, i2.nullCopy = function(t2) {
          var e2 = new r2(c({}, this._options, t2));
          return e2.replaceAttributes(c({}, this.getAttributes())), e2;
        }, i2.emptyCopy = function(t2) {
          var e2 = this.nullCopy(t2);
          return this._nodes.forEach(function(t3, n3) {
            var r3 = c({}, t3.attributes);
            t3 = new e2.NodeDataClass(n3, r3), e2._nodes.set(n3, t3);
          }), e2;
        }, i2.copy = function() {
          for (var t2, e2, n3 = this.emptyCopy(), r3 = this._edges.values(); (t2 = r3.next()).done !== true; )
            ee(n3, "copy", false, (e2 = t2.value).undirected, e2.key, e2.source.key, e2.target.key, c({}, e2.attributes));
          return n3;
        }, i2.upgradeToMixed = function() {
          return this.type === "mixed" || (this._nodes.forEach(function(t2) {
            return t2.upgradeToMixed();
          }), this._options.type = "mixed", l(this, "type", this._options.type), p(this, "NodeDataClass", q)), this;
        }, i2.upgradeToMulti = function() {
          return this.multi || (this._options.multi = true, l(this, "multi", true), (t2 = this)._nodes.forEach(function(e2, n3) {
            if (e2.out)
              for (var r3 in e2.out) {
                var i3 = /* @__PURE__ */ new Set();
                i3.add(e2.out[r3]), e2.out[r3] = i3, t2._nodes.get(r3).in[n3] = i3;
              }
            if (e2.undirected) {
              for (var o2 in e2.undirected)
                if (!(o2 > n3)) {
                  var a2 = /* @__PURE__ */ new Set();
                  a2.add(e2.undirected[o2]), e2.undirected[o2] = a2, t2._nodes.get(o2).undirected[n3] = a2;
                }
            }
          })), this;
          var t2;
        }, i2.toJSON = function() {
          return this.export();
        }, i2.toString = function() {
          return "[object Graph]";
        }, i2.inspect = function() {
          var e2 = this, n3 = {};
          this._nodes.forEach(function(t2, e3) {
            n3[e3] = t2.attributes;
          });
          var r3 = {}, i3 = {};
          this._edges.forEach(function(t2, n4) {
            var o3, a3 = t2.undirected ? "--" : "->", u2 = "", c2 = t2.source.key, d2 = t2.target.key;
            t2.undirected && c2 > d2 && (o3 = c2, c2 = d2, d2 = o3);
            var s2 = "(".concat(c2, ")").concat(a3, "(").concat(d2, ")");
            n4.startsWith("geid_") ? e2.multi && (i3[s2] === void 0 ? i3[s2] = 0 : i3[s2]++, u2 += "".concat(i3[s2], ". ")) : u2 += "[".concat(n4, "]: "), r3[u2 += s2] = t2.attributes;
          });
          var o2 = {};
          for (var a2 in this)
            this.hasOwnProperty(a2) && !Zt.has(a2) && typeof this[a2] != "function" && t(a2) !== "symbol" && (o2[a2] = this[a2]);
          return o2.attributes = this._attributes, o2.nodes = n3, o2.edges = r3, p(o2, "constructor", this.constructor), o2;
        }, r2;
      }(v.exports.EventEmitter);
      typeof Symbol != "undefined" && (re.prototype[Symbol.for("nodejs.util.inspect.custom")] = re.prototype.inspect), [{ name: function(t2) {
        return "".concat(t2, "Edge");
      }, generateKey: true }, { name: function(t2) {
        return "".concat(t2, "DirectedEdge");
      }, generateKey: true, type: "directed" }, { name: function(t2) {
        return "".concat(t2, "UndirectedEdge");
      }, generateKey: true, type: "undirected" }, { name: function(t2) {
        return "".concat(t2, "EdgeWithKey");
      } }, { name: function(t2) {
        return "".concat(t2, "DirectedEdgeWithKey");
      }, type: "directed" }, { name: function(t2) {
        return "".concat(t2, "UndirectedEdgeWithKey");
      }, type: "undirected" }].forEach(function(t2) {
        ["add", "merge", "update"].forEach(function(e2) {
          var n2 = t2.name(e2), r2 = e2 === "add" ? ee : ne;
          t2.generateKey ? re.prototype[n2] = function(i2, o2, a2) {
            return r2(this, n2, true, (t2.type || this.type) === "undirected", null, i2, o2, a2, e2 === "update");
          } : re.prototype[n2] = function(i2, o2, a2, u2) {
            return r2(this, n2, false, (t2.type || this.type) === "undirected", i2, o2, a2, u2, e2 === "update");
          };
        });
      }), function(t2) {
        $.forEach(function(e2) {
          var n2 = e2.name, r2 = e2.attacher;
          r2(t2, n2("Node"), 0), r2(t2, n2("Source"), 1), r2(t2, n2("Target"), 2), r2(t2, n2("Opposite"), 3);
        });
      }(re), function(t2) {
        tt.forEach(function(e2) {
          var n2 = e2.name, r2 = e2.attacher;
          r2(t2, n2("Edge"), "mixed"), r2(t2, n2("DirectedEdge"), "directed"), r2(t2, n2("UndirectedEdge"), "undirected");
        });
      }(re), function(t2) {
        it.forEach(function(e2) {
          !function(t3, e3) {
            var n2 = e3.name, r2 = e3.type, i2 = e3.direction;
            t3.prototype[n2] = function(t4, e4) {
              if (r2 !== "mixed" && this.type !== "mixed" && r2 !== this.type)
                return [];
              if (!arguments.length)
                return wt(this, r2);
              if (arguments.length === 1) {
                t4 = "" + t4;
                var o2 = this._nodes.get(t4);
                if (o2 === void 0)
                  throw new Y("Graph.".concat(n2, ': could not find the "').concat(t4, '" node in the graph.'));
                return Gt(this.multi, r2 === "mixed" ? this.type : r2, i2, o2);
              }
              if (arguments.length === 2) {
                t4 = "" + t4, e4 = "" + e4;
                var a2 = this._nodes.get(t4);
                if (!a2)
                  throw new Y("Graph.".concat(n2, ':  could not find the "').concat(t4, '" source node in the graph.'));
                if (!this._nodes.has(e4))
                  throw new Y("Graph.".concat(n2, ':  could not find the "').concat(e4, '" target node in the graph.'));
                return At(r2, this.multi, i2, a2, e4);
              }
              throw new F("Graph.".concat(n2, ": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length, ")."));
            };
          }(t2, e2), function(t3, e3) {
            var n2 = e3.name, r2 = e3.type, i2 = e3.direction, o2 = "forEach" + n2[0].toUpperCase() + n2.slice(1, -1);
            t3.prototype[o2] = function(t4, e4, n3) {
              if (r2 === "mixed" || this.type === "mixed" || r2 === this.type) {
                if (arguments.length === 1)
                  return mt(this, r2, n3 = t4);
                if (arguments.length === 2) {
                  t4 = "" + t4, n3 = e4;
                  var a3 = this._nodes.get(t4);
                  if (a3 === void 0)
                    throw new Y("Graph.".concat(o2, ': could not find the "').concat(t4, '" node in the graph.'));
                  return xt(this.multi, r2 === "mixed" ? this.type : r2, i2, a3, n3);
                }
                if (arguments.length === 3) {
                  t4 = "" + t4, e4 = "" + e4;
                  var u3 = this._nodes.get(t4);
                  if (!u3)
                    throw new Y("Graph.".concat(o2, ':  could not find the "').concat(t4, '" source node in the graph.'));
                  if (!this._nodes.has(e4))
                    throw new Y("Graph.".concat(o2, ':  could not find the "').concat(e4, '" target node in the graph.'));
                  return Lt(r2, this.multi, i2, u3, e4, n3);
                }
                throw new F("Graph.".concat(o2, ": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length, ")."));
              }
            };
            var a2 = "map" + n2[0].toUpperCase() + n2.slice(1);
            t3.prototype[a2] = function() {
              var t4, e4 = Array.prototype.slice.call(arguments), n3 = e4.pop();
              if (e4.length === 0) {
                var i3 = 0;
                r2 !== "directed" && (i3 += this.undirectedSize), r2 !== "undirected" && (i3 += this.directedSize), t4 = new Array(i3);
                var a3 = 0;
                e4.push(function(e5, r3, i4, o3, u3, c3, d2) {
                  t4[a3++] = n3(e5, r3, i4, o3, u3, c3, d2);
                });
              } else
                t4 = [], e4.push(function(e5, r3, i4, o3, a4, u3, c3) {
                  t4.push(n3(e5, r3, i4, o3, a4, u3, c3));
                });
              return this[o2].apply(this, e4), t4;
            };
            var u2 = "filter" + n2[0].toUpperCase() + n2.slice(1);
            t3.prototype[u2] = function() {
              var t4 = Array.prototype.slice.call(arguments), e4 = t4.pop(), n3 = [];
              return t4.push(function(t5, r3, i3, o3, a3, u3, c3) {
                e4(t5, r3, i3, o3, a3, u3, c3) && n3.push(t5);
              }), this[o2].apply(this, t4), n3;
            };
            var c2 = "reduce" + n2[0].toUpperCase() + n2.slice(1);
            t3.prototype[c2] = function() {
              var t4, e4, n3 = Array.prototype.slice.call(arguments);
              if (n3.length < 2 || n3.length > 4)
                throw new F("Graph.".concat(c2, ": invalid number of arguments (expecting 2, 3 or 4 and got ").concat(n3.length, ")."));
              if (typeof n3[n3.length - 1] == "function" && typeof n3[n3.length - 2] != "function")
                throw new F("Graph.".concat(c2, ": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array."));
              n3.length === 2 ? (t4 = n3[0], e4 = n3[1], n3 = []) : n3.length === 3 ? (t4 = n3[1], e4 = n3[2], n3 = [n3[0]]) : n3.length === 4 && (t4 = n3[2], e4 = n3[3], n3 = [n3[0], n3[1]]);
              var r3 = e4;
              return n3.push(function(e5, n4, i3, o3, a3, u3, c3) {
                r3 = t4(r3, e5, n4, i3, o3, a3, u3, c3);
              }), this[o2].apply(this, n3), r3;
            };
          }(t2, e2), function(t3, e3) {
            var n2 = e3.name, r2 = e3.type, i2 = e3.direction, o2 = "find" + n2[0].toUpperCase() + n2.slice(1, -1);
            t3.prototype[o2] = function(t4, e4, n3) {
              if (r2 !== "mixed" && this.type !== "mixed" && r2 !== this.type)
                return false;
              if (arguments.length === 1)
                return _t(this, r2, n3 = t4);
              if (arguments.length === 2) {
                t4 = "" + t4, n3 = e4;
                var a3 = this._nodes.get(t4);
                if (a3 === void 0)
                  throw new Y("Graph.".concat(o2, ': could not find the "').concat(t4, '" node in the graph.'));
                return Et(this.multi, r2 === "mixed" ? this.type : r2, i2, a3, n3);
              }
              if (arguments.length === 3) {
                t4 = "" + t4, e4 = "" + e4;
                var u3 = this._nodes.get(t4);
                if (!u3)
                  throw new Y("Graph.".concat(o2, ':  could not find the "').concat(t4, '" source node in the graph.'));
                if (!this._nodes.has(e4))
                  throw new Y("Graph.".concat(o2, ':  could not find the "').concat(e4, '" target node in the graph.'));
                return Dt(r2, this.multi, i2, u3, e4, n3);
              }
              throw new F("Graph.".concat(o2, ": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length, ")."));
            };
            var a2 = "some" + n2[0].toUpperCase() + n2.slice(1, -1);
            t3.prototype[a2] = function() {
              var t4 = Array.prototype.slice.call(arguments), e4 = t4.pop();
              return t4.push(function(t5, n3, r3, i3, o3, a3, u3) {
                return e4(t5, n3, r3, i3, o3, a3, u3);
              }), !!this[o2].apply(this, t4);
            };
            var u2 = "every" + n2[0].toUpperCase() + n2.slice(1, -1);
            t3.prototype[u2] = function() {
              var t4 = Array.prototype.slice.call(arguments), e4 = t4.pop();
              return t4.push(function(t5, n3, r3, i3, o3, a3, u3) {
                return !e4(t5, n3, r3, i3, o3, a3, u3);
              }), !this[o2].apply(this, t4);
            };
          }(t2, e2), function(t3, e3) {
            var n2 = e3.name, r2 = e3.type, i2 = e3.direction, o2 = n2.slice(0, -1) + "Entries";
            t3.prototype[o2] = function(t4, e4) {
              if (r2 !== "mixed" && this.type !== "mixed" && r2 !== this.type)
                return O.empty();
              if (!arguments.length)
                return kt(this, r2);
              if (arguments.length === 1) {
                t4 = "" + t4;
                var n3 = this._nodes.get(t4);
                if (!n3)
                  throw new Y("Graph.".concat(o2, ': could not find the "').concat(t4, '" node in the graph.'));
                return St(r2, i2, n3);
              }
              if (arguments.length === 2) {
                t4 = "" + t4, e4 = "" + e4;
                var a2 = this._nodes.get(t4);
                if (!a2)
                  throw new Y("Graph.".concat(o2, ':  could not find the "').concat(t4, '" source node in the graph.'));
                if (!this._nodes.has(e4))
                  throw new Y("Graph.".concat(o2, ':  could not find the "').concat(e4, '" target node in the graph.'));
                return Nt(r2, i2, a2, e4);
              }
              throw new F("Graph.".concat(o2, ": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length, ")."));
            };
          }(t2, e2);
        });
      }(re), function(t2) {
        Ut.forEach(function(e2) {
          Rt(t2, e2), Wt(t2, e2), Kt(t2, e2), It(t2, e2);
        });
      }(re);
      var ie = function(t2) {
        function n2(e2) {
          var n3 = c({ type: "directed" }, e2);
          if ("multi" in n3 && n3.multi !== false)
            throw new F("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");
          if (n3.type !== "directed")
            throw new F('DirectedGraph.from: inconsistent "' + n3.type + '" type in given options!');
          return t2.call(this, n3) || this;
        }
        return e(n2, t2), n2;
      }(re), oe = function(t2) {
        function n2(e2) {
          var n3 = c({ type: "undirected" }, e2);
          if ("multi" in n3 && n3.multi !== false)
            throw new F("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");
          if (n3.type !== "undirected")
            throw new F('UndirectedGraph.from: inconsistent "' + n3.type + '" type in given options!');
          return t2.call(this, n3) || this;
        }
        return e(n2, t2), n2;
      }(re), ae = function(t2) {
        function n2(e2) {
          var n3 = c({ multi: true }, e2);
          if ("multi" in n3 && n3.multi !== true)
            throw new F("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");
          return t2.call(this, n3) || this;
        }
        return e(n2, t2), n2;
      }(re), ue = function(t2) {
        function n2(e2) {
          var n3 = c({ type: "directed", multi: true }, e2);
          if ("multi" in n3 && n3.multi !== true)
            throw new F("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");
          if (n3.type !== "directed")
            throw new F('MultiDirectedGraph.from: inconsistent "' + n3.type + '" type in given options!');
          return t2.call(this, n3) || this;
        }
        return e(n2, t2), n2;
      }(re), ce = function(t2) {
        function n2(e2) {
          var n3 = c({ type: "undirected", multi: true }, e2);
          if ("multi" in n3 && n3.multi !== true)
            throw new F("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");
          if (n3.type !== "undirected")
            throw new F('MultiUndirectedGraph.from: inconsistent "' + n3.type + '" type in given options!');
          return t2.call(this, n3) || this;
        }
        return e(n2, t2), n2;
      }(re);
      function de(t2) {
        t2.from = function(e2, n2) {
          var r2 = c({}, e2.options, n2), i2 = new t2(r2);
          return i2.import(e2), i2;
        };
      }
      return de(re), de(ie), de(oe), de(ae), de(ue), de(ce), re.Graph = re, re.DirectedGraph = ie, re.UndirectedGraph = oe, re.MultiGraph = ae, re.MultiDirectedGraph = ue, re.MultiUndirectedGraph = ce, re.InvalidArgumentsGraphError = F, re.NotFoundGraphError = Y, re.UsageGraphError = B, re;
    });
  }
});

// node_modules/graphology-layout-forceatlas2/iterate.js
var require_iterate = __commonJS({
  "node_modules/graphology-layout-forceatlas2/iterate.js"(exports, module) {
    var NODE_X = 0;
    var NODE_Y = 1;
    var NODE_DX = 2;
    var NODE_DY = 3;
    var NODE_OLD_DX = 4;
    var NODE_OLD_DY = 5;
    var NODE_MASS = 6;
    var NODE_CONVERGENCE = 7;
    var NODE_SIZE = 8;
    var NODE_FIXED = 9;
    var EDGE_SOURCE = 0;
    var EDGE_TARGET = 1;
    var EDGE_WEIGHT = 2;
    var REGION_NODE = 0;
    var REGION_CENTER_X = 1;
    var REGION_CENTER_Y = 2;
    var REGION_SIZE = 3;
    var REGION_NEXT_SIBLING = 4;
    var REGION_FIRST_CHILD = 5;
    var REGION_MASS = 6;
    var REGION_MASS_CENTER_X = 7;
    var REGION_MASS_CENTER_Y = 8;
    var SUBDIVISION_ATTEMPTS = 3;
    var PPN = 10;
    var PPE = 3;
    var PPR = 9;
    var MAX_FORCE = 10;
    module.exports = function iterate(options, NodeMatrix, EdgeMatrix) {
      var l, r, n, n1, n2, rn, e, w, g, s;
      var order = NodeMatrix.length, size = EdgeMatrix.length;
      var adjustSizes = options.adjustSizes;
      var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;
      var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;
      var RegionMatrix = [];
      for (n = 0; n < order; n += PPN) {
        NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];
        NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];
        NodeMatrix[n + NODE_DX] = 0;
        NodeMatrix[n + NODE_DY] = 0;
      }
      if (options.outboundAttractionDistribution) {
        outboundAttCompensation = 0;
        for (n = 0; n < order; n += PPN) {
          outboundAttCompensation += NodeMatrix[n + NODE_MASS];
        }
        outboundAttCompensation /= order / PPN;
      }
      if (options.barnesHutOptimize) {
        var minX = Infinity, maxX = -Infinity, minY = Infinity, maxY = -Infinity, q, q2, subdivisionAttempts;
        for (n = 0; n < order; n += PPN) {
          minX = Math.min(minX, NodeMatrix[n + NODE_X]);
          maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);
          minY = Math.min(minY, NodeMatrix[n + NODE_Y]);
          maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);
        }
        var dx = maxX - minX, dy = maxY - minY;
        if (dx > dy) {
          minY -= (dx - dy) / 2;
          maxY = minY + dx;
        } else {
          minX -= (dy - dx) / 2;
          maxX = minX + dy;
        }
        RegionMatrix[0 + REGION_NODE] = -1;
        RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;
        RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;
        RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);
        RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;
        RegionMatrix[0 + REGION_FIRST_CHILD] = -1;
        RegionMatrix[0 + REGION_MASS] = 0;
        RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;
        RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;
        l = 1;
        for (n = 0; n < order; n += PPN) {
          r = 0;
          subdivisionAttempts = SUBDIVISION_ATTEMPTS;
          while (true) {
            if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {
              if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {
                if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {
                  q = RegionMatrix[r + REGION_FIRST_CHILD];
                } else {
                  q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;
                }
              } else {
                if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {
                  q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;
                } else {
                  q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;
                }
              }
              RegionMatrix[r + REGION_MASS_CENTER_X] = (RegionMatrix[r + REGION_MASS_CENTER_X] * RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) / (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);
              RegionMatrix[r + REGION_MASS_CENTER_Y] = (RegionMatrix[r + REGION_MASS_CENTER_Y] * RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) / (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);
              RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];
              r = q;
              continue;
            } else {
              if (RegionMatrix[r + REGION_NODE] < 0) {
                RegionMatrix[r + REGION_NODE] = n;
                break;
              } else {
                RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;
                w = RegionMatrix[r + REGION_SIZE] / 2;
                g = RegionMatrix[r + REGION_FIRST_CHILD];
                RegionMatrix[g + REGION_NODE] = -1;
                RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] - w;
                RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] - w;
                RegionMatrix[g + REGION_SIZE] = w;
                RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;
                RegionMatrix[g + REGION_FIRST_CHILD] = -1;
                RegionMatrix[g + REGION_MASS] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_X] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;
                g += PPR;
                RegionMatrix[g + REGION_NODE] = -1;
                RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] - w;
                RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] + w;
                RegionMatrix[g + REGION_SIZE] = w;
                RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;
                RegionMatrix[g + REGION_FIRST_CHILD] = -1;
                RegionMatrix[g + REGION_MASS] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_X] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;
                g += PPR;
                RegionMatrix[g + REGION_NODE] = -1;
                RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] + w;
                RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] - w;
                RegionMatrix[g + REGION_SIZE] = w;
                RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;
                RegionMatrix[g + REGION_FIRST_CHILD] = -1;
                RegionMatrix[g + REGION_MASS] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_X] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;
                g += PPR;
                RegionMatrix[g + REGION_NODE] = -1;
                RegionMatrix[g + REGION_CENTER_X] = RegionMatrix[r + REGION_CENTER_X] + w;
                RegionMatrix[g + REGION_CENTER_Y] = RegionMatrix[r + REGION_CENTER_Y] + w;
                RegionMatrix[g + REGION_SIZE] = w;
                RegionMatrix[g + REGION_NEXT_SIBLING] = RegionMatrix[r + REGION_NEXT_SIBLING];
                RegionMatrix[g + REGION_FIRST_CHILD] = -1;
                RegionMatrix[g + REGION_MASS] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_X] = 0;
                RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;
                l += 4;
                if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {
                  if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {
                    q = RegionMatrix[r + REGION_FIRST_CHILD];
                  } else {
                    q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;
                  }
                } else {
                  if (NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {
                    q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;
                  } else {
                    q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;
                  }
                }
                RegionMatrix[r + REGION_MASS] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];
                RegionMatrix[r + REGION_MASS_CENTER_X] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];
                RegionMatrix[r + REGION_MASS_CENTER_Y] = NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];
                RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];
                RegionMatrix[r + REGION_NODE] = -1;
                if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {
                  if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {
                    q2 = RegionMatrix[r + REGION_FIRST_CHILD];
                  } else {
                    q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;
                  }
                } else {
                  if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {
                    q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;
                  } else {
                    q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;
                  }
                }
                if (q === q2) {
                  if (subdivisionAttempts--) {
                    r = q;
                    continue;
                  } else {
                    subdivisionAttempts = SUBDIVISION_ATTEMPTS;
                    break;
                  }
                }
                RegionMatrix[q2 + REGION_NODE] = n;
                break;
              }
            }
          }
        }
      }
      if (options.barnesHutOptimize) {
        coefficient = options.scalingRatio;
        for (n = 0; n < order; n += PPN) {
          r = 0;
          while (true) {
            if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {
              distance = Math.pow(NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X], 2) + Math.pow(NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y], 2);
              s = RegionMatrix[r + REGION_SIZE];
              if (4 * s * s / distance < thetaSquared) {
                xDist = NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];
                yDist = NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];
                if (adjustSizes === true) {
                  if (distance > 0) {
                    factor = coefficient * NodeMatrix[n + NODE_MASS] * RegionMatrix[r + REGION_MASS] / distance;
                    NodeMatrix[n + NODE_DX] += xDist * factor;
                    NodeMatrix[n + NODE_DY] += yDist * factor;
                  } else if (distance < 0) {
                    factor = -coefficient * NodeMatrix[n + NODE_MASS] * RegionMatrix[r + REGION_MASS] / Math.sqrt(distance);
                    NodeMatrix[n + NODE_DX] += xDist * factor;
                    NodeMatrix[n + NODE_DY] += yDist * factor;
                  }
                } else {
                  if (distance > 0) {
                    factor = coefficient * NodeMatrix[n + NODE_MASS] * RegionMatrix[r + REGION_MASS] / distance;
                    NodeMatrix[n + NODE_DX] += xDist * factor;
                    NodeMatrix[n + NODE_DY] += yDist * factor;
                  }
                }
                r = RegionMatrix[r + REGION_NEXT_SIBLING];
                if (r < 0)
                  break;
                continue;
              } else {
                r = RegionMatrix[r + REGION_FIRST_CHILD];
                continue;
              }
            } else {
              rn = RegionMatrix[r + REGION_NODE];
              if (rn >= 0 && rn !== n) {
                xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];
                yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];
                distance = xDist * xDist + yDist * yDist;
                if (adjustSizes === true) {
                  if (distance > 0) {
                    factor = coefficient * NodeMatrix[n + NODE_MASS] * NodeMatrix[rn + NODE_MASS] / distance;
                    NodeMatrix[n + NODE_DX] += xDist * factor;
                    NodeMatrix[n + NODE_DY] += yDist * factor;
                  } else if (distance < 0) {
                    factor = -coefficient * NodeMatrix[n + NODE_MASS] * NodeMatrix[rn + NODE_MASS] / Math.sqrt(distance);
                    NodeMatrix[n + NODE_DX] += xDist * factor;
                    NodeMatrix[n + NODE_DY] += yDist * factor;
                  }
                } else {
                  if (distance > 0) {
                    factor = coefficient * NodeMatrix[n + NODE_MASS] * NodeMatrix[rn + NODE_MASS] / distance;
                    NodeMatrix[n + NODE_DX] += xDist * factor;
                    NodeMatrix[n + NODE_DY] += yDist * factor;
                  }
                }
              }
              r = RegionMatrix[r + REGION_NEXT_SIBLING];
              if (r < 0)
                break;
              continue;
            }
          }
        }
      } else {
        coefficient = options.scalingRatio;
        for (n1 = 0; n1 < order; n1 += PPN) {
          for (n2 = 0; n2 < n1; n2 += PPN) {
            xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];
            yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];
            if (adjustSizes === true) {
              distance = Math.sqrt(xDist * xDist + yDist * yDist) - NodeMatrix[n1 + NODE_SIZE] - NodeMatrix[n2 + NODE_SIZE];
              if (distance > 0) {
                factor = coefficient * NodeMatrix[n1 + NODE_MASS] * NodeMatrix[n2 + NODE_MASS] / distance / distance;
                NodeMatrix[n1 + NODE_DX] += xDist * factor;
                NodeMatrix[n1 + NODE_DY] += yDist * factor;
                NodeMatrix[n2 + NODE_DX] += xDist * factor;
                NodeMatrix[n2 + NODE_DY] += yDist * factor;
              } else if (distance < 0) {
                factor = 100 * coefficient * NodeMatrix[n1 + NODE_MASS] * NodeMatrix[n2 + NODE_MASS];
                NodeMatrix[n1 + NODE_DX] += xDist * factor;
                NodeMatrix[n1 + NODE_DY] += yDist * factor;
                NodeMatrix[n2 + NODE_DX] -= xDist * factor;
                NodeMatrix[n2 + NODE_DY] -= yDist * factor;
              }
            } else {
              distance = Math.sqrt(xDist * xDist + yDist * yDist);
              if (distance > 0) {
                factor = coefficient * NodeMatrix[n1 + NODE_MASS] * NodeMatrix[n2 + NODE_MASS] / distance / distance;
                NodeMatrix[n1 + NODE_DX] += xDist * factor;
                NodeMatrix[n1 + NODE_DY] += yDist * factor;
                NodeMatrix[n2 + NODE_DX] -= xDist * factor;
                NodeMatrix[n2 + NODE_DY] -= yDist * factor;
              }
            }
          }
        }
      }
      g = options.gravity / options.scalingRatio;
      coefficient = options.scalingRatio;
      for (n = 0; n < order; n += PPN) {
        factor = 0;
        xDist = NodeMatrix[n + NODE_X];
        yDist = NodeMatrix[n + NODE_Y];
        distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));
        if (options.strongGravityMode) {
          if (distance > 0)
            factor = coefficient * NodeMatrix[n + NODE_MASS] * g;
        } else {
          if (distance > 0)
            factor = coefficient * NodeMatrix[n + NODE_MASS] * g / distance;
        }
        NodeMatrix[n + NODE_DX] -= xDist * factor;
        NodeMatrix[n + NODE_DY] -= yDist * factor;
      }
      coefficient = 1 * (options.outboundAttractionDistribution ? outboundAttCompensation : 1);
      for (e = 0; e < size; e += PPE) {
        n1 = EdgeMatrix[e + EDGE_SOURCE];
        n2 = EdgeMatrix[e + EDGE_TARGET];
        w = EdgeMatrix[e + EDGE_WEIGHT];
        ewc = Math.pow(w, options.edgeWeightInfluence);
        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];
        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];
        if (adjustSizes === true) {
          distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2) - NodeMatrix[n1 + NODE_SIZE] - NodeMatrix[n2 + NODE_SIZE]);
          if (options.linLogMode) {
            if (options.outboundAttractionDistribution) {
              if (distance > 0) {
                factor = -coefficient * ewc * Math.log(1 + distance) / distance / NodeMatrix[n1 + NODE_MASS];
              }
            } else {
              if (distance > 0) {
                factor = -coefficient * ewc * Math.log(1 + distance) / distance;
              }
            }
          } else {
            if (options.outboundAttractionDistribution) {
              if (distance > 0) {
                factor = -coefficient * ewc / NodeMatrix[n1 + NODE_MASS];
              }
            } else {
              if (distance > 0) {
                factor = -coefficient * ewc;
              }
            }
          }
        } else {
          distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));
          if (options.linLogMode) {
            if (options.outboundAttractionDistribution) {
              if (distance > 0) {
                factor = -coefficient * ewc * Math.log(1 + distance) / distance / NodeMatrix[n1 + NODE_MASS];
              }
            } else {
              if (distance > 0)
                factor = -coefficient * ewc * Math.log(1 + distance) / distance;
            }
          } else {
            if (options.outboundAttractionDistribution) {
              distance = 1;
              factor = -coefficient * ewc / NodeMatrix[n1 + NODE_MASS];
            } else {
              distance = 1;
              factor = -coefficient * ewc;
            }
          }
        }
        if (distance > 0) {
          NodeMatrix[n1 + NODE_DX] += xDist * factor;
          NodeMatrix[n1 + NODE_DY] += yDist * factor;
          NodeMatrix[n2 + NODE_DX] -= xDist * factor;
          NodeMatrix[n2 + NODE_DY] -= yDist * factor;
        }
      }
      var force, swinging, traction, nodespeed, newX, newY;
      if (adjustSizes === true) {
        for (n = 0; n < order; n += PPN) {
          if (NodeMatrix[n + NODE_FIXED] !== 1) {
            force = Math.sqrt(Math.pow(NodeMatrix[n + NODE_DX], 2) + Math.pow(NodeMatrix[n + NODE_DY], 2));
            if (force > MAX_FORCE) {
              NodeMatrix[n + NODE_DX] = NodeMatrix[n + NODE_DX] * MAX_FORCE / force;
              NodeMatrix[n + NODE_DY] = NodeMatrix[n + NODE_DY] * MAX_FORCE / force;
            }
            swinging = NodeMatrix[n + NODE_MASS] * Math.sqrt((NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) * (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) + (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) * (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]));
            traction = Math.sqrt((NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) * (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) + (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) * (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])) / 2;
            nodespeed = 0.1 * Math.log(1 + traction) / (1 + Math.sqrt(swinging));
            newX = NodeMatrix[n + NODE_X] + NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);
            NodeMatrix[n + NODE_X] = newX;
            newY = NodeMatrix[n + NODE_Y] + NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);
            NodeMatrix[n + NODE_Y] = newY;
          }
        }
      } else {
        for (n = 0; n < order; n += PPN) {
          if (NodeMatrix[n + NODE_FIXED] !== 1) {
            swinging = NodeMatrix[n + NODE_MASS] * Math.sqrt((NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) * (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) + (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) * (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]));
            traction = Math.sqrt((NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) * (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) + (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) * (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])) / 2;
            nodespeed = NodeMatrix[n + NODE_CONVERGENCE] * Math.log(1 + traction) / (1 + Math.sqrt(swinging));
            NodeMatrix[n + NODE_CONVERGENCE] = Math.min(1, Math.sqrt(nodespeed * (Math.pow(NodeMatrix[n + NODE_DX], 2) + Math.pow(NodeMatrix[n + NODE_DY], 2)) / (1 + Math.sqrt(swinging))));
            newX = NodeMatrix[n + NODE_X] + NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);
            NodeMatrix[n + NODE_X] = newX;
            newY = NodeMatrix[n + NODE_Y] + NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);
            NodeMatrix[n + NODE_Y] = newY;
          }
        }
      }
      return {};
    };
  }
});

// node_modules/graphology-layout-forceatlas2/helpers.js
var require_helpers = __commonJS({
  "node_modules/graphology-layout-forceatlas2/helpers.js"(exports) {
    var PPN = 10;
    var PPE = 3;
    exports.assign = function(target) {
      target = target || {};
      var objects = Array.prototype.slice.call(arguments).slice(1), i, k, l;
      for (i = 0, l = objects.length; i < l; i++) {
        if (!objects[i])
          continue;
        for (k in objects[i])
          target[k] = objects[i][k];
      }
      return target;
    };
    exports.validateSettings = function(settings) {
      if ("linLogMode" in settings && typeof settings.linLogMode !== "boolean")
        return { message: "the `linLogMode` setting should be a boolean." };
      if ("outboundAttractionDistribution" in settings && typeof settings.outboundAttractionDistribution !== "boolean")
        return {
          message: "the `outboundAttractionDistribution` setting should be a boolean."
        };
      if ("adjustSizes" in settings && typeof settings.adjustSizes !== "boolean")
        return { message: "the `adjustSizes` setting should be a boolean." };
      if ("edgeWeightInfluence" in settings && typeof settings.edgeWeightInfluence !== "number")
        return {
          message: "the `edgeWeightInfluence` setting should be a number."
        };
      if ("scalingRatio" in settings && !(typeof settings.scalingRatio === "number" && settings.scalingRatio >= 0))
        return { message: "the `scalingRatio` setting should be a number >= 0." };
      if ("strongGravityMode" in settings && typeof settings.strongGravityMode !== "boolean")
        return { message: "the `strongGravityMode` setting should be a boolean." };
      if ("gravity" in settings && !(typeof settings.gravity === "number" && settings.gravity >= 0))
        return { message: "the `gravity` setting should be a number >= 0." };
      if ("slowDown" in settings && !(typeof settings.slowDown === "number" || settings.slowDown >= 0))
        return { message: "the `slowDown` setting should be a number >= 0." };
      if ("barnesHutOptimize" in settings && typeof settings.barnesHutOptimize !== "boolean")
        return { message: "the `barnesHutOptimize` setting should be a boolean." };
      if ("barnesHutTheta" in settings && !(typeof settings.barnesHutTheta === "number" && settings.barnesHutTheta >= 0))
        return { message: "the `barnesHutTheta` setting should be a number >= 0." };
      return null;
    };
    exports.graphToByteArrays = function(graph, weightAttribute) {
      var order = graph.order;
      var size = graph.size;
      var index = {};
      var j;
      var NodeMatrix = new Float32Array(order * PPN);
      var EdgeMatrix = new Float32Array(size * PPE);
      j = 0;
      graph.forEachNode(function(node, attr) {
        index[node] = j;
        NodeMatrix[j] = attr.x;
        NodeMatrix[j + 1] = attr.y;
        NodeMatrix[j + 2] = 0;
        NodeMatrix[j + 3] = 0;
        NodeMatrix[j + 4] = 0;
        NodeMatrix[j + 5] = 0;
        NodeMatrix[j + 6] = 1 + graph.degree(node);
        NodeMatrix[j + 7] = 1;
        NodeMatrix[j + 8] = attr.size || 1;
        NodeMatrix[j + 9] = attr.fixed ? 1 : 0;
        j += PPN;
      });
      var weightGetter = function(attr) {
        if (!weightAttribute)
          return 1;
        var w = attr[weightAttribute];
        if (typeof w !== "number" || isNaN(w))
          w = 1;
        return w;
      };
      j = 0;
      graph.forEachEdge(function(_, attr, source, target) {
        EdgeMatrix[j] = index[source];
        EdgeMatrix[j + 1] = index[target];
        EdgeMatrix[j + 2] = weightGetter(attr);
        j += PPE;
      });
      return {
        nodes: NodeMatrix,
        edges: EdgeMatrix
      };
    };
    exports.assignLayoutChanges = function(graph, NodeMatrix) {
      var i = 0;
      graph.updateEachNodeAttributes(function(node, attr) {
        attr.x = NodeMatrix[i];
        attr.y = NodeMatrix[i + 1];
        i += PPN;
        return attr;
      }, { attributes: ["x", "y"] });
    };
    exports.collectLayoutChanges = function(graph, NodeMatrix) {
      var nodes2 = graph.nodes(), positions = {};
      for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {
        positions[nodes2[j]] = {
          x: NodeMatrix[i],
          y: NodeMatrix[i + 1]
        };
        j++;
      }
      return positions;
    };
    exports.createWorker = function createWorker(fn) {
      var xURL = window.URL || window.webkitURL;
      var code = fn.toString();
      var objectUrl = xURL.createObjectURL(new Blob(["(" + code + ").call(this);"], { type: "text/javascript" }));
      var worker = new Worker(objectUrl);
      xURL.revokeObjectURL(objectUrl);
      return worker;
    };
  }
});

// node_modules/graphology-layout-forceatlas2/defaults.js
var require_defaults = __commonJS({
  "node_modules/graphology-layout-forceatlas2/defaults.js"(exports, module) {
    module.exports = {
      linLogMode: false,
      outboundAttractionDistribution: false,
      adjustSizes: false,
      edgeWeightInfluence: 1,
      scalingRatio: 1,
      strongGravityMode: false,
      gravity: 1,
      slowDown: 1,
      barnesHutOptimize: false,
      barnesHutTheta: 0.5
    };
  }
});

// node_modules/graphology-layout-forceatlas2/index.js
var require_graphology_layout_forceatlas2 = __commonJS({
  "node_modules/graphology-layout-forceatlas2/index.js"(exports, module) {
    var isGraph = require_is_graph();
    var iterate = require_iterate();
    var helpers = require_helpers();
    var DEFAULT_SETTINGS = require_defaults();
    function abstractSynchronousLayout(assign, graph, params) {
      if (!isGraph(graph))
        throw new Error("graphology-layout-forceatlas2: the given graph is not a valid graphology instance.");
      if (typeof params === "number")
        params = { iterations: params };
      var iterations = params.iterations;
      if (typeof iterations !== "number")
        throw new Error("graphology-layout-forceatlas2: invalid number of iterations.");
      if (iterations <= 0)
        throw new Error("graphology-layout-forceatlas2: you should provide a positive number of iterations.");
      var attributes = params.attributes || {};
      var weightAttribute = params.weighted ? attributes.weight || "weight" : null;
      var settings = helpers.assign({}, DEFAULT_SETTINGS, params.settings);
      var validationError = helpers.validateSettings(settings);
      if (validationError)
        throw new Error("graphology-layout-forceatlas2: " + validationError.message);
      var matrices = helpers.graphToByteArrays(graph, weightAttribute);
      var i;
      for (i = 0; i < iterations; i++)
        iterate(settings, matrices.nodes, matrices.edges);
      if (assign) {
        helpers.assignLayoutChanges(graph, matrices.nodes);
        return;
      }
      return helpers.collectLayoutChanges(graph, matrices.nodes);
    }
    function inferSettings(graph) {
      var order = typeof graph === "number" ? graph : graph.order;
      return {
        barnesHutOptimize: order > 2e3,
        strongGravityMode: true,
        gravity: 0.05,
        scalingRatio: 10,
        slowDown: 1 + Math.log(order)
      };
    }
    var synchronousLayout = abstractSynchronousLayout.bind(null, false);
    synchronousLayout.assign = abstractSynchronousLayout.bind(null, true);
    synchronousLayout.inferSettings = inferSettings;
    module.exports = synchronousLayout;
  }
});

// node_modules/graphology-layout-noverlap/iterate.js
var require_iterate2 = __commonJS({
  "node_modules/graphology-layout-noverlap/iterate.js"(exports, module) {
    var NODE_X = 0;
    var NODE_Y = 1;
    var NODE_SIZE = 2;
    var PPN = 3;
    function hashPair(a, b) {
      return a + "\xA7" + b;
    }
    function jitter() {
      return 0.01 * (0.5 - Math.random());
    }
    module.exports = function iterate(options, NodeMatrix) {
      var margin = options.margin;
      var ratio = options.ratio;
      var expansion = options.expansion;
      var gridSize = options.gridSize;
      var speed = options.speed;
      var i, j, x, y, l, size;
      var converged = true;
      var length = NodeMatrix.length;
      var order = length / PPN | 0;
      var deltaX = new Float32Array(order);
      var deltaY = new Float32Array(order);
      var xMin = Infinity;
      var yMin = Infinity;
      var xMax = -Infinity;
      var yMax = -Infinity;
      for (i = 0; i < length; i += PPN) {
        x = NodeMatrix[i + NODE_X];
        y = NodeMatrix[i + NODE_Y];
        size = NodeMatrix[i + NODE_SIZE] * ratio + margin;
        xMin = Math.min(xMin, x - size);
        xMax = Math.max(xMax, x + size);
        yMin = Math.min(yMin, y - size);
        yMax = Math.max(yMax, y + size);
      }
      var width = xMax - xMin;
      var height = yMax - yMin;
      var xCenter = (xMin + xMax) / 2;
      var yCenter = (yMin + yMax) / 2;
      xMin = xCenter - expansion * width / 2;
      xMax = xCenter + expansion * width / 2;
      yMin = yCenter - expansion * height / 2;
      yMax = yCenter + expansion * height / 2;
      var grid = new Array(gridSize * gridSize), gridLength = grid.length, c;
      for (c = 0; c < gridLength; c++)
        grid[c] = [];
      var nxMin, nxMax, nyMin, nyMax;
      var xMinBox, xMaxBox, yMinBox, yMaxBox;
      var col, row;
      for (i = 0; i < length; i += PPN) {
        x = NodeMatrix[i + NODE_X];
        y = NodeMatrix[i + NODE_Y];
        size = NodeMatrix[i + NODE_SIZE] * ratio + margin;
        nxMin = x - size;
        nxMax = x + size;
        nyMin = y - size;
        nyMax = y + size;
        xMinBox = Math.floor(gridSize * (nxMin - xMin) / (xMax - xMin));
        xMaxBox = Math.floor(gridSize * (nxMax - xMin) / (xMax - xMin));
        yMinBox = Math.floor(gridSize * (nyMin - yMin) / (yMax - yMin));
        yMaxBox = Math.floor(gridSize * (nyMax - yMin) / (yMax - yMin));
        for (col = xMinBox; col <= xMaxBox; col++) {
          for (row = yMinBox; row <= yMaxBox; row++) {
            grid[col * gridSize + row].push(i);
          }
        }
      }
      var cell;
      var collisions = /* @__PURE__ */ new Set();
      var n1, n2, x1, x2, y1, y2, s1, s2, h;
      var xDist, yDist, dist, collision;
      for (c = 0; c < gridLength; c++) {
        cell = grid[c];
        for (i = 0, l = cell.length; i < l; i++) {
          n1 = cell[i];
          x1 = NodeMatrix[n1 + NODE_X];
          y1 = NodeMatrix[n1 + NODE_Y];
          s1 = NodeMatrix[n1 + NODE_SIZE];
          for (j = i + 1; j < l; j++) {
            n2 = cell[j];
            h = hashPair(n1, n2);
            if (gridLength > 1 && collisions.has(h))
              continue;
            if (gridLength > 1)
              collisions.add(h);
            x2 = NodeMatrix[n2 + NODE_X];
            y2 = NodeMatrix[n2 + NODE_Y];
            s2 = NodeMatrix[n2 + NODE_SIZE];
            xDist = x2 - x1;
            yDist = y2 - y1;
            dist = Math.sqrt(xDist * xDist + yDist * yDist);
            collision = dist < s1 * ratio + margin + (s2 * ratio + margin);
            if (collision) {
              converged = false;
              n2 = n2 / PPN | 0;
              if (dist > 0) {
                deltaX[n2] += xDist / dist * (1 + s1);
                deltaY[n2] += yDist / dist * (1 + s1);
              } else {
                deltaX[n2] += width * jitter();
                deltaY[n2] += height * jitter();
              }
            }
          }
        }
      }
      for (i = 0, j = 0; i < length; i += PPN, j++) {
        NodeMatrix[i + NODE_X] += deltaX[j] * 0.1 * speed;
        NodeMatrix[i + NODE_Y] += deltaY[j] * 0.1 * speed;
      }
      return { converged };
    };
  }
});

// node_modules/graphology-layout-noverlap/helpers.js
var require_helpers2 = __commonJS({
  "node_modules/graphology-layout-noverlap/helpers.js"(exports) {
    var PPN = 3;
    exports.validateSettings = function(settings) {
      if ("gridSize" in settings && typeof settings.gridSize !== "number" || settings.gridSize <= 0)
        return { message: "the `gridSize` setting should be a positive number." };
      if ("margin" in settings && typeof settings.margin !== "number" || settings.margin < 0)
        return {
          message: "the `margin` setting should be 0 or a positive number."
        };
      if ("expansion" in settings && typeof settings.expansion !== "number" || settings.expansion <= 0)
        return { message: "the `expansion` setting should be a positive number." };
      if ("ratio" in settings && typeof settings.ratio !== "number" || settings.ratio <= 0)
        return { message: "the `ratio` setting should be a positive number." };
      if ("speed" in settings && typeof settings.speed !== "number" || settings.speed <= 0)
        return { message: "the `speed` setting should be a positive number." };
      return null;
    };
    exports.graphToByteArray = function(graph, reducer) {
      var order = graph.order;
      var matrix = new Float32Array(order * PPN);
      var j = 0;
      graph.forEachNode(function(node, attr) {
        if (typeof reducer === "function")
          attr = reducer(node, attr);
        matrix[j] = attr.x;
        matrix[j + 1] = attr.y;
        matrix[j + 2] = attr.size || 1;
        j += PPN;
      });
      return matrix;
    };
    exports.assignLayoutChanges = function(graph, NodeMatrix, reducer) {
      var i = 0;
      graph.forEachNode(function(node) {
        var pos = {
          x: NodeMatrix[i],
          y: NodeMatrix[i + 1]
        };
        if (typeof reducer === "function")
          pos = reducer(node, pos);
        graph.mergeNodeAttributes(node, pos);
        i += PPN;
      });
    };
    exports.collectLayoutChanges = function(graph, NodeMatrix, reducer) {
      var positions = {};
      var i = 0;
      graph.forEachNode(function(node) {
        var pos = {
          x: NodeMatrix[i],
          y: NodeMatrix[i + 1]
        };
        if (typeof reducer === "function")
          pos = reducer(node, pos);
        positions[node] = pos;
        i += PPN;
      });
      return positions;
    };
    exports.createWorker = function createWorker(fn) {
      var xURL = window.URL || window.webkitURL;
      var code = fn.toString();
      var objectUrl = xURL.createObjectURL(new Blob(["(" + code + ").call(this);"], { type: "text/javascript" }));
      var worker = new Worker(objectUrl);
      xURL.revokeObjectURL(objectUrl);
      return worker;
    };
  }
});

// node_modules/graphology-layout-noverlap/defaults.js
var require_defaults2 = __commonJS({
  "node_modules/graphology-layout-noverlap/defaults.js"(exports, module) {
    module.exports = {
      gridSize: 20,
      margin: 5,
      expansion: 1.1,
      ratio: 1,
      speed: 3
    };
  }
});

// node_modules/graphology-layout-noverlap/index.js
var require_graphology_layout_noverlap = __commonJS({
  "node_modules/graphology-layout-noverlap/index.js"(exports, module) {
    var isGraph = require_is_graph();
    var iterate = require_iterate2();
    var helpers = require_helpers2();
    var DEFAULT_SETTINGS = require_defaults2();
    var DEFAULT_MAX_ITERATIONS = 500;
    function abstractSynchronousLayout(assign, graph, params) {
      if (!isGraph(graph))
        throw new Error("graphology-layout-noverlap: the given graph is not a valid graphology instance.");
      if (typeof params === "number")
        params = { maxIterations: params };
      else
        params = params || {};
      var maxIterations = params.maxIterations || DEFAULT_MAX_ITERATIONS;
      if (typeof maxIterations !== "number" || maxIterations <= 0)
        throw new Error("graphology-layout-force: you should provide a positive number of maximum iterations.");
      var settings = Object.assign({}, DEFAULT_SETTINGS, params.settings), validationError = helpers.validateSettings(settings);
      if (validationError)
        throw new Error("graphology-layout-noverlap: " + validationError.message);
      var matrix = helpers.graphToByteArray(graph, params.inputReducer), converged = false, i;
      for (i = 0; i < maxIterations && !converged; i++)
        converged = iterate(settings, matrix).converged;
      if (assign) {
        helpers.assignLayoutChanges(graph, matrix, params.outputReducer);
        return;
      }
      return helpers.collectLayoutChanges(graph, matrix, params.outputReducer);
    }
    var synchronousLayout = abstractSynchronousLayout.bind(null, false);
    synchronousLayout.assign = abstractSynchronousLayout.bind(null, true);
    module.exports = synchronousLayout;
  }
});

// src/data_mine.json
var nodes = [{ id: "src\\index.tsx", isModule: false, isFirst: true, type: "file", file: "src\\index.tsx" }, { id: "src\\App\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\index.ts" }, { id: "src\\api\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\index.ts" }, { id: "src\\App\\App.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\App.tsx" }, { id: "src\\api\\Types\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Types\\index.ts" }, { id: "src\\api\\Basket\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Basket\\index.ts" }, { id: "src\\api\\Debug\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Debug\\index.ts" }, { id: "src\\api\\Engine\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Engine\\index.ts" }, { id: "src\\api\\Image\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Image\\index.ts" }, { id: "src\\api\\Lang\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Lang\\index.ts" }, { id: "src\\api\\Rest\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\index.ts" }, { id: "src\\api\\Display\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Display\\index.ts" }, { id: "src\\api\\Router\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Router\\index.ts" }, { id: "src\\api\\Storage\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Storage\\index.ts" }, { id: "src\\api\\Style\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Style\\index.ts" }, { id: "src\\api\\Utils\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Utils\\index.ts" }, { id: "src\\api\\Gql\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\index.ts" }, { id: "src\\api\\Stock\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\index.ts" }, { id: "src\\api\\Tracking\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Tracking\\index.ts" }, { id: "src\\api\\System\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\System\\index.ts" }, { id: "src\\lib\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\index.ts" }, { id: "src\\App\\Loading\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Loading\\index.ts" }, { id: "src\\App\\Shop\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\index.ts" }, { id: "src\\App\\Suspense\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Suspense\\index.ts" }, { id: "src\\api\\Types\\LanguageCode.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Types\\LanguageCode.ts" }, { id: "src\\api\\Types\\CurrencyCode.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Types\\CurrencyCode.ts" }, { id: "src\\api\\Types\\Timestamp.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Types\\Timestamp.ts" }, { id: "src\\api\\Types\\LocalStorage.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Types\\LocalStorage.ts" }, { id: "src\\api\\Types\\DeliveryMethod.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Types\\DeliveryMethod.ts" }, { id: "src\\api\\Basket\\Basket.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Basket\\Basket.ts" }, { id: "src\\api\\Debug\\Debug.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Debug\\Debug.ts" }, { id: "src\\api\\Engine\\Engine.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Engine\\Engine.ts" }, { id: "src\\api\\Image\\Image.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Image\\Image.ts" }, { id: "src\\api\\Lang\\Lang.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Lang\\Lang.ts" }, { id: "src\\api\\Rest\\Client.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\Client.ts" }, { id: "src\\api\\Rest\\dtos.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\dtos.ts" }, { id: "src\\api\\Rest\\queries\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\queries\\index.ts" }, { id: "src\\api\\Rest\\types\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\types\\index.ts" }, { id: "src\\api\\Display\\Display.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Display\\Display.ts" }, { id: "src\\api\\Router\\Router.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Router\\Router.ts" }, { id: "src\\api\\Storage\\Storage.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Storage\\Storage.ts" }, { id: "src\\api\\Style\\Style.tsx", isModule: false, isFirst: false, type: "file", file: "src\\api\\Style\\Style.tsx" }, { id: "src\\api\\Utils\\Colors.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Utils\\Colors.ts" }, { id: "src\\api\\Utils\\Objects.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Utils\\Objects.ts" }, { id: "src\\api\\Utils\\Status.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Utils\\Status.ts" }, { id: "src\\api\\Gql\\Client.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\Client.ts" }, { id: "src\\api\\Gql\\queries\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\queries\\index.ts" }, { id: "src\\api\\Gql\\types\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\types\\index.ts" }, { id: "src\\api\\Stock\\Stock.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\Stock.ts" }, { id: "src\\api\\Stock\\Product.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\Product.ts" }, { id: "src\\api\\Stock\\Product.vm.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\Product.vm.ts" }, { id: "src\\api\\Tracking\\Tracking.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Tracking\\Tracking.ts" }, { id: "src\\api\\System\\System.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\System\\System.ts" }, { id: "src\\lib\\Icon\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Icon\\index.ts" }, { id: "src\\lib\\Button\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Button\\index.ts" }, { id: "src\\lib\\Select\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Select\\index.ts" }, { id: "src\\lib\\Input\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Input\\index.ts" }, { id: "src\\lib\\Scroll\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Scroll\\index.ts" }, { id: "src\\lib\\FacebookPixel.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\FacebookPixel.tsx" }, { id: "src\\lib\\GoogleTag.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\GoogleTag.tsx" }, { id: "src\\lib\\Logic\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Logic\\index.ts" }, { id: "src\\App\\Loading\\Loading.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Loading\\Loading.tsx" }, { id: "src\\App\\Shop\\Shop.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Shop.tsx" }, { id: "src\\App\\Suspense\\Suspense.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Suspense\\Suspense.tsx" }, { id: "src\\api\\Basket\\BasketProduct.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Basket\\BasketProduct.ts" }, { id: "src\\api\\Engine\\Suspense.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Engine\\Suspense.ts" }, { id: "src\\api\\Lang\\Dict.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Lang\\Dict.ts" }, { id: "src\\api\\Lang\\DictAccessor.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Lang\\DictAccessor.ts" }, { id: "src\\api\\Rest\\queries\\getLayout.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\queries\\getLayout.ts" }, { id: "src\\api\\Rest\\queries\\getLanguages.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\queries\\getLanguages.ts" }, { id: "src\\api\\Rest\\queries\\getProducts.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\queries\\getProducts.ts" }, { id: "src\\api\\Rest\\types\\getLanguages.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\types\\getLanguages.ts" }, { id: "src\\api\\Rest\\types\\getLayout.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\types\\getLayout.ts" }, { id: "src\\api\\Rest\\types\\getProducts.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\types\\getProducts.ts" }, { id: "src\\api\\Rest\\types\\Image.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Rest\\types\\Image.ts" }, { id: "src\\api\\Gql\\queries\\getProducts.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\queries\\getProducts.ts" }, { id: "src\\api\\Gql\\queries\\getStockInfo.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\queries\\getStockInfo.ts" }, { id: "src\\api\\Gql\\types\\getProducts.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\types\\getProducts.ts" }, { id: "src\\api\\Gql\\types\\getStockInfo.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Gql\\types\\getStockInfo.ts" }, { id: "src\\api\\Stock\\SkuProduct.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\SkuProduct.ts" }, { id: "src\\api\\Stock\\DeliveryProduct.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\DeliveryProduct.ts" }, { id: "src\\lib\\Icon\\Icon.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Icon\\Icon.tsx" }, { id: "src\\lib\\Button\\Button.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Button\\Button.tsx" }, { id: "src\\lib\\Select\\Select.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Select\\Select.tsx" }, { id: "src\\lib\\Input\\Input.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Input\\Input.tsx" }, { id: "src\\lib\\Scroll\\Scroll.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Scroll\\Scroll.tsx" }, { id: "src\\lib\\Logic\\If\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Logic\\If\\index.ts" }, { id: "src\\App\\Shop\\LeftBar\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\index.ts" }, { id: "src\\App\\Shop\\Basket\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Basket\\index.ts" }, { id: "src\\App\\Shop\\Header\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Header\\index.ts" }, { id: "src\\App\\Shop\\StepsNav\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepsNav\\index.ts" }, { id: "src\\App\\Shop\\StepHeader\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepHeader\\index.ts" }, { id: "src\\App\\Shop\\StepProducts\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\index.ts" }, { id: "src\\api\\Stock\\Prices.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\Prices.ts" }, { id: "src\\lib\\Logic\\If\\If.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Logic\\If\\If.tsx" }, { id: "src\\lib\\Logic\\If\\Each.tsx", isModule: false, isFirst: false, type: "file", file: "src\\lib\\Logic\\If\\Each.tsx" }, { id: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\LeftBar.tsx" }, { id: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { id: "src\\App\\Shop\\Basket\\Basket.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Basket\\Basket.tsx" }, { id: "src\\App\\Shop\\Basket\\Basket.store.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { id: "src\\App\\Shop\\Header\\Header.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Header\\Header.tsx" }, { id: "src\\App\\Shop\\StepsNav\\StepsNav.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { id: "src\\App\\Shop\\StepHeader\\StepHeader.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepHeader\\StepHeader.tsx" }, { id: "src\\App\\Shop\\StepProducts\\StepProducts.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\StepProducts.tsx" }, { id: "src\\api\\Stock\\Price.ts", isModule: false, isFirst: false, type: "file", file: "src\\api\\Stock\\Price.ts" }, { id: "src\\App\\Shop\\LeftBar\\Menu\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\Menu\\index.ts" }, { id: "src\\App\\Shop\\LeftBar\\Settings\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\Settings\\index.ts" }, { id: "src\\App\\Shop\\Basket\\BasketScreen\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Basket\\BasketScreen\\index.ts" }, { id: "src\\App\\Shop\\StepProducts\\Product\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\Product\\index.ts" }, { id: "src\\App\\Shop\\StepProducts\\CustomBlock\\index.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\CustomBlock\\index.ts" }, { id: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx" }, { id: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx" }, { id: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { id: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx" }, { id: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx" }, { id: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx" }, { id: "src\\App\\Shop\\LeftBar\\Menu\\links.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\LeftBar\\Menu\\links.ts" }, { id: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx" }, { id: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts", isModule: false, isFirst: false, type: "file", file: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { id: "react", isModule: true, file: "node_modules\\~react" }, { id: "react-dom", isModule: true, file: "node_modules\\~react-dom" }, { id: "mobx-react", isModule: true, file: "node_modules\\~mobx-react" }, { id: "superstruct", isModule: true, file: "node_modules\\~superstruct" }, { id: "moment", isModule: true, file: "node_modules\\~moment" }, { id: "mobx", isModule: true, file: "node_modules\\~mobx" }, { id: "@sentry/react", isModule: true, file: "node_modules\\~@sentry/react" }, { id: "@sentry/tracing", isModule: true, file: "node_modules\\~@sentry/tracing" }, { id: "@sentry/types", isModule: true, file: "node_modules\\~@sentry/types" }, { id: "@servicestack/client", isModule: true, file: "node_modules\\~@servicestack/client" }, { id: "navigo", isModule: true, file: "node_modules\\~navigo" }, { id: "json5", isModule: true, file: "node_modules\\~json5" }, { id: "uuid", isModule: true, file: "node_modules\\~uuid" }, { id: "react-gtm-module", isModule: true, file: "node_modules\\~react-gtm-module" }, { id: "simplebar-react", isModule: true, file: "node_modules\\~simplebar-react" }, { id: "var $root|1", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/index.tsx" }, { id: "var Content|2", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/App.tsx" }, { id: "var App|3", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/App.tsx" }, { id: "var LanguageCode|4", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/LanguageCode.ts" }, { id: "var CurrencyCode|5", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/CurrencyCode.ts" }, { id: "var Timestamp|6", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/Timestamp.ts" }, { id: "var LocalStorage|7", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/LocalStorage.ts" }, { id: "var deliveryMethodMap|8", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/DeliveryMethod.ts" }, { id: "var DeliveryMethodInternal|9", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/DeliveryMethod.ts" }, { id: "var DeliveryMethodExternal|10", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/DeliveryMethod.ts" }, { id: "var DeliveryMethod|11", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Types/DeliveryMethod.ts" }, { id: "class Basket|12", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "member isB2b|13", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "member products|14", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "member tryLoadFromStorage|15", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "member getProduct|16", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "member removeProduct|17", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "var basket|18", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/Basket.ts" }, { id: "class Debug|19", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "member isEnabled|20", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "member init|21", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "member getSentryLevel|22", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "member sendToSentry|23", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "member orDo|24", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "member print|25", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "var debug|26", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Debug/Debug.ts" }, { id: "class Engine|27", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member id|28", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member website|29", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member checkPage|30", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member suspense|31", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member currency|32", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member currencies|33", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member setCurrency|34", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member isPossibleCurrency|35", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member setCurrencies|36", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member setEngineId|37", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member loadLayout|38", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "member loadSideEffects|39", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "type_alias Currency|40", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "var engine|41", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Engine.ts" }, { id: "class Image|42", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member isLoaded|43", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member isBase64|44", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member base64Url|45", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member didAttempted|46", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member id|47", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member setBase64Data|48", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member attemptPreload|49", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member url|50", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member css|51", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member setLoadedDone|52", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "member preload|53", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Image/Image.ts" }, { id: "class Lang|54", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member current|55", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member default|56", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member languages|57", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member dicts|58", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member dictAccessor|59", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member getDictOf|60", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member fetchLanguages|61", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member extendDictionary|62", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member dict|63", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member set|64", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member setDefault|65", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member isPossible|66", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "member setList|67", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "type_alias LangEntry|68", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "var fallbackDict|69", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "var lang|70", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Lang.ts" }, { id: "class Client|71", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member rawClient|72", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member urlTo|73", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member createRequest|74", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member post|75", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member get|76", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member put|77", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "member delete|78", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "var client|79", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/Client.ts" }, { id: "class LanguageTranslationPatch|80", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|81", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member shopName|82", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member textBoxHeadline|83", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member textBoxSubtitle|84", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page1Headline|85", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page1Subtitle|86", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page2Headline|87", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page2Subtitle|88", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page3Headline|89", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page3Subtitle|90", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page4Headline|91", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page4Subtitle|92", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutCurrencyPatch|93", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member currency|94", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEnabled|95", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isDefault|96", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutLanguagePatch|97", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|98", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEnabled|99", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isDefault|100", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ResponseError|101", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member errorCode|102", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fieldName|103", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member message|104", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member meta|105", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ResponseStatus|106", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member errorCode|107", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member message|108", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member stackTrace|109", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member errors|110", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member meta|111", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FaqAnswerDto|112", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member question|113", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member answer|114", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FaqDto|115", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member typeName|116", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member faqAnswers|117", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OperationResult|118", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member code|119", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member responseStatus|120", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class MultipleResultBaseResponse|121", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member multipleResult|122", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FileDto|123", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member content|124", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|125", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member name|126", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardTranslationDto|127", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member amountDescriptions|128", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|129", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|130", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardDto|131", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member giftCardEngineId|132", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|133", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|134", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|135", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isMobilePayEnabled|136", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member mobilePayLink|137", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member emailImage|138", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member smsImage|139", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postImage|140", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member translations|141", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FileUpload|142", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member content|143", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardPost|144", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|145", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|146", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member amountDescriptions|147", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardPut|148", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|149", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|150", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member amountDescriptions|151", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ImagePathDto|152", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|153", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member path|154", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryDto|155", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|156", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member name|157", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member images|158", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class BaseSingleResponse|159", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member result|160", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class BaseResponse|161", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FileUpdate|162", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fileId|163", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FileAdd|164", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member type|165", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class BaseKeyDto|166", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|167", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createdById|168", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member modifiedById|169", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutLanguagesDto|170", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEnabled|171", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isDefault|172", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|173", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isCompleted|174", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutCurrenciesDto|175", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEnabled|176", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isDefault|177", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member currency|178", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ImageDto|179", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|180", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member content|181", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LanguageTranslationsDto|182", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|183", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member shopName|184", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member textBoxHeadline|185", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member textBoxSubtitle|186", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page1Headline|187", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page1Subtitle|188", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page2Headline|189", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page2Subtitle|190", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page3Headline|191", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page3Subtitle|192", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page4Headline|193", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member page4Subtitle|194", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class B2bLimitDto|195", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member currency|196", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member limitInMinorUnits|197", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class StepNamesDto|198", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|199", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member step1Name|200", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member step2Name|201", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member step3Name|202", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep1Name|203", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep2Name|204", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep3Name|205", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep4Name|206", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutDto|207", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member url|208", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member layoutLanguages|209", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member layoutCurrencies|210", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fontName|211", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member shopName|212", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member primaryColour|213", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member bodyColour|214", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member backgroundColour|215", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member customCss|216", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member linkWebsite|217", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member linkCheckValue|218", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isInvoicePayment|219", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member googleTag|220", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member pixel|221", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member startTimestamp|222", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member endTimestamp|223", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member useStrictDates|224", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isUniqueTesterEnabled|225", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member beforeStartImage|226", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member faviconImage|227", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member logotypeImage|228", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member afterEndImage|229", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member backgroundImage|230", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member bannerImages|231", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member greetingImages|232", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member content|233", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2BLimits|234", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member stepNames|235", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OperationBase|236", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member path|237", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member op|238", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member from|239", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class Operation|240", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member value|241", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class Operation_1|242", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class JsonPatchDocument|243", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member operations|244", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutPatch|245", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member url|246", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fontName|247", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member primaryColour|248", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member bodyColour|249", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member backgroundColour|250", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member customCss|251", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member linkWebsite|252", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member linkCheckValue|253", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|254", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|255", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|256", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isInvoicePayment|257", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member googleTag|258", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member pixel|259", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member startTimestamp|260", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member endTimestamp|261", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member useStrictDates|262", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isUniqueTesterEnabled|263", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class B2bLimitPatch|264", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member currency|265", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member limitInMinorUnits|266", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class StepNameTranslationPatch|267", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|268", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member step1Name|269", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member step2Name|270", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member step3Name|271", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep1Name|272", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep2Name|273", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep3Name|274", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2bStep4Name|275", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class Dictionary|276", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocalizationDictionary|277", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocationDto|278", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member countryCode|279", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class CustomerDto|280", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createdTime|281", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member companyName|282", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member companyAddress|283", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member companyAddress2|284", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member companyCity|285", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postalCode|286", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member country|287", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member cvrNumber|288", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member phoneNumber|289", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member invoiceEmail|290", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member eanNumber|291", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member contactName|292", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member contactPhoneNumber|293", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member contactEmail|294", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OrderRowRecipient|295", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientName|296", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientAddressCountryCode|297", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientAddressPostCode|298", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientAddressCity|299", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientAddressLine1|300", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientAddressLine2|301", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientEmail|302", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientPhone|303", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OrderRowDto|304", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member title|305", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member amount|306", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member valueInDecimal|307", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member subtotalInDecimal|308", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member deliveryMethod|309", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member deliveryDate|310", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member stockKeepingUnit|311", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member valueCurrency|312", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member productId|313", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipients|314", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member greetingImageId|315", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member greetingDescription|316", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member recipientsFileAsString|317", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OrderDto|318", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member number|319", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member customer|320", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member rows|321", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createTime|322", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member totalInDecimal|323", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|324", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member comment|325", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductTranslationDto|326", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member title|327", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|328", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|329", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member content|330", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductDto|331", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member productEngineId|332", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|333", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|334", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|335", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isMobilePayEnabled|336", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member mobilePayLink|337", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member emailImage|338", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member smsImage|339", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postImage|340", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member translations|341", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductPost|342", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member title|343", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|344", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|345", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member file|346", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductPut|347", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|348", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member file|349", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member title|350", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|351", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class AmountDescriptionDto|352", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member description|353", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member priceId|354", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member action|355", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FaqResponse|356", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardResponse|357", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryResponse|358", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryListResponse|359", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutResponse|360", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocalizationResponse|361", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocationResponse|362", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OrderCreateResponse|363", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductResponse|364", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class AuthenticateResponse|365", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member userId|366", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member sessionId|367", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member userName|368", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member displayName|369", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member referrerUrl|370", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member bearerToken|371", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member refreshToken|372", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member profileUrl|373", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member roles|374", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member permissions|375", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member responseStatus|376", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member meta|377", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ContentPatchCommand|378", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|379", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member contentTranslations|380", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|381", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|382", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|383", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|384", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class CurrencyPatchCommand|385", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|386", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member currencyPatches|387", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|388", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|389", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|390", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|391", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LanguagePatchCommand|392", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|393", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member languagePatches|394", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|395", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|396", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|397", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|398", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class EngineClientCreateCommand|399", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|400", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member clientUid|401", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|402", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|403", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|404", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|405", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class EngineClientVerifyCommand|406", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|407", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member clientUid|408", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|409", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|410", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|411", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|412", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FaqQuery|413", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|414", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|415", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|416", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|417", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FontFileCreateCommand|418", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|419", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fileDtos|420", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|421", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|422", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|423", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|424", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FontFileDeleteCommand|425", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fileIds|426", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|427", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|428", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|429", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|430", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|431", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class FontFileGetQuery|432", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|433", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|434", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|435", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|436", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|437", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardQuery|438", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|439", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|440", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|441", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|442", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|443", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardCreateCommand|444", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|445", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member giftCardEngineId|446", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member amountDescription|447", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|448", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|449", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|450", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member mobilePayLink|451", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isMobilePayEnabled|452", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member emailImage|453", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member smsImage|454", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postImage|455", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member values|456", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|457", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|458", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|459", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|460", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GiftCardPutCommand|461", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|462", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member giftCardEngineId|463", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|464", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|465", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|466", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isMobilePayEnabled|467", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member mobilePayLink|468", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member emailImage|469", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member smsImage|470", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postImage|471", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member values|472", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|473", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|474", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|475", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|476", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryQuery|477", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|478", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|479", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|480", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|481", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|482", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryList|483", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|484", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|485", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|486", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|487", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryCreateCommand|488", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member name|489", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|490", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|491", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|492", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|493", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryDeleteCommand|494", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|495", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|496", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|497", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|498", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|499", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class GreetingCategoryPatchCommand|500", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member id|501", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member name|502", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member files|503", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|504", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|505", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|506", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|507", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ImageCreateCommand|508", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|509", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member files|510", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|511", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|512", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|513", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|514", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ImagePutCommand|515", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|516", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member files|517", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|518", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|519", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|520", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|521", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ImageDeleteCommand|522", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|523", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member ids|524", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|525", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|526", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|527", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|528", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutQuery|529", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|530", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|531", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|532", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|533", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|534", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutPatchCommand|535", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|536", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|537", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|538", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|539", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|540", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class B2bLimitsPatchCommand|541", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|542", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member b2BLimitPatches|543", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|544", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|545", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|546", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|547", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class StepNameTranslationPatchCommand|548", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|549", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member stepNameTranslationPatches|550", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|551", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|552", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|553", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|554", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LayoutCreateCommand|555", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|556", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member url|557", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member fontName|558", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member primaryColour|559", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member bodyColour|560", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member backgroundColour|561", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member customCss|562", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member linkWebsite|563", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member linkCheckValue|564", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|565", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|566", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|567", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isInvoicePayment|568", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member googleTag|569", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member startTimestamp|570", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member endTimestamp|571", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member useStrictDates|572", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isUniqueTesterEnabled|573", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|574", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|575", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|576", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|577", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocalizationQuery|578", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|579", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|580", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|581", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|582", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocalizationNotCachedQuery|583", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|584", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|585", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|586", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|587", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ClearLocalizationCommand|588", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member key|589", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|590", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|591", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|592", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|593", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class LocationQuery|594", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|595", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|596", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|597", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|598", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class OrderCreateCommand|599", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member data|600", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member language|601", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|602", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|603", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|604", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|605", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductQuery|606", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|607", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|608", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|609", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|610", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|611", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductCreateCommand|612", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|613", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member productEngineId|614", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|615", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|616", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|617", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isMobilePayEnabled|618", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member mobilePayLink|619", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member emailImage|620", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member smsImage|621", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postImage|622", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member values|623", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|624", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|625", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|626", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|627", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class ProductPutCommand|628", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member engineId|629", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member productEngineId|630", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isEmailDelivery|631", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isSmsDelivery|632", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isPostDelivery|633", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member isMobilePayEnabled|634", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member mobilePayLink|635", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member emailImage|636", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member smsImage|637", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member postImage|638", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member values|639", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|640", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|641", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|642", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|643", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class VersionQuery|644", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member key|645", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|646", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|647", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|648", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|649", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class Authenticate|650", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member provider|651", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member state|652", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member oauth_token|653", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member oauth_verifier|654", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member userName|655", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member password|656", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member rememberMe|657", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member continue|658", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member errorView|659", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member nonce|660", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member uri|661", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member response|662", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member qop|663", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member nc|664", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member cnonce|665", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member useTokenCookie|666", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member accessToken|667", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member accessTokenSecret|668", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member scope|669", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member meta|670", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member createResponse|671", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "member getTypeName|672", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method createResponse|673", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "method getTypeName|674", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IReturn|675", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IReturnVoid|676", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IHasSessionId|677", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IHasBearerToken|678", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IPost|679", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IGet|680", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IDelete|681", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IPatch|682", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IContractResolver|683", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IJsonPatchDocument|684", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IKeyDto|685", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "interface IDto|686", type: "interface", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/dtos.ts" }, { id: "class Display|687", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member cssVariables|688", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member title|689", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member step|690", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member background|691", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member logo|692", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member customBlockImages|693", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setBackground|694", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setCustomBlockImages|695", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setAccent|696", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setBackgroundColor|697", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setFontFamily|698", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setLogo|699", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member goNextStep|700", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member goPrevStep|701", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member tryGoToStep|702", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setTitle|703", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member setFavicon|704", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member redirectToErrorFallback|705", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member canGoPrevStep|706", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member canGoNextStep|707", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member style|708", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "member isB2b|709", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "var DefaultCssVariables|710", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "var display|711", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Display/Display.ts" }, { id: "class Router|712", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "member page|713", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "member hasUsedInit|714", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "member navigo|715", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "member setPage|716", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "member init|717", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "method init|718", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "var router|719", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Router/Router.ts" }, { id: "class Storage|720", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "member data|721", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "member changeTime|722", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "member load|723", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "member save|724", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "member set|725", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "member get|726", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "type_alias LocalStorage|727", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "var storageProxy|728", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "var getKeyFor|729", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "var storage|730", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Storage/Storage.ts" }, { id: "type_alias PropsOfHTML|731", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Style/Style.tsx" }, { id: "type_alias Props|732", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Style/Style.tsx" }, { id: "var selector|733", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Style/Style.tsx" }, { id: "var createSelector|734", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Style/Style.tsx" }, { id: "var style|735", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Style/Style.tsx" }, { id: "var cutHex|736", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Colors.ts" }, { id: "var hexToR|737", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Colors.ts" }, { id: "var hexToG|738", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Colors.ts" }, { id: "var hexToB|739", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Colors.ts" }, { id: "var darken|740", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Colors.ts" }, { id: "var keysToLowerCase|741", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Objects.ts" }, { id: "var createEachDelivery|742", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Objects.ts" }, { id: "class Status|743", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member status|744", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member start|745", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member fail|746", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member success|747", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member isLoading|748", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member isDone|749", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member isPending|750", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member isFail|751", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "member isSuccess|752", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Utils/Status.ts" }, { id: "class Client|753", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/Client.ts" }, { id: "member uri|754", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/Client.ts" }, { id: "member get|755", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/Client.ts" }, { id: "var client|756", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/Client.ts" }, { id: "class Stock|757", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "member products|758", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "member skuProducts|759", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "member fetchGql|760", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "member fetchRest|761", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "member isEmpty|762", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "var stock|763", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Stock.ts" }, { id: "class Product|764", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member id|765", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member fetchingStatus|766", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member isMobilePayEnabled|767", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member mobilePayLink|768", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member skuProducts|769", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member defaultLang|770", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member names|771", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member descs|772", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member delivery|773", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member realId|774", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member useViewModel|775", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member setMobilePay|776", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member setDefaultLang|777", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member setNames|778", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member setDescriptions|779", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member setSkuProducts|780", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member setDelivery|781", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member isVisible|782", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member name|783", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member description|784", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "member fetch|785", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.ts" }, { id: "class ProductVm|786", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member deliveryMethod|787", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member currentPrice|788", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member amount|789", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member product|790", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member productPreview|791", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member setAnyDeliveryMethod|792", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member setDeliveryMethod|793", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member setPrice|794", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member pricesWithLabels|795", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member prices|796", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member price|797", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member value|798", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member moveAmount|799", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member changeAmount|800", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "member pushToBasket|801", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Product.vm.ts" }, { id: "class Tracking|802", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member googleId|803", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member pixelId|804", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member isTrackingEnabled|805", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member isGoogleEnabled|806", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member isPixelEnabled|807", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member setGoogleId|808", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "member setPixelId|809", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "var tracking|810", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Tracking/Tracking.ts" }, { id: "class System|811", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/System/System.ts" }, { id: "member init|812", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/System/System.ts" }, { id: "var system|813", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/System/System.ts" }, { id: "var FacebookPixel|814", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/FacebookPixel.tsx" }, { id: "var GoogleTag|815", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/GoogleTag.tsx" }, { id: "var { Div }|816", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Loading/Loading.tsx" }, { id: "var Loading|817", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Loading/Loading.tsx" }, { id: "var { Div }|818", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Shop.tsx" }, { id: "var Background|819", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Shop.tsx" }, { id: "var Shop|820", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Shop.tsx" }, { id: "var { Div }|821", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Suspense/Suspense.tsx" }, { id: "var Before|822", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Suspense/Suspense.tsx" }, { id: "var After|823", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Suspense/Suspense.tsx" }, { id: "class BasketProduct|824", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member amount|825", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member product|826", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member method|827", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member isMatch|828", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member addAmount|829", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member increaseAmount|830", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member decreaseAmount|831", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "member remove|832", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Basket/BasketProduct.ts" }, { id: "class Suspense|833", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member isEnabled|834", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member startTime|835", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member endTime|836", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member beforeImage|837", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member afterImage|838", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member setData|839", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member isPreShop|840", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "member isPostShop|841", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Engine/Suspense.ts" }, { id: "type_alias Dict|842", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Dict.ts" }, { id: "var defaultDict|843", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/Dict.ts" }, { id: "class DictAccessor|844", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "member atom|845", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "member dict|846", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "member lang|847", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "member set|848", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "member tryGet|849", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "member get|850", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "method set|851", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "method tryGet|852", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "method get|853", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Lang/DictAccessor.ts" }, { id: "var getLayout|854", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/queries/getLayout.ts" }, { id: "var getLanguages|855", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/queries/getLanguages.ts" }, { id: "type_alias ProductType|856", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/queries/getProducts.ts" }, { id: "var getProducts|857", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/queries/getProducts.ts" }, { id: "var Languages|858", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getLanguages.ts" }, { id: "var Language|859", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getLayout.ts" }, { id: "var Currency|860", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getLayout.ts" }, { id: "var LayoutContent|861", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getLayout.ts" }, { id: "var StepNames|862", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getLayout.ts" }, { id: "var Layout|863", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getLayout.ts" }, { id: "var PriceId|864", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getProducts.ts" }, { id: "var AmountDescription|865", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getProducts.ts" }, { id: "var ProductTranslation|866", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getProducts.ts" }, { id: "var Product|867", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/getProducts.ts" }, { id: "var IdBasedImage|868", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/Image.ts" }, { id: "var Base64Image|869", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/Image.ts" }, { id: "var Image|870", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Rest/types/Image.ts" }, { id: "type_alias Input|871", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/queries/getProducts.ts" }, { id: "var getProducts|872", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/queries/getProducts.ts" }, { id: "var getStockInfo|873", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/queries/getStockInfo.ts" }, { id: "var AllLangs|874", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/types/getProducts.ts" }, { id: "var AllCurrencies|875", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/types/getProducts.ts" }, { id: "var DeliveryMethodEntry|876", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/types/getProducts.ts" }, { id: "var Products|877", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/types/getProducts.ts" }, { id: "var StockInfo|878", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Gql/types/getStockInfo.ts" }, { id: "class SkuProduct|879", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "member inStock|880", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "member prices|881", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "member sku|882", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "member deliveryMethod|883", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "member setStockStatus|884", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "member isVisible|885", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/SkuProduct.ts" }, { id: "class DeliveryProduct|886", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member preview|887", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member isEnabled|888", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member skuProducts|889", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member priceLabels|890", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member method|891", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member product|892", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member addSkuProduct|893", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member enable|894", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member isPossible|895", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member addPriceLabel|896", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member getPriceLabel|897", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member prices|898", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "member setPreview|899", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/DeliveryProduct.ts" }, { id: "type_alias Props|900", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Icon/Icon.tsx" }, { id: "var possibleSizes|901", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Icon/Icon.tsx" }, { id: "var { Div }|902", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Icon/Icon.tsx" }, { id: "var RawIcon|903", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Icon/Icon.tsx" }, { id: "var Icon|904", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Icon/Icon.tsx" }, { id: "type_alias Props|905", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Button/Button.tsx" }, { id: "var { Div }|906", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Button/Button.tsx" }, { id: "var Button|907", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Button/Button.tsx" }, { id: "class Select|908", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member state|909", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member rootDiv|910", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member change|911", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member close|912", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member open|913", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member hoverMove|914", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member selectHovered|915", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member hoverByIndex|916", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member setByIndex|917", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member clickOutside|918", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member keyboardNavigation|919", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member setRawValue|920", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member delegateSetValue|921", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member componentDidMount|922", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "member render|923", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "method componentDidMount|924", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "method render|925", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "type_alias Props|926", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "type_alias State|927", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "var { Div }|928", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Select/Select.tsx" }, { id: "class Input|929", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "member state|930", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "member id|931", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "member componentDidMount|932", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "member componentDidUpdate|933", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "member render|934", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "method render|935", type: "method", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "type_alias Props|936", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "type_alias State|937", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "var id|938", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "var errorColour|939", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Input/Input.tsx" }, { id: "var Scroll|940", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Scroll/Scroll.tsx" }, { id: "class Prices|941", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member prices|942", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member clear|943", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member get|944", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member getOrCreate|945", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member all|946", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member setSimple|947", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "member setSteps|948", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "type_alias RawPrices|949", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Prices.ts" }, { id: "type_alias Props|950", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Logic/If/If.tsx" }, { id: "var If|951", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Logic/If/If.tsx" }, { id: "type_alias Props|952", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Logic/If/Each.tsx" }, { id: "type_alias EachType|953", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Logic/If/Each.tsx" }, { id: "var Each|954", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/lib/Logic/If/Each.tsx" }, { id: "var { Div }|955", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.tsx" }, { id: "var LeftBar|956", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.tsx" }, { id: "class LeftBarStore|957", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.store.ts" }, { id: "member isVisible|958", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.store.ts" }, { id: "member open|959", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.store.ts" }, { id: "member close|960", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.store.ts" }, { id: "var leftBarStore|961", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/LeftBar.store.ts" }, { id: "var { Div }|962", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.tsx" }, { id: "var Basket|963", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.tsx" }, { id: "class BasketStore|964", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.store.ts" }, { id: "member isVisible|965", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.store.ts" }, { id: "member open|966", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.store.ts" }, { id: "member close|967", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.store.ts" }, { id: "member count|968", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.store.ts" }, { id: "var basketStore|969", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/Basket.store.ts" }, { id: "var { Div }|970", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Header/Header.tsx" }, { id: "var Header|971", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Header/Header.tsx" }, { id: "var { Div }|972", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepsNav/StepsNav.tsx" }, { id: "var goToStep|973", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepsNav/StepsNav.tsx" }, { id: "var B2cStepsNav|974", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepsNav/StepsNav.tsx" }, { id: "var B2bStepsNav|975", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepsNav/StepsNav.tsx" }, { id: "var StepsNav|976", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepsNav/StepsNav.tsx" }, { id: "var { Div }|977", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepHeader/StepHeader.tsx" }, { id: "var getHeaders|978", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepHeader/StepHeader.tsx" }, { id: "var StepHeader|979", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepHeader/StepHeader.tsx" }, { id: "var { Div }|980", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/StepProducts.tsx" }, { id: "var StepProducts|981", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/StepProducts.tsx" }, { id: "class Price|982", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Price.ts" }, { id: "member prices|983", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Price.ts" }, { id: "member setValue|984", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Price.ts" }, { id: "member isValid|985", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Price.ts" }, { id: "member forHuman|986", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Price.ts" }, { id: "type_alias CurrencyCode|987", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/api/Stock/Price.ts" }, { id: "var { Div }|988", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Menu/Menu.tsx" }, { id: "var Menu|989", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Menu/Menu.tsx" }, { id: "var { Div }|990", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.tsx" }, { id: "var Settings|991", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.tsx" }, { id: "class SettingsStore|992", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member isActive|993", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member selectedLang|994", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member selectedCurrency|995", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member open|996", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member close|997", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member selectLang|998", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member selectCurrency|999", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member save|1000", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member optionsLanguages|1001", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "member optionsCurrencies|1002", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "var settingsStore|1003", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Settings/Settings.store.ts" }, { id: "var { Div }|1004", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/BasketScreen/BasketScreen.tsx" }, { id: "var Background|1005", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/BasketScreen/BasketScreen.tsx" }, { id: "var BasketScreen|1006", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/Basket/BasketScreen/BasketScreen.tsx" }, { id: "type_alias Props|1007", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/Product/Product.tsx" }, { id: "var { Div }|1008", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/Product/Product.tsx" }, { id: "var ProductView|1009", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/Product/Product.tsx" }, { id: "var Product|1010", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/Product/Product.tsx" }, { id: "var { Div }|1011", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.tsx" }, { id: "var CustomBlockImages|1012", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.tsx" }, { id: "var CustomBlock|1013", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.tsx" }, { id: "var getLinks|1014", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/LeftBar/Menu/links.ts" }, { id: "type_alias Props|1015", type: "type_alias", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/Product/DeliverySelector.tsx" }, { id: "var DeliverySelector|1016", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/Product/DeliverySelector.tsx" }, { id: "class CustomBlockStore|1017", type: "class", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member imagesSlider|1018", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member sliderInterval|1019", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member currentStep|1020", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member maxStep|1021", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member header|1022", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member content|1023", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member sanitizeHtml|1024", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member getPrevStep|1025", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member getNextStep|1026", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member goToNextStep|1027", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member clearTicker|1028", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member startTicking|1029", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member isImagesLoading|1030", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "member images|1031", type: "member", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }, { id: "var customBlockStore|1032", type: "var", file: "E:/Projects/Rad4m/gogift/react-engine-frontend/app2/src/App/Shop/StepProducts/CustomBlock/CustomBlock.store.ts" }];
var edges = [{ a: "src\\index.tsx", b: "react" }, { a: "src\\index.tsx", b: "react-dom" }, { a: "src\\index.tsx", b: "src\\App\\index.ts" }, { a: "src\\index.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\index.ts", b: "src\\App\\App.tsx" }, { a: "src\\api\\index.ts", b: "src\\api\\Types\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Basket\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Debug\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Engine\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Image\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Lang\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Rest\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Display\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Router\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Storage\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Style\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Utils\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Gql\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Stock\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\Tracking\\index.ts" }, { a: "src\\api\\index.ts", b: "src\\api\\System\\index.ts" }, { a: "src\\App\\App.tsx", b: "react" }, { a: "src\\App\\App.tsx", b: "mobx-react" }, { a: "src\\App\\App.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\App.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\App.tsx", b: "src\\App\\Loading\\index.ts" }, { a: "src\\App\\App.tsx", b: "src\\App\\Shop\\index.ts" }, { a: "src\\App\\App.tsx", b: "src\\App\\Suspense\\index.ts" }, { a: "src\\api\\Types\\index.ts", b: "src\\api\\Types\\LanguageCode.ts" }, { a: "src\\api\\Types\\index.ts", b: "src\\api\\Types\\CurrencyCode.ts" }, { a: "src\\api\\Types\\index.ts", b: "src\\api\\Types\\Timestamp.ts" }, { a: "src\\api\\Types\\index.ts", b: "src\\api\\Types\\LocalStorage.ts" }, { a: "src\\api\\Types\\index.ts", b: "src\\api\\Types\\DeliveryMethod.ts" }, { a: "src\\api\\Basket\\index.ts", b: "src\\api\\Basket\\Basket.ts" }, { a: "src\\api\\Debug\\index.ts", b: "src\\api\\Debug\\Debug.ts" }, { a: "src\\api\\Engine\\index.ts", b: "src\\api\\Engine\\Engine.ts" }, { a: "src\\api\\Image\\index.ts", b: "src\\api\\Image\\Image.ts" }, { a: "src\\api\\Lang\\index.ts", b: "src\\api\\Lang\\Lang.ts" }, { a: "src\\api\\Rest\\index.ts", b: "src\\api\\Rest\\Client.ts" }, { a: "src\\api\\Rest\\index.ts", b: "src\\api\\Rest\\dtos.ts" }, { a: "src\\api\\Rest\\index.ts", b: "src\\api\\Rest\\queries\\index.ts" }, { a: "src\\api\\Rest\\index.ts", b: "src\\api\\Rest\\types\\index.ts" }, { a: "src\\api\\Display\\index.ts", b: "src\\api\\Display\\Display.ts" }, { a: "src\\api\\Router\\index.ts", b: "src\\api\\Router\\Router.ts" }, { a: "src\\api\\Storage\\index.ts", b: "src\\api\\Storage\\Storage.ts" }, { a: "src\\api\\Style\\index.ts", b: "src\\api\\Style\\Style.tsx" }, { a: "src\\api\\Utils\\index.ts", b: "src\\api\\Utils\\Colors.ts" }, { a: "src\\api\\Utils\\index.ts", b: "src\\api\\Utils\\Objects.ts" }, { a: "src\\api\\Utils\\index.ts", b: "src\\api\\Utils\\Status.ts" }, { a: "src\\api\\Gql\\index.ts", b: "src\\api\\Gql\\Client.ts" }, { a: "src\\api\\Gql\\index.ts", b: "src\\api\\Gql\\queries\\index.ts" }, { a: "src\\api\\Gql\\index.ts", b: "src\\api\\Gql\\types\\index.ts" }, { a: "src\\api\\Stock\\index.ts", b: "src\\api\\Stock\\Stock.ts" }, { a: "src\\api\\Stock\\index.ts", b: "src\\api\\Stock\\Product.ts" }, { a: "src\\api\\Stock\\index.ts", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "src\\api\\Tracking\\index.ts", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "src\\api\\System\\index.ts", b: "src\\api\\System\\System.ts" }, { a: "src\\lib\\index.ts", b: "src\\lib\\Icon\\index.ts" }, { a: "src\\lib\\index.ts", b: "src\\lib\\Button\\index.ts" }, { a: "src\\lib\\index.ts", b: "src\\lib\\Select\\index.ts" }, { a: "src\\lib\\index.ts", b: "src\\lib\\Input\\index.ts" }, { a: "src\\lib\\index.ts", b: "src\\lib\\Scroll\\index.ts" }, { a: "src\\lib\\index.ts", b: "src\\lib\\FacebookPixel.tsx" }, { a: "src\\lib\\index.ts", b: "src\\lib\\GoogleTag.tsx" }, { a: "src\\lib\\index.ts", b: "src\\lib\\Logic\\index.ts" }, { a: "src\\App\\Loading\\index.ts", b: "src\\App\\Loading\\Loading.tsx" }, { a: "src\\App\\Shop\\index.ts", b: "src\\App\\Shop\\Shop.tsx" }, { a: "src\\App\\Suspense\\index.ts", b: "src\\App\\Suspense\\Suspense.tsx" }, { a: "src\\api\\Types\\LanguageCode.ts", b: "superstruct" }, { a: "src\\api\\Types\\CurrencyCode.ts", b: "superstruct" }, { a: "src\\api\\Types\\Timestamp.ts", b: "superstruct" }, { a: "src\\api\\Types\\Timestamp.ts", b: "moment" }, { a: "src\\api\\Types\\LocalStorage.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Types\\DeliveryMethod.ts", b: "superstruct" }, { a: "src\\api\\Basket\\Basket.ts", b: "mobx" }, { a: "src\\api\\Basket\\Basket.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Basket\\Basket.ts", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "src\\api\\Debug\\Debug.ts", b: "@sentry/react" }, { a: "src\\api\\Debug\\Debug.ts", b: "@sentry/tracing" }, { a: "src\\api\\Debug\\Debug.ts", b: "@sentry/types" }, { a: "src\\api\\Engine\\Engine.ts", b: "mobx" }, { a: "src\\api\\Engine\\Engine.ts", b: "src\\api\\Engine\\Suspense.ts" }, { a: "src\\api\\Engine\\Engine.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Image\\Image.ts", b: "mobx" }, { a: "src\\api\\Image\\Image.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Lang\\Lang.ts", b: "mobx" }, { a: "src\\api\\Lang\\Lang.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Lang\\Lang.ts", b: "src\\api\\Lang\\Dict.ts" }, { a: "src\\api\\Lang\\Lang.ts", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "src\\api\\Rest\\Client.ts", b: "@servicestack/client" }, { a: "src\\api\\Rest\\Client.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\queries\\index.ts", b: "src\\api\\Rest\\queries\\getLayout.ts" }, { a: "src\\api\\Rest\\queries\\index.ts", b: "src\\api\\Rest\\queries\\getLanguages.ts" }, { a: "src\\api\\Rest\\queries\\index.ts", b: "src\\api\\Rest\\queries\\getProducts.ts" }, { a: "src\\api\\Rest\\types\\index.ts", b: "src\\api\\Rest\\types\\getLanguages.ts" }, { a: "src\\api\\Rest\\types\\index.ts", b: "src\\api\\Rest\\types\\getLayout.ts" }, { a: "src\\api\\Rest\\types\\index.ts", b: "src\\api\\Rest\\types\\getProducts.ts" }, { a: "src\\api\\Rest\\types\\index.ts", b: "src\\api\\Rest\\types\\Image.ts" }, { a: "src\\api\\Display\\Display.ts", b: "mobx" }, { a: "src\\api\\Display\\Display.ts", b: "react" }, { a: "src\\api\\Display\\Display.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Router\\Router.ts", b: "navigo" }, { a: "src\\api\\Router\\Router.ts", b: "mobx" }, { a: "src\\api\\Router\\Router.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Storage\\Storage.ts", b: "mobx" }, { a: "src\\api\\Storage\\Storage.ts", b: "json5" }, { a: "src\\api\\Storage\\Storage.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Style\\Style.tsx", b: "react" }, { a: "src\\api\\Utils\\Objects.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Utils\\Status.ts", b: "mobx" }, { a: "src\\api\\Gql\\Client.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Gql\\queries\\index.ts", b: "src\\api\\Gql\\queries\\getProducts.ts" }, { a: "src\\api\\Gql\\queries\\index.ts", b: "src\\api\\Gql\\queries\\getStockInfo.ts" }, { a: "src\\api\\Gql\\types\\index.ts", b: "src\\api\\Gql\\types\\getProducts.ts" }, { a: "src\\api\\Gql\\types\\index.ts", b: "src\\api\\Gql\\types\\getStockInfo.ts" }, { a: "src\\api\\Stock\\Stock.ts", b: "mobx" }, { a: "src\\api\\Stock\\Stock.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Stock\\Stock.ts", b: "src\\api\\Types\\index.ts" }, { a: "src\\api\\Stock\\Stock.ts", b: "src\\api\\Stock\\Product.ts" }, { a: "src\\api\\Stock\\Stock.ts", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "src\\api\\Stock\\Product.ts", b: "react" }, { a: "src\\api\\Stock\\Product.ts", b: "mobx" }, { a: "src\\api\\Stock\\Product.ts", b: "uuid" }, { a: "src\\api\\Stock\\Product.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Stock\\Product.ts", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "src\\api\\Stock\\Product.ts", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "src\\api\\Stock\\Product.ts", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "src\\api\\Stock\\Product.vm.ts", b: "mobx" }, { a: "src\\api\\Stock\\Product.vm.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Tracking\\Tracking.ts", b: "mobx" }, { a: "src\\api\\Tracking\\Tracking.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\System\\System.ts", b: "src\\api\\index.ts" }, { a: "src\\lib\\Icon\\index.ts", b: "src\\lib\\Icon\\Icon.tsx" }, { a: "src\\lib\\Button\\index.ts", b: "src\\lib\\Button\\Button.tsx" }, { a: "src\\lib\\Select\\index.ts", b: "src\\lib\\Select\\Select.tsx" }, { a: "src\\lib\\Input\\index.ts", b: "src\\lib\\Input\\Input.tsx" }, { a: "src\\lib\\Scroll\\index.ts", b: "src\\lib\\Scroll\\Scroll.tsx" }, { a: "src\\lib\\FacebookPixel.tsx", b: "react" }, { a: "src\\lib\\FacebookPixel.tsx", b: "mobx-react" }, { a: "src\\lib\\FacebookPixel.tsx", b: "src\\api\\index.ts" }, { a: "src\\lib\\GoogleTag.tsx", b: "mobx-react" }, { a: "src\\lib\\GoogleTag.tsx", b: "react-gtm-module" }, { a: "src\\lib\\GoogleTag.tsx", b: "src\\api\\index.ts" }, { a: "src\\lib\\Logic\\index.ts", b: "src\\lib\\Logic\\If\\index.ts" }, { a: "src\\App\\Loading\\Loading.tsx", b: "react" }, { a: "src\\App\\Loading\\Loading.tsx", b: "mobx-react" }, { a: "src\\App\\Loading\\Loading.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "react" }, { a: "src\\App\\Shop\\Shop.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\App\\Shop\\LeftBar\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\App\\Shop\\Basket\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\App\\Shop\\Header\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\App\\Shop\\StepsNav\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\App\\Shop\\StepHeader\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\App\\Shop\\StepProducts\\index.ts" }, { a: "src\\App\\Shop\\Shop.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Suspense\\Suspense.tsx", b: "react" }, { a: "src\\App\\Suspense\\Suspense.tsx", b: "src\\api\\index.ts" }, { a: "src\\api\\Basket\\BasketProduct.ts", b: "mobx" }, { a: "src\\api\\Basket\\BasketProduct.ts", b: "src\\api\\Stock\\index.ts" }, { a: "src\\api\\Basket\\BasketProduct.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Engine\\Suspense.ts", b: "moment" }, { a: "src\\api\\Engine\\Suspense.ts", b: "mobx" }, { a: "src\\api\\Engine\\Suspense.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Lang\\DictAccessor.ts", b: "mobx" }, { a: "src\\api\\Lang\\DictAccessor.ts", b: "src\\api\\Lang\\Dict.ts" }, { a: "src\\api\\Lang\\DictAccessor.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\queries\\getLayout.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\queries\\getLayout.ts", b: "src\\api\\Rest\\index.ts" }, { a: "src\\api\\Rest\\queries\\getLanguages.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\queries\\getLanguages.ts", b: "src\\api\\Rest\\index.ts" }, { a: "src\\api\\Rest\\queries\\getProducts.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\queries\\getProducts.ts", b: "src\\api\\Rest\\index.ts" }, { a: "src\\api\\Rest\\types\\getLanguages.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\types\\getLayout.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\types\\getLayout.ts", b: "src\\api\\Rest\\types\\Image.ts" }, { a: "src\\api\\Rest\\types\\getProducts.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\types\\getProducts.ts", b: "src\\api\\Rest\\types\\Image.ts" }, { a: "src\\api\\Rest\\types\\Image.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Rest\\types\\Image.ts", b: "src\\api\\Image\\index.ts" }, { a: "src\\api\\Gql\\queries\\getProducts.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Gql\\queries\\getProducts.ts", b: "src\\api\\Gql\\index.ts" }, { a: "src\\api\\Gql\\queries\\getStockInfo.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Gql\\queries\\getStockInfo.ts", b: "src\\api\\Gql\\index.ts" }, { a: "src\\api\\Gql\\types\\getProducts.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Gql\\types\\getStockInfo.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Stock\\SkuProduct.ts", b: "mobx" }, { a: "src\\api\\Stock\\SkuProduct.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Stock\\SkuProduct.ts", b: "src\\api\\Stock\\Prices.ts" }, { a: "src\\api\\Stock\\DeliveryProduct.ts", b: "mobx" }, { a: "src\\api\\Stock\\DeliveryProduct.ts", b: "src\\api\\index.ts" }, { a: "src\\api\\Stock\\DeliveryProduct.ts", b: "src\\api\\Stock\\Product.ts" }, { a: "src\\api\\Stock\\DeliveryProduct.ts", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "src\\lib\\Icon\\Icon.tsx", b: "react" }, { a: "src\\lib\\Icon\\Icon.tsx", b: "src\\api\\index.ts" }, { a: "src\\lib\\Button\\Button.tsx", b: "react" }, { a: "src\\lib\\Button\\Button.tsx", b: "src\\api\\index.ts" }, { a: "src\\lib\\Button\\Button.tsx", b: "src\\lib\\index.ts" }, { a: "src\\lib\\Select\\Select.tsx", b: "react" }, { a: "src\\lib\\Select\\Select.tsx", b: "src\\api\\index.ts" }, { a: "src\\lib\\Select\\Select.tsx", b: "src\\lib\\index.ts" }, { a: "src\\lib\\Input\\Input.tsx", b: "react" }, { a: "src\\lib\\Scroll\\Scroll.tsx", b: "react" }, { a: "src\\lib\\Scroll\\Scroll.tsx", b: "simplebar-react" }, { a: "src\\lib\\Logic\\If\\index.ts", b: "src\\lib\\Logic\\If\\If.tsx" }, { a: "src\\lib\\Logic\\If\\index.ts", b: "src\\lib\\Logic\\If\\Each.tsx" }, { a: "src\\App\\Shop\\LeftBar\\index.ts", b: "src\\App\\Shop\\LeftBar\\LeftBar.tsx" }, { a: "src\\App\\Shop\\LeftBar\\index.ts", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "src\\App\\Shop\\Basket\\index.ts", b: "src\\App\\Shop\\Basket\\Basket.tsx" }, { a: "src\\App\\Shop\\Basket\\index.ts", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "src\\App\\Shop\\Header\\index.ts", b: "src\\App\\Shop\\Header\\Header.tsx" }, { a: "src\\App\\Shop\\StepsNav\\index.ts", b: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { a: "src\\App\\Shop\\StepHeader\\index.ts", b: "src\\App\\Shop\\StepHeader\\StepHeader.tsx" }, { a: "src\\App\\Shop\\StepProducts\\index.ts", b: "src\\App\\Shop\\StepProducts\\StepProducts.tsx" }, { a: "src\\api\\Stock\\Prices.ts", b: "mobx" }, { a: "src\\api\\Stock\\Prices.ts", b: "src\\api\\Stock\\Price.ts" }, { a: "src\\api\\Stock\\Prices.ts", b: "src\\api\\index.ts" }, { a: "src\\lib\\Logic\\If\\If.tsx", b: "react" }, { a: "src\\lib\\Logic\\If\\If.tsx", b: "mobx-react" }, { a: "src\\lib\\Logic\\If\\Each.tsx", b: "react" }, { a: "src\\lib\\Logic\\If\\Each.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "react" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "src\\App\\Shop\\LeftBar\\Menu\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "src\\App\\Shop\\LeftBar\\Settings\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.tsx", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts", b: "mobx" }, { a: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts", b: "src\\App\\Shop\\LeftBar\\Settings\\index.ts" }, { a: "src\\App\\Shop\\Basket\\Basket.tsx", b: "react" }, { a: "src\\App\\Shop\\Basket\\Basket.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\Basket\\Basket.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Basket\\Basket.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\Basket\\Basket.tsx", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "src\\App\\Shop\\Basket\\Basket.tsx", b: "src\\App\\Shop\\Basket\\BasketScreen\\index.ts" }, { a: "src\\App\\Shop\\Basket\\Basket.store.ts", b: "mobx" }, { a: "src\\App\\Shop\\Basket\\Basket.store.ts", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Header\\Header.tsx", b: "react" }, { a: "src\\App\\Shop\\Header\\Header.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\Header\\Header.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Header\\Header.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\Header\\Header.tsx", b: "src\\App\\Shop\\LeftBar\\index.ts" }, { a: "src\\App\\Shop\\Header\\Header.tsx", b: "src\\App\\Shop\\Basket\\index.ts" }, { a: "src\\App\\Shop\\StepsNav\\StepsNav.tsx", b: "react" }, { a: "src\\App\\Shop\\StepsNav\\StepsNav.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\StepsNav\\StepsNav.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\StepHeader\\StepHeader.tsx", b: "react" }, { a: "src\\App\\Shop\\StepHeader\\StepHeader.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\StepHeader\\StepHeader.tsx", b: "mobx" }, { a: "src\\App\\Shop\\StepHeader\\StepHeader.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\StepProducts.tsx", b: "react" }, { a: "src\\App\\Shop\\StepProducts\\StepProducts.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\StepProducts\\StepProducts.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\StepProducts.tsx", b: "src\\App\\Shop\\StepProducts\\Product\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\StepProducts.tsx", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\index.ts" }, { a: "src\\api\\Stock\\Price.ts", b: "mobx" }, { a: "src\\api\\Stock\\Price.ts", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\index.ts", b: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\index.ts", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\index.ts", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "src\\App\\Shop\\Basket\\BasketScreen\\index.ts", b: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx" }, { a: "src\\App\\Shop\\StepProducts\\Product\\index.ts", b: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\index.ts", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "react" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "src\\App\\Shop\\LeftBar\\Menu\\links.ts" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx", b: "src\\App\\Shop\\LeftBar\\Settings\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx", b: "react" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts", b: "mobx" }, { a: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx", b: "react" }, { a: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx", b: "react" }, { a: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx", b: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx", b: "react" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx", b: "react" }, { a: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx", b: "mobx-react" }, { a: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx", b: "src\\lib\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx", b: "src\\api\\index.ts" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts", b: "mobx" }, { a: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts", b: "src\\api\\index.ts" }, { a: "var $root|1", b: "src\\index.tsx" }, { a: "var Content|2", b: "src\\App\\App.tsx" }, { a: "var Content|2", b: "var App|3" }, { a: "var App|3", b: "src\\App\\App.tsx" }, { a: "var LanguageCode|4", b: "src\\api\\Types\\LanguageCode.ts" }, { a: "var LanguageCode|4", b: "var Language|859" }, { a: "var LanguageCode|4", b: "var ProductTranslation|866" }, { a: "var LanguageCode|4", b: "var Languages|858" }, { a: "var CurrencyCode|5", b: "src\\api\\Types\\CurrencyCode.ts" }, { a: "var CurrencyCode|5", b: "var Currency|860" }, { a: "var Timestamp|6", b: "src\\api\\Types\\Timestamp.ts" }, { a: "var Timestamp|6", b: "var Layout|863" }, { a: "var LocalStorage|7", b: "src\\api\\Types\\LocalStorage.ts" }, { a: "var LocalStorage|7", b: "type_alias LocalStorage|727" }, { a: "var LocalStorage|7", b: "class Storage|720" }, { a: "var LocalStorage|7", b: "member load|723" }, { a: "var deliveryMethodMap|8", b: "src\\api\\Types\\DeliveryMethod.ts" }, { a: "var deliveryMethodMap|8", b: "var createEachDelivery|742" }, { a: "var deliveryMethodMap|8", b: "var DeliveryMethodInternal|9" }, { a: "var deliveryMethodMap|8", b: "var DeliveryMethodExternal|10" }, { a: "var deliveryMethodMap|8", b: "var DeliveryMethod|11" }, { a: "var DeliveryMethodInternal|9", b: "src\\api\\Types\\DeliveryMethod.ts" }, { a: "var DeliveryMethodInternal|9", b: "var DeliveryMethod|11" }, { a: "var DeliveryMethodExternal|10", b: "src\\api\\Types\\DeliveryMethod.ts" }, { a: "var DeliveryMethodExternal|10", b: "var DeliveryMethod|11" }, { a: "var DeliveryMethod|11", b: "src\\api\\Types\\DeliveryMethod.ts" }, { a: "var DeliveryMethod|11", b: "var LocalStorage|7" }, { a: "var DeliveryMethod|11", b: "var PriceId|864" }, { a: "var DeliveryMethod|11", b: "var DeliveryMethodEntry|876" }, { a: "var DeliveryMethod|11", b: "var StockInfo|878" }, { a: "class Basket|12", b: "src\\api\\Basket\\Basket.ts" }, { a: "class Basket|12", b: "var basket|18" }, { a: "member isB2b|13", b: "src\\api\\Basket\\Basket.ts" }, { a: "member isB2b|13", b: "class Display|687" }, { a: "member isB2b|13", b: "member isB2b|709" }, { a: "member isB2b|13", b: "class Basket|12" }, { a: "member products|14", b: "src\\api\\Basket\\Basket.ts" }, { a: "member products|14", b: "class Basket|12" }, { a: "member products|14", b: "member getProduct|16" }, { a: "member products|14", b: "member removeProduct|17" }, { a: "member products|14", b: "class BasketStore|964" }, { a: "member products|14", b: "member count|968" }, { a: "member products|14", b: "var Header|971" }, { a: "member tryLoadFromStorage|15", b: "src\\api\\Basket\\Basket.ts" }, { a: "member tryLoadFromStorage|15", b: "class Engine|27" }, { a: "member tryLoadFromStorage|15", b: "member setEngineId|37" }, { a: "member tryLoadFromStorage|15", b: "class Basket|12" }, { a: "member getProduct|16", b: "src\\api\\Basket\\Basket.ts" }, { a: "member getProduct|16", b: "class ProductVm|786" }, { a: "member getProduct|16", b: "member pushToBasket|801" }, { a: "member getProduct|16", b: "class Basket|12" }, { a: "member removeProduct|17", b: "src\\api\\Basket\\Basket.ts" }, { a: "member removeProduct|17", b: "class BasketProduct|824" }, { a: "member removeProduct|17", b: "member remove|832" }, { a: "member removeProduct|17", b: "class Basket|12" }, { a: "var basket|18", b: "src\\api\\Basket\\Basket.ts" }, { a: "var basket|18", b: "class ProductVm|786" }, { a: "var basket|18", b: "member pushToBasket|801" }, { a: "var basket|18", b: "class BasketProduct|824" }, { a: "var basket|18", b: "member remove|832" }, { a: "var basket|18", b: "class Engine|27" }, { a: "var basket|18", b: "member setEngineId|37" }, { a: "var basket|18", b: "class Display|687" }, { a: "var basket|18", b: "member isB2b|709" }, { a: "var basket|18", b: "class BasketStore|964" }, { a: "var basket|18", b: "member count|968" }, { a: "var basket|18", b: "var Header|971" }, { a: "class Debug|19", b: "src\\api\\Debug\\Debug.ts" }, { a: "class Debug|19", b: "var debug|26" }, { a: "member isEnabled|20", b: "src\\api\\Debug\\Debug.ts" }, { a: "member isEnabled|20", b: "class Debug|19" }, { a: "member isEnabled|20", b: "member sendToSentry|23" }, { a: "member isEnabled|20", b: "member orDo|24" }, { a: "member isEnabled|20", b: "member print|25" }, { a: "member isEnabled|20", b: "class DictAccessor|844" }, { a: "member isEnabled|20", b: "member get|850" }, { a: "member isEnabled|20", b: "method get|853" }, { a: "member isEnabled|20", b: "class Router|712" }, { a: "member isEnabled|20", b: "member init|717" }, { a: "member isEnabled|20", b: "method init|718" }, { a: "member isEnabled|20", b: "class Tracking|802" }, { a: "member isEnabled|20", b: "member isTrackingEnabled|805" }, { a: "member init|21", b: "src\\api\\Debug\\Debug.ts" }, { a: "member init|21", b: "class System|811" }, { a: "member init|21", b: "member init|812" }, { a: "member init|21", b: "class Debug|19" }, { a: "member getSentryLevel|22", b: "src\\api\\Debug\\Debug.ts" }, { a: "member getSentryLevel|22", b: "class Debug|19" }, { a: "member getSentryLevel|22", b: "member sendToSentry|23" }, { a: "member sendToSentry|23", b: "src\\api\\Debug\\Debug.ts" }, { a: "member sendToSentry|23", b: "class Debug|19" }, { a: "member sendToSentry|23", b: "member print|25" }, { a: "member orDo|24", b: "src\\api\\Debug\\Debug.ts" }, { a: "member orDo|24", b: "class Engine|27" }, { a: "member orDo|24", b: "member setEngineId|37" }, { a: "member orDo|24", b: "class Router|712" }, { a: "member orDo|24", b: "member init|717" }, { a: "member orDo|24", b: "method init|718" }, { a: "member orDo|24", b: "class Debug|19" }, { a: "member print|25", b: "src\\api\\Debug\\Debug.ts" }, { a: "member print|25", b: "class Product|764" }, { a: "member print|25", b: "member fetch|785" }, { a: "member print|25", b: "class Debug|19" }, { a: "member print|25", b: "class Engine|27" }, { a: "member print|25", b: "member setEngineId|37" }, { a: "member print|25", b: "class DictAccessor|844" }, { a: "member print|25", b: "member get|850" }, { a: "member print|25", b: "method get|853" }, { a: "member print|25", b: "class Lang|54" }, { a: "member print|25", b: "class Client|71" }, { a: "member print|25", b: "member createRequest|74" }, { a: "member print|25", b: "class Router|712" }, { a: "member print|25", b: "member init|717" }, { a: "member print|25", b: "method init|718" }, { a: "member print|25", b: "class Client|753" }, { a: "member print|25", b: "member get|755" }, { a: "var debug|26", b: "src\\api\\Debug\\Debug.ts" }, { a: "var debug|26", b: "class Product|764" }, { a: "var debug|26", b: "member fetch|785" }, { a: "var debug|26", b: "class Engine|27" }, { a: "var debug|26", b: "member setEngineId|37" }, { a: "var debug|26", b: "class DictAccessor|844" }, { a: "var debug|26", b: "member get|850" }, { a: "var debug|26", b: "method get|853" }, { a: "var debug|26", b: "class Lang|54" }, { a: "var debug|26", b: "class Client|71" }, { a: "var debug|26", b: "member createRequest|74" }, { a: "var debug|26", b: "class Router|712" }, { a: "var debug|26", b: "member init|717" }, { a: "var debug|26", b: "method init|718" }, { a: "var debug|26", b: "class Client|753" }, { a: "var debug|26", b: "member get|755" }, { a: "var debug|26", b: "class Tracking|802" }, { a: "var debug|26", b: "member isTrackingEnabled|805" }, { a: "var debug|26", b: "class System|811" }, { a: "var debug|26", b: "member init|812" }, { a: "class Engine|27", b: "src\\api\\Engine\\Engine.ts" }, { a: "class Engine|27", b: "var engine|41" }, { a: "member id|28", b: "src\\api\\Engine\\Engine.ts" }, { a: "member id|28", b: "class Engine|27" }, { a: "member id|28", b: "member setEngineId|37" }, { a: "member id|28", b: "member loadLayout|38" }, { a: "member id|28", b: "member loadSideEffects|39" }, { a: "member id|28", b: "class Image|42" }, { a: "member id|28", b: "member url|50" }, { a: "member id|28", b: "class Storage|720" }, { a: "member website|29", b: "src\\api\\Engine\\Engine.ts" }, { a: "member website|29", b: "class Engine|27" }, { a: "member website|29", b: "member loadLayout|38" }, { a: "member website|29", b: "var Menu|989" }, { a: "member website|29", b: "var Header|971" }, { a: "member checkPage|30", b: "src\\api\\Engine\\Engine.ts" }, { a: "member checkPage|30", b: "class Engine|27" }, { a: "member checkPage|30", b: "member loadLayout|38" }, { a: "member checkPage|30", b: "var Menu|989" }, { a: "member suspense|31", b: "src\\api\\Engine\\Engine.ts" }, { a: "member suspense|31", b: "class Engine|27" }, { a: "member suspense|31", b: "member loadLayout|38" }, { a: "member suspense|31", b: "var Before|822" }, { a: "member suspense|31", b: "var After|823" }, { a: "member suspense|31", b: "var Content|2" }, { a: "member currency|32", b: "src\\api\\Engine\\Engine.ts" }, { a: "member currency|32", b: "class Price|982" }, { a: "member currency|32", b: "member isValid|985" }, { a: "member currency|32", b: "member forHuman|986" }, { a: "member currency|32", b: "class Engine|27" }, { a: "member currency|32", b: "member setCurrency|34" }, { a: "member currency|32", b: "member setCurrencies|36" }, { a: "member currency|32", b: "class SettingsStore|992" }, { a: "member currency|32", b: "member open|996" }, { a: "member currency|32", b: "member close|997" }, { a: "member currency|32", b: "var ProductView|1009" }, { a: "member currencies|33", b: "src\\api\\Engine\\Engine.ts" }, { a: "member currencies|33", b: "class Engine|27" }, { a: "member currencies|33", b: "member isPossibleCurrency|35" }, { a: "member currencies|33", b: "member setCurrencies|36" }, { a: "member currencies|33", b: "class SettingsStore|992" }, { a: "member currencies|33", b: "member optionsCurrencies|1002" }, { a: "member setCurrency|34", b: "src\\api\\Engine\\Engine.ts" }, { a: "member setCurrency|34", b: "class Engine|27" }, { a: "member setCurrency|34", b: "member setCurrencies|36" }, { a: "member setCurrency|34", b: "class SettingsStore|992" }, { a: "member setCurrency|34", b: "member save|1000" }, { a: "member isPossibleCurrency|35", b: "src\\api\\Engine\\Engine.ts" }, { a: "member isPossibleCurrency|35", b: "class Engine|27" }, { a: "member isPossibleCurrency|35", b: "member setCurrency|34" }, { a: "member isPossibleCurrency|35", b: "member setCurrencies|36" }, { a: "member setCurrencies|36", b: "src\\api\\Engine\\Engine.ts" }, { a: "member setCurrencies|36", b: "class Engine|27" }, { a: "member setCurrencies|36", b: "member loadLayout|38" }, { a: "member setEngineId|37", b: "src\\api\\Engine\\Engine.ts" }, { a: "member setEngineId|37", b: "class Router|712" }, { a: "member setEngineId|37", b: "member init|717" }, { a: "member setEngineId|37", b: "method init|718" }, { a: "member setEngineId|37", b: "class Engine|27" }, { a: "member loadLayout|38", b: "src\\api\\Engine\\Engine.ts" }, { a: "member loadLayout|38", b: "class Engine|27" }, { a: "member loadLayout|38", b: "member setEngineId|37" }, { a: "member loadSideEffects|39", b: "src\\api\\Engine\\Engine.ts" }, { a: "member loadSideEffects|39", b: "class Engine|27" }, { a: "member loadSideEffects|39", b: "member setEngineId|37" }, { a: "type_alias Currency|40", b: "src\\api\\Engine\\Engine.ts" }, { a: "type_alias Currency|40", b: "class Engine|27" }, { a: "type_alias Currency|40", b: "member currencies|33" }, { a: "type_alias Currency|40", b: "member setCurrencies|36" }, { a: "var engine|41", b: "src\\api\\Engine\\Engine.ts" }, { a: "var engine|41", b: "class Price|982" }, { a: "var engine|41", b: "member isValid|985" }, { a: "var engine|41", b: "member forHuman|986" }, { a: "var engine|41", b: "class Image|42" }, { a: "var engine|41", b: "member url|50" }, { a: "var engine|41", b: "class Router|712" }, { a: "var engine|41", b: "member init|717" }, { a: "var engine|41", b: "method init|718" }, { a: "var engine|41", b: "class Storage|720" }, { a: "var engine|41", b: "class SettingsStore|992" }, { a: "var engine|41", b: "member open|996" }, { a: "var engine|41", b: "member close|997" }, { a: "var engine|41", b: "member save|1000" }, { a: "var engine|41", b: "member optionsCurrencies|1002" }, { a: "var engine|41", b: "var Menu|989" }, { a: "var engine|41", b: "var Header|971" }, { a: "var engine|41", b: "var ProductView|1009" }, { a: "var engine|41", b: "var Before|822" }, { a: "var engine|41", b: "var After|823" }, { a: "var engine|41", b: "var Content|2" }, { a: "class Image|42", b: "src\\api\\Image\\Image.ts" }, { a: "class Image|42", b: "var IdBasedImage|868" }, { a: "class Image|42", b: "var Base64Image|869" }, { a: "class Image|42", b: "class DeliveryProduct|886" }, { a: "class Image|42", b: "member preview|887" }, { a: "class Image|42", b: "member setPreview|899" }, { a: "class Image|42", b: "class Suspense|833" }, { a: "class Image|42", b: "member beforeImage|837" }, { a: "class Image|42", b: "member afterImage|838" }, { a: "class Image|42", b: "member setData|839" }, { a: "class Image|42", b: "class Engine|27" }, { a: "class Image|42", b: "member loadLayout|38" }, { a: "class Image|42", b: "class Display|687" }, { a: "class Image|42", b: "member background|691" }, { a: "class Image|42", b: "member logo|692" }, { a: "class Image|42", b: "member customBlockImages|693" }, { a: "class Image|42", b: "member setBackground|694" }, { a: "class Image|42", b: "member setCustomBlockImages|695" }, { a: "class Image|42", b: "member setLogo|699" }, { a: "class Image|42", b: "member setFavicon|704" }, { a: "member isLoaded|43", b: "src\\api\\Image\\Image.ts" }, { a: "member isLoaded|43", b: "class Image|42" }, { a: "member isLoaded|43", b: "member attemptPreload|49" }, { a: "member isLoaded|43", b: "member setLoadedDone|52" }, { a: "member isLoaded|43", b: "class CustomBlockStore|1017" }, { a: "member isLoaded|43", b: "member isImagesLoading|1030" }, { a: "member isBase64|44", b: "src\\api\\Image\\Image.ts" }, { a: "member isBase64|44", b: "class Image|42" }, { a: "member isBase64|44", b: "member setBase64Data|48" }, { a: "member isBase64|44", b: "member url|50" }, { a: "member isBase64|44", b: "member preload|53" }, { a: "member base64Url|45", b: "src\\api\\Image\\Image.ts" }, { a: "member base64Url|45", b: "class Image|42" }, { a: "member base64Url|45", b: "member setBase64Data|48" }, { a: "member base64Url|45", b: "member url|50" }, { a: "member didAttempted|46", b: "src\\api\\Image\\Image.ts" }, { a: "member didAttempted|46", b: "class Image|42" }, { a: "member didAttempted|46", b: "member attemptPreload|49" }, { a: "member didAttempted|46", b: "member preload|53" }, { a: "member id|47", b: "src\\api\\Image\\Image.ts" }, { a: "member id|47", b: "class Image|42" }, { a: "member id|47", b: "member url|50" }, { a: "member setBase64Data|48", b: "src\\api\\Image\\Image.ts" }, { a: "member setBase64Data|48", b: "var Base64Image|869" }, { a: "member setBase64Data|48", b: "class Image|42" }, { a: "member attemptPreload|49", b: "src\\api\\Image\\Image.ts" }, { a: "member attemptPreload|49", b: "class CustomBlockStore|1017" }, { a: "member attemptPreload|49", b: "member isImagesLoading|1030" }, { a: "member attemptPreload|49", b: "class Image|42" }, { a: "member url|50", b: "src\\api\\Image\\Image.ts" }, { a: "member url|50", b: "class Image|42" }, { a: "member url|50", b: "member css|51" }, { a: "member url|50", b: "member preload|53" }, { a: "member url|50", b: "class Display|687" }, { a: "member url|50", b: "member setFavicon|704" }, { a: "member url|50", b: "var Header|971" }, { a: "member url|50", b: "var ProductView|1009" }, { a: "member url|50", b: "class CustomBlockStore|1017" }, { a: "member url|50", b: "member images|1031" }, { a: "member css|51", b: "src\\api\\Image\\Image.ts" }, { a: "member css|51", b: "var Background|1005" }, { a: "member css|51", b: "class CustomBlockStore|1017" }, { a: "member css|51", b: "member images|1031" }, { a: "member css|51", b: "var Background|819" }, { a: "member css|51", b: "var Before|822" }, { a: "member css|51", b: "var After|823" }, { a: "member css|51", b: "class Image|42" }, { a: "member setLoadedDone|52", b: "src\\api\\Image\\Image.ts" }, { a: "member setLoadedDone|52", b: "class Image|42" }, { a: "member setLoadedDone|52", b: "member preload|53" }, { a: "member preload|53", b: "src\\api\\Image\\Image.ts" }, { a: "member preload|53", b: "class Suspense|833" }, { a: "member preload|53", b: "member setData|839" }, { a: "member preload|53", b: "class Image|42" }, { a: "member preload|53", b: "member attemptPreload|49" }, { a: "class Lang|54", b: "src\\api\\Lang\\Lang.ts" }, { a: "class Lang|54", b: "var lang|70" }, { a: "member current|55", b: "src\\api\\Lang\\Lang.ts" }, { a: "member current|55", b: "class DeliveryProduct|886" }, { a: "member current|55", b: "member getPriceLabel|897" }, { a: "member current|55", b: "class Product|764" }, { a: "member current|55", b: "member name|783" }, { a: "member current|55", b: "member description|784" }, { a: "member current|55", b: "class Lang|54" }, { a: "member current|55", b: "member set|64" }, { a: "member current|55", b: "member setList|67" }, { a: "member current|55", b: "class SettingsStore|992" }, { a: "member current|55", b: "member open|996" }, { a: "member current|55", b: "member close|997" }, { a: "member current|55", b: "var Menu|989" }, { a: "member default|56", b: "src\\api\\Lang\\Lang.ts" }, { a: "member default|56", b: "class Lang|54" }, { a: "member default|56", b: "member setDefault|65" }, { a: "member default|56", b: "member setList|67" }, { a: "member languages|57", b: "src\\api\\Lang\\Lang.ts" }, { a: "member languages|57", b: "class Lang|54" }, { a: "member languages|57", b: "member isPossible|66" }, { a: "member languages|57", b: "member setList|67" }, { a: "member languages|57", b: "class SettingsStore|992" }, { a: "member languages|57", b: "member optionsLanguages|1001" }, { a: "member dicts|58", b: "src\\api\\Lang\\Lang.ts" }, { a: "member dicts|58", b: "class Lang|54" }, { a: "member dicts|58", b: "member getDictOf|60" }, { a: "member dictAccessor|59", b: "src\\api\\Lang\\Lang.ts" }, { a: "member dictAccessor|59", b: "class Lang|54" }, { a: "member dictAccessor|59", b: "member dict|63" }, { a: "member getDictOf|60", b: "src\\api\\Lang\\Lang.ts" }, { a: "member getDictOf|60", b: "class Lang|54" }, { a: "member getDictOf|60", b: "member fetchLanguages|61" }, { a: "member getDictOf|60", b: "member extendDictionary|62" }, { a: "member fetchLanguages|61", b: "src\\api\\Lang\\Lang.ts" }, { a: "member fetchLanguages|61", b: "class Lang|54" }, { a: "member extendDictionary|62", b: "src\\api\\Lang\\Lang.ts" }, { a: "member extendDictionary|62", b: "class Engine|27" }, { a: "member extendDictionary|62", b: "member loadLayout|38" }, { a: "member extendDictionary|62", b: "class Lang|54" }, { a: "member dict|63", b: "src\\api\\Lang\\Lang.ts" }, { a: "member dict|63", b: "class Lang|54" }, { a: "member dict|63", b: "class SettingsStore|992" }, { a: "member dict|63", b: "member optionsLanguages|1001" }, { a: "member dict|63", b: "var Settings|991" }, { a: "member dict|63", b: "var Menu|989" }, { a: "member dict|63", b: "var BasketScreen|1006" }, { a: "member dict|63", b: "var B2cStepsNav|974" }, { a: "member dict|63", b: "var B2bStepsNav|975" }, { a: "member dict|63", b: "var getHeaders|978" }, { a: "member dict|63", b: "var ProductView|1009" }, { a: "member dict|63", b: "class CustomBlockStore|1017" }, { a: "member dict|63", b: "member header|1022" }, { a: "member dict|63", b: "member content|1023" }, { a: "member dict|63", b: "var Shop|820" }, { a: "member set|64", b: "src\\api\\Lang\\Lang.ts" }, { a: "member set|64", b: "class Lang|54" }, { a: "member set|64", b: "member setList|67" }, { a: "member set|64", b: "class SettingsStore|992" }, { a: "member set|64", b: "member save|1000" }, { a: "member setDefault|65", b: "src\\api\\Lang\\Lang.ts" }, { a: "member setDefault|65", b: "class Lang|54" }, { a: "member setDefault|65", b: "member setList|67" }, { a: "member isPossible|66", b: "src\\api\\Lang\\Lang.ts" }, { a: "member isPossible|66", b: "class Lang|54" }, { a: "member isPossible|66", b: "member set|64" }, { a: "member isPossible|66", b: "member setList|67" }, { a: "member setList|67", b: "src\\api\\Lang\\Lang.ts" }, { a: "member setList|67", b: "class Engine|27" }, { a: "member setList|67", b: "member loadLayout|38" }, { a: "member setList|67", b: "class Lang|54" }, { a: "type_alias LangEntry|68", b: "src\\api\\Lang\\Lang.ts" }, { a: "type_alias LangEntry|68", b: "class Lang|54" }, { a: "type_alias LangEntry|68", b: "member languages|57" }, { a: "type_alias LangEntry|68", b: "member setList|67" }, { a: "var fallbackDict|69", b: "src\\api\\Lang\\Lang.ts" }, { a: "var fallbackDict|69", b: "class Lang|54" }, { a: "var fallbackDict|69", b: "member dictAccessor|59" }, { a: "var lang|70", b: "src\\api\\Lang\\Lang.ts" }, { a: "var lang|70", b: "class DeliveryProduct|886" }, { a: "var lang|70", b: "member getPriceLabel|897" }, { a: "var lang|70", b: "class Product|764" }, { a: "var lang|70", b: "member name|783" }, { a: "var lang|70", b: "member description|784" }, { a: "var lang|70", b: "class Engine|27" }, { a: "var lang|70", b: "member loadLayout|38" }, { a: "var lang|70", b: "class SettingsStore|992" }, { a: "var lang|70", b: "member open|996" }, { a: "var lang|70", b: "member close|997" }, { a: "var lang|70", b: "member save|1000" }, { a: "var lang|70", b: "member optionsLanguages|1001" }, { a: "var lang|70", b: "var Settings|991" }, { a: "var lang|70", b: "var Menu|989" }, { a: "var lang|70", b: "var BasketScreen|1006" }, { a: "var lang|70", b: "var B2cStepsNav|974" }, { a: "var lang|70", b: "var B2bStepsNav|975" }, { a: "var lang|70", b: "var getHeaders|978" }, { a: "var lang|70", b: "var ProductView|1009" }, { a: "var lang|70", b: "class CustomBlockStore|1017" }, { a: "var lang|70", b: "member header|1022" }, { a: "var lang|70", b: "member content|1023" }, { a: "var lang|70", b: "var Shop|820" }, { a: "class Client|71", b: "src\\api\\Rest\\Client.ts" }, { a: "class Client|71", b: "var client|79" }, { a: "member rawClient|72", b: "src\\api\\Rest\\Client.ts" }, { a: "member rawClient|72", b: "class Client|71" }, { a: "member rawClient|72", b: "member urlTo|73" }, { a: "member rawClient|72", b: "member createRequest|74" }, { a: "member urlTo|73", b: "src\\api\\Rest\\Client.ts" }, { a: "member urlTo|73", b: "class Image|42" }, { a: "member urlTo|73", b: "member url|50" }, { a: "member urlTo|73", b: "class Client|71" }, { a: "member createRequest|74", b: "src\\api\\Rest\\Client.ts" }, { a: "member createRequest|74", b: "class Client|71" }, { a: "member createRequest|74", b: "member post|75" }, { a: "member createRequest|74", b: "member get|76" }, { a: "member createRequest|74", b: "member put|77" }, { a: "member createRequest|74", b: "member delete|78" }, { a: "member post|75", b: "src\\api\\Rest\\Client.ts" }, { a: "member post|75", b: "class Client|71" }, { a: "member get|76", b: "src\\api\\Rest\\Client.ts" }, { a: "member get|76", b: "var getLayout|854" }, { a: "member get|76", b: "var getLanguages|855" }, { a: "member get|76", b: "var getProducts|857" }, { a: "member get|76", b: "class Client|71" }, { a: "member put|77", b: "src\\api\\Rest\\Client.ts" }, { a: "member put|77", b: "class Client|71" }, { a: "member delete|78", b: "src\\api\\Rest\\Client.ts" }, { a: "member delete|78", b: "class Client|71" }, { a: "var client|79", b: "src\\api\\Rest\\Client.ts" }, { a: "var client|79", b: "var getLayout|854" }, { a: "var client|79", b: "var getLanguages|855" }, { a: "var client|79", b: "var getProducts|857" }, { a: "var client|79", b: "class Image|42" }, { a: "var client|79", b: "member url|50" }, { a: "class LanguageTranslationPatch|80", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LanguageTranslationPatch|80", b: "class ContentPatchCommand|378" }, { a: "class LanguageTranslationPatch|80", b: "member contentTranslations|380" }, { a: "member language|81", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|81", b: "class LanguageTranslationPatch|80" }, { a: "member shopName|82", b: "src\\api\\Rest\\dtos.ts" }, { a: "member shopName|82", b: "class LanguageTranslationPatch|80" }, { a: "member textBoxHeadline|83", b: "src\\api\\Rest\\dtos.ts" }, { a: "member textBoxHeadline|83", b: "class LanguageTranslationPatch|80" }, { a: "member textBoxSubtitle|84", b: "src\\api\\Rest\\dtos.ts" }, { a: "member textBoxSubtitle|84", b: "class LanguageTranslationPatch|80" }, { a: "member page1Headline|85", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page1Headline|85", b: "class LanguageTranslationPatch|80" }, { a: "member page1Subtitle|86", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page1Subtitle|86", b: "class LanguageTranslationPatch|80" }, { a: "member page2Headline|87", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page2Headline|87", b: "class LanguageTranslationPatch|80" }, { a: "member page2Subtitle|88", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page2Subtitle|88", b: "class LanguageTranslationPatch|80" }, { a: "member page3Headline|89", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page3Headline|89", b: "class LanguageTranslationPatch|80" }, { a: "member page3Subtitle|90", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page3Subtitle|90", b: "class LanguageTranslationPatch|80" }, { a: "member page4Headline|91", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page4Headline|91", b: "class LanguageTranslationPatch|80" }, { a: "member page4Subtitle|92", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page4Subtitle|92", b: "class LanguageTranslationPatch|80" }, { a: "class LayoutCurrencyPatch|93", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutCurrencyPatch|93", b: "class CurrencyPatchCommand|385" }, { a: "class LayoutCurrencyPatch|93", b: "member currencyPatches|387" }, { a: "member currency|94", b: "src\\api\\Rest\\dtos.ts" }, { a: "member currency|94", b: "class LayoutCurrencyPatch|93" }, { a: "member isEnabled|95", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEnabled|95", b: "class LayoutCurrencyPatch|93" }, { a: "member isDefault|96", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isDefault|96", b: "class LayoutCurrencyPatch|93" }, { a: "class LayoutLanguagePatch|97", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutLanguagePatch|97", b: "class LanguagePatchCommand|392" }, { a: "class LayoutLanguagePatch|97", b: "member languagePatches|394" }, { a: "member language|98", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|98", b: "class LayoutLanguagePatch|97" }, { a: "member isEnabled|99", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEnabled|99", b: "class LayoutLanguagePatch|97" }, { a: "member isDefault|100", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isDefault|100", b: "class LayoutLanguagePatch|97" }, { a: "class ResponseError|101", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ResponseError|101", b: "class ResponseStatus|106" }, { a: "class ResponseError|101", b: "member errors|110" }, { a: "member errorCode|102", b: "src\\api\\Rest\\dtos.ts" }, { a: "member errorCode|102", b: "class ResponseError|101" }, { a: "member fieldName|103", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fieldName|103", b: "class ResponseError|101" }, { a: "member message|104", b: "src\\api\\Rest\\dtos.ts" }, { a: "member message|104", b: "class ResponseError|101" }, { a: "member meta|105", b: "src\\api\\Rest\\dtos.ts" }, { a: "member meta|105", b: "class ResponseError|101" }, { a: "class ResponseStatus|106", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ResponseStatus|106", b: "class OperationResult|118" }, { a: "class ResponseStatus|106", b: "member responseStatus|120" }, { a: "class ResponseStatus|106", b: "class AuthenticateResponse|365" }, { a: "class ResponseStatus|106", b: "member responseStatus|376" }, { a: "member errorCode|107", b: "src\\api\\Rest\\dtos.ts" }, { a: "member errorCode|107", b: "class ResponseStatus|106" }, { a: "member message|108", b: "src\\api\\Rest\\dtos.ts" }, { a: "member message|108", b: "class ResponseStatus|106" }, { a: "member stackTrace|109", b: "src\\api\\Rest\\dtos.ts" }, { a: "member stackTrace|109", b: "class ResponseStatus|106" }, { a: "member errors|110", b: "src\\api\\Rest\\dtos.ts" }, { a: "member errors|110", b: "class ResponseStatus|106" }, { a: "member meta|111", b: "src\\api\\Rest\\dtos.ts" }, { a: "member meta|111", b: "class ResponseStatus|106" }, { a: "class FaqAnswerDto|112", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FaqAnswerDto|112", b: "class FaqDto|115" }, { a: "class FaqAnswerDto|112", b: "member faqAnswers|117" }, { a: "member question|113", b: "src\\api\\Rest\\dtos.ts" }, { a: "member question|113", b: "class FaqAnswerDto|112" }, { a: "member answer|114", b: "src\\api\\Rest\\dtos.ts" }, { a: "member answer|114", b: "class FaqAnswerDto|112" }, { a: "class FaqDto|115", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FaqDto|115", b: "class FaqResponse|356" }, { a: "member typeName|116", b: "src\\api\\Rest\\dtos.ts" }, { a: "member typeName|116", b: "class FaqDto|115" }, { a: "member faqAnswers|117", b: "src\\api\\Rest\\dtos.ts" }, { a: "member faqAnswers|117", b: "class FaqDto|115" }, { a: "class OperationResult|118", b: "src\\api\\Rest\\dtos.ts" }, { a: "class OperationResult|118", b: "class MultipleResultBaseResponse|121" }, { a: "class OperationResult|118", b: "class BaseSingleResponse|159" }, { a: "class OperationResult|118", b: "class EngineClientCreateCommand|399" }, { a: "class OperationResult|118", b: "member createResponse|402" }, { a: "class OperationResult|118", b: "method createResponse|404" }, { a: "class OperationResult|118", b: "class EngineClientVerifyCommand|406" }, { a: "class OperationResult|118", b: "member createResponse|409" }, { a: "class OperationResult|118", b: "method createResponse|411" }, { a: "member code|119", b: "src\\api\\Rest\\dtos.ts" }, { a: "member code|119", b: "class OperationResult|118" }, { a: "member responseStatus|120", b: "src\\api\\Rest\\dtos.ts" }, { a: "member responseStatus|120", b: "class OperationResult|118" }, { a: "class MultipleResultBaseResponse|121", b: "src\\api\\Rest\\dtos.ts" }, { a: "class MultipleResultBaseResponse|121", b: "class FaqResponse|356" }, { a: "class MultipleResultBaseResponse|121", b: "class GiftCardResponse|357" }, { a: "class MultipleResultBaseResponse|121", b: "class GreetingCategoryListResponse|359" }, { a: "class MultipleResultBaseResponse|121", b: "class ProductResponse|364" }, { a: "member multipleResult|122", b: "src\\api\\Rest\\dtos.ts" }, { a: "member multipleResult|122", b: "var getProducts|857" }, { a: "member multipleResult|122", b: "class MultipleResultBaseResponse|121" }, { a: "class FileDto|123", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FileDto|123", b: "class FontFileCreateCommand|418" }, { a: "class FileDto|123", b: "member fileDtos|420" }, { a: "class FileDto|123", b: "class FontFileGetQuery|432" }, { a: "class FileDto|123", b: "member createResponse|434" }, { a: "class FileDto|123", b: "method createResponse|436" }, { a: "member content|124", b: "src\\api\\Rest\\dtos.ts" }, { a: "member content|124", b: "class FileDto|123" }, { a: "member id|125", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|125", b: "class FileDto|123" }, { a: "member name|126", b: "src\\api\\Rest\\dtos.ts" }, { a: "member name|126", b: "class FileDto|123" }, { a: "class GiftCardTranslationDto|127", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GiftCardTranslationDto|127", b: "class GiftCardDto|131" }, { a: "class GiftCardTranslationDto|127", b: "member translations|141" }, { a: "member amountDescriptions|128", b: "src\\api\\Rest\\dtos.ts" }, { a: "member amountDescriptions|128", b: "class GiftCardTranslationDto|127" }, { a: "member language|129", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|129", b: "class GiftCardTranslationDto|127" }, { a: "member description|130", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|130", b: "class GiftCardTranslationDto|127" }, { a: "class GiftCardDto|131", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GiftCardDto|131", b: "class GiftCardResponse|357" }, { a: "member giftCardEngineId|132", b: "src\\api\\Rest\\dtos.ts" }, { a: "member giftCardEngineId|132", b: "class GiftCardDto|131" }, { a: "member isEmailDelivery|133", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|133", b: "class GiftCardDto|131" }, { a: "member isSmsDelivery|134", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|134", b: "class GiftCardDto|131" }, { a: "member isPostDelivery|135", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|135", b: "class GiftCardDto|131" }, { a: "member isMobilePayEnabled|136", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isMobilePayEnabled|136", b: "class GiftCardDto|131" }, { a: "member mobilePayLink|137", b: "src\\api\\Rest\\dtos.ts" }, { a: "member mobilePayLink|137", b: "class GiftCardDto|131" }, { a: "member emailImage|138", b: "src\\api\\Rest\\dtos.ts" }, { a: "member emailImage|138", b: "class GiftCardDto|131" }, { a: "member smsImage|139", b: "src\\api\\Rest\\dtos.ts" }, { a: "member smsImage|139", b: "class GiftCardDto|131" }, { a: "member postImage|140", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postImage|140", b: "class GiftCardDto|131" }, { a: "member translations|141", b: "src\\api\\Rest\\dtos.ts" }, { a: "member translations|141", b: "class GiftCardDto|131" }, { a: "class FileUpload|142", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FileUpload|142", b: "class FileUpdate|162" }, { a: "class FileUpload|142", b: "class FileAdd|164" }, { a: "class FileUpload|142", b: "class ProductPost|342" }, { a: "class FileUpload|142", b: "member file|346" }, { a: "class FileUpload|142", b: "class ProductPut|347" }, { a: "class FileUpload|142", b: "member file|349" }, { a: "class FileUpload|142", b: "class GiftCardCreateCommand|444" }, { a: "class FileUpload|142", b: "member emailImage|453" }, { a: "class FileUpload|142", b: "member smsImage|454" }, { a: "class FileUpload|142", b: "member postImage|455" }, { a: "class FileUpload|142", b: "class GiftCardPutCommand|461" }, { a: "class FileUpload|142", b: "member emailImage|469" }, { a: "class FileUpload|142", b: "member smsImage|470" }, { a: "class FileUpload|142", b: "member postImage|471" }, { a: "class FileUpload|142", b: "class ProductCreateCommand|612" }, { a: "class FileUpload|142", b: "member emailImage|620" }, { a: "class FileUpload|142", b: "member smsImage|621" }, { a: "class FileUpload|142", b: "member postImage|622" }, { a: "class FileUpload|142", b: "class ProductPutCommand|628" }, { a: "class FileUpload|142", b: "member emailImage|636" }, { a: "class FileUpload|142", b: "member smsImage|637" }, { a: "class FileUpload|142", b: "member postImage|638" }, { a: "member content|143", b: "src\\api\\Rest\\dtos.ts" }, { a: "member content|143", b: "class FileUpload|142" }, { a: "class GiftCardPost|144", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GiftCardPost|144", b: "class GiftCardCreateCommand|444" }, { a: "class GiftCardPost|144", b: "member values|456" }, { a: "member language|145", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|145", b: "class GiftCardPost|144" }, { a: "member description|146", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|146", b: "class GiftCardPost|144" }, { a: "member amountDescriptions|147", b: "src\\api\\Rest\\dtos.ts" }, { a: "member amountDescriptions|147", b: "class GiftCardPost|144" }, { a: "class GiftCardPut|148", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GiftCardPut|148", b: "class GiftCardPutCommand|461" }, { a: "class GiftCardPut|148", b: "member values|472" }, { a: "member language|149", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|149", b: "class GiftCardPut|148" }, { a: "member description|150", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|150", b: "class GiftCardPut|148" }, { a: "member amountDescriptions|151", b: "src\\api\\Rest\\dtos.ts" }, { a: "member amountDescriptions|151", b: "class GiftCardPut|148" }, { a: "class ImagePathDto|152", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ImagePathDto|152", b: "class GreetingCategoryDto|155" }, { a: "class ImagePathDto|152", b: "member images|158" }, { a: "member id|153", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|153", b: "class ImagePathDto|152" }, { a: "member path|154", b: "src\\api\\Rest\\dtos.ts" }, { a: "member path|154", b: "class ImagePathDto|152" }, { a: "class GreetingCategoryDto|155", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GreetingCategoryDto|155", b: "class GreetingCategoryResponse|358" }, { a: "class GreetingCategoryDto|155", b: "class GreetingCategoryListResponse|359" }, { a: "member id|156", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|156", b: "class GreetingCategoryDto|155" }, { a: "member name|157", b: "src\\api\\Rest\\dtos.ts" }, { a: "member name|157", b: "class GreetingCategoryDto|155" }, { a: "member images|158", b: "src\\api\\Rest\\dtos.ts" }, { a: "member images|158", b: "class GreetingCategoryDto|155" }, { a: "class BaseSingleResponse|159", b: "src\\api\\Rest\\dtos.ts" }, { a: "class BaseSingleResponse|159", b: "class BaseResponse|161" }, { a: "member result|160", b: "src\\api\\Rest\\dtos.ts" }, { a: "member result|160", b: "var getLayout|854" }, { a: "member result|160", b: "class BaseSingleResponse|159" }, { a: "class BaseResponse|161", b: "src\\api\\Rest\\dtos.ts" }, { a: "class BaseResponse|161", b: "class GreetingCategoryResponse|358" }, { a: "class BaseResponse|161", b: "class LayoutResponse|360" }, { a: "class BaseResponse|161", b: "class LocationResponse|362" }, { a: "class BaseResponse|161", b: "class OrderCreateResponse|363" }, { a: "class FileUpdate|162", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FileUpdate|162", b: "class GreetingCategoryPatchCommand|500" }, { a: "class FileUpdate|162", b: "member files|503" }, { a: "class FileUpdate|162", b: "class ImagePutCommand|515" }, { a: "class FileUpdate|162", b: "member files|517" }, { a: "member fileId|163", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fileId|163", b: "class FileUpdate|162" }, { a: "class FileAdd|164", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FileAdd|164", b: "class ImageCreateCommand|508" }, { a: "class FileAdd|164", b: "member files|510" }, { a: "member type|165", b: "src\\api\\Rest\\dtos.ts" }, { a: "member type|165", b: "class FileAdd|164" }, { a: "class BaseKeyDto|166", b: "src\\api\\Rest\\dtos.ts" }, { a: "class BaseKeyDto|166", b: "class LayoutDto|207" }, { a: "member id|167", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|167", b: "interface IKeyDto|685" }, { a: "member id|167", b: "class BaseKeyDto|166" }, { a: "member createdById|168", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createdById|168", b: "class BaseKeyDto|166" }, { a: "member modifiedById|169", b: "src\\api\\Rest\\dtos.ts" }, { a: "member modifiedById|169", b: "class BaseKeyDto|166" }, { a: "class LayoutLanguagesDto|170", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutLanguagesDto|170", b: "class LayoutDto|207" }, { a: "class LayoutLanguagesDto|170", b: "member layoutLanguages|209" }, { a: "member isEnabled|171", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEnabled|171", b: "class LayoutLanguagesDto|170" }, { a: "member isDefault|172", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isDefault|172", b: "class LayoutLanguagesDto|170" }, { a: "member language|173", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|173", b: "class LayoutLanguagesDto|170" }, { a: "member isCompleted|174", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isCompleted|174", b: "class LayoutLanguagesDto|170" }, { a: "class LayoutCurrenciesDto|175", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutCurrenciesDto|175", b: "class LayoutDto|207" }, { a: "class LayoutCurrenciesDto|175", b: "member layoutCurrencies|210" }, { a: "member isEnabled|176", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEnabled|176", b: "class LayoutCurrenciesDto|175" }, { a: "member isDefault|177", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isDefault|177", b: "class LayoutCurrenciesDto|175" }, { a: "member currency|178", b: "src\\api\\Rest\\dtos.ts" }, { a: "member currency|178", b: "class LayoutCurrenciesDto|175" }, { a: "class ImageDto|179", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ImageDto|179", b: "class LayoutDto|207" }, { a: "class ImageDto|179", b: "member beforeStartImage|226" }, { a: "class ImageDto|179", b: "member faviconImage|227" }, { a: "class ImageDto|179", b: "member logotypeImage|228" }, { a: "class ImageDto|179", b: "member afterEndImage|229" }, { a: "class ImageDto|179", b: "member backgroundImage|230" }, { a: "class ImageDto|179", b: "member bannerImages|231" }, { a: "class ImageDto|179", b: "member greetingImages|232" }, { a: "member id|180", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|180", b: "class ImageDto|179" }, { a: "member content|181", b: "src\\api\\Rest\\dtos.ts" }, { a: "member content|181", b: "class ImageDto|179" }, { a: "class LanguageTranslationsDto|182", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LanguageTranslationsDto|182", b: "class LayoutDto|207" }, { a: "class LanguageTranslationsDto|182", b: "member content|233" }, { a: "member language|183", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|183", b: "class LanguageTranslationsDto|182" }, { a: "member shopName|184", b: "src\\api\\Rest\\dtos.ts" }, { a: "member shopName|184", b: "class LanguageTranslationsDto|182" }, { a: "member textBoxHeadline|185", b: "src\\api\\Rest\\dtos.ts" }, { a: "member textBoxHeadline|185", b: "class LanguageTranslationsDto|182" }, { a: "member textBoxSubtitle|186", b: "src\\api\\Rest\\dtos.ts" }, { a: "member textBoxSubtitle|186", b: "class LanguageTranslationsDto|182" }, { a: "member page1Headline|187", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page1Headline|187", b: "class LanguageTranslationsDto|182" }, { a: "member page1Subtitle|188", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page1Subtitle|188", b: "class LanguageTranslationsDto|182" }, { a: "member page2Headline|189", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page2Headline|189", b: "class LanguageTranslationsDto|182" }, { a: "member page2Subtitle|190", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page2Subtitle|190", b: "class LanguageTranslationsDto|182" }, { a: "member page3Headline|191", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page3Headline|191", b: "class LanguageTranslationsDto|182" }, { a: "member page3Subtitle|192", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page3Subtitle|192", b: "class LanguageTranslationsDto|182" }, { a: "member page4Headline|193", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page4Headline|193", b: "class LanguageTranslationsDto|182" }, { a: "member page4Subtitle|194", b: "src\\api\\Rest\\dtos.ts" }, { a: "member page4Subtitle|194", b: "class LanguageTranslationsDto|182" }, { a: "class B2bLimitDto|195", b: "src\\api\\Rest\\dtos.ts" }, { a: "class B2bLimitDto|195", b: "class LayoutDto|207" }, { a: "class B2bLimitDto|195", b: "member b2BLimits|234" }, { a: "member currency|196", b: "src\\api\\Rest\\dtos.ts" }, { a: "member currency|196", b: "class B2bLimitDto|195" }, { a: "member limitInMinorUnits|197", b: "src\\api\\Rest\\dtos.ts" }, { a: "member limitInMinorUnits|197", b: "class B2bLimitDto|195" }, { a: "class StepNamesDto|198", b: "src\\api\\Rest\\dtos.ts" }, { a: "class StepNamesDto|198", b: "class LayoutDto|207" }, { a: "class StepNamesDto|198", b: "member stepNames|235" }, { a: "member language|199", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|199", b: "class StepNamesDto|198" }, { a: "member step1Name|200", b: "src\\api\\Rest\\dtos.ts" }, { a: "member step1Name|200", b: "class StepNamesDto|198" }, { a: "member step2Name|201", b: "src\\api\\Rest\\dtos.ts" }, { a: "member step2Name|201", b: "class StepNamesDto|198" }, { a: "member step3Name|202", b: "src\\api\\Rest\\dtos.ts" }, { a: "member step3Name|202", b: "class StepNamesDto|198" }, { a: "member b2bStep1Name|203", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep1Name|203", b: "class StepNamesDto|198" }, { a: "member b2bStep2Name|204", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep2Name|204", b: "class StepNamesDto|198" }, { a: "member b2bStep3Name|205", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep3Name|205", b: "class StepNamesDto|198" }, { a: "member b2bStep4Name|206", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep4Name|206", b: "class StepNamesDto|198" }, { a: "class LayoutDto|207", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutDto|207", b: "class LayoutResponse|360" }, { a: "member url|208", b: "src\\api\\Rest\\dtos.ts" }, { a: "member url|208", b: "class LayoutDto|207" }, { a: "member layoutLanguages|209", b: "src\\api\\Rest\\dtos.ts" }, { a: "member layoutLanguages|209", b: "class LayoutDto|207" }, { a: "member layoutCurrencies|210", b: "src\\api\\Rest\\dtos.ts" }, { a: "member layoutCurrencies|210", b: "class LayoutDto|207" }, { a: "member fontName|211", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fontName|211", b: "class LayoutDto|207" }, { a: "member shopName|212", b: "src\\api\\Rest\\dtos.ts" }, { a: "member shopName|212", b: "class LayoutDto|207" }, { a: "member primaryColour|213", b: "src\\api\\Rest\\dtos.ts" }, { a: "member primaryColour|213", b: "class LayoutDto|207" }, { a: "member bodyColour|214", b: "src\\api\\Rest\\dtos.ts" }, { a: "member bodyColour|214", b: "class LayoutDto|207" }, { a: "member backgroundColour|215", b: "src\\api\\Rest\\dtos.ts" }, { a: "member backgroundColour|215", b: "class LayoutDto|207" }, { a: "member customCss|216", b: "src\\api\\Rest\\dtos.ts" }, { a: "member customCss|216", b: "class LayoutDto|207" }, { a: "member linkWebsite|217", b: "src\\api\\Rest\\dtos.ts" }, { a: "member linkWebsite|217", b: "class LayoutDto|207" }, { a: "member linkCheckValue|218", b: "src\\api\\Rest\\dtos.ts" }, { a: "member linkCheckValue|218", b: "class LayoutDto|207" }, { a: "member isInvoicePayment|219", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isInvoicePayment|219", b: "class LayoutDto|207" }, { a: "member googleTag|220", b: "src\\api\\Rest\\dtos.ts" }, { a: "member googleTag|220", b: "class LayoutDto|207" }, { a: "member pixel|221", b: "src\\api\\Rest\\dtos.ts" }, { a: "member pixel|221", b: "class LayoutDto|207" }, { a: "member startTimestamp|222", b: "src\\api\\Rest\\dtos.ts" }, { a: "member startTimestamp|222", b: "class LayoutDto|207" }, { a: "member endTimestamp|223", b: "src\\api\\Rest\\dtos.ts" }, { a: "member endTimestamp|223", b: "class LayoutDto|207" }, { a: "member useStrictDates|224", b: "src\\api\\Rest\\dtos.ts" }, { a: "member useStrictDates|224", b: "class LayoutDto|207" }, { a: "member isUniqueTesterEnabled|225", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isUniqueTesterEnabled|225", b: "class LayoutDto|207" }, { a: "member beforeStartImage|226", b: "src\\api\\Rest\\dtos.ts" }, { a: "member beforeStartImage|226", b: "class LayoutDto|207" }, { a: "member faviconImage|227", b: "src\\api\\Rest\\dtos.ts" }, { a: "member faviconImage|227", b: "class LayoutDto|207" }, { a: "member logotypeImage|228", b: "src\\api\\Rest\\dtos.ts" }, { a: "member logotypeImage|228", b: "class LayoutDto|207" }, { a: "member afterEndImage|229", b: "src\\api\\Rest\\dtos.ts" }, { a: "member afterEndImage|229", b: "class LayoutDto|207" }, { a: "member backgroundImage|230", b: "src\\api\\Rest\\dtos.ts" }, { a: "member backgroundImage|230", b: "class LayoutDto|207" }, { a: "member bannerImages|231", b: "src\\api\\Rest\\dtos.ts" }, { a: "member bannerImages|231", b: "class LayoutDto|207" }, { a: "member greetingImages|232", b: "src\\api\\Rest\\dtos.ts" }, { a: "member greetingImages|232", b: "class LayoutDto|207" }, { a: "member content|233", b: "src\\api\\Rest\\dtos.ts" }, { a: "member content|233", b: "class LayoutDto|207" }, { a: "member b2BLimits|234", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2BLimits|234", b: "class LayoutDto|207" }, { a: "member stepNames|235", b: "src\\api\\Rest\\dtos.ts" }, { a: "member stepNames|235", b: "class LayoutDto|207" }, { a: "class OperationBase|236", b: "src\\api\\Rest\\dtos.ts" }, { a: "class OperationBase|236", b: "class Operation|240" }, { a: "member path|237", b: "src\\api\\Rest\\dtos.ts" }, { a: "member path|237", b: "class OperationBase|236" }, { a: "member op|238", b: "src\\api\\Rest\\dtos.ts" }, { a: "member op|238", b: "class OperationBase|236" }, { a: "member from|239", b: "src\\api\\Rest\\dtos.ts" }, { a: "member from|239", b: "class OperationBase|236" }, { a: "class Operation|240", b: "src\\api\\Rest\\dtos.ts" }, { a: "class Operation|240", b: "class Operation_1|242" }, { a: "class Operation|240", b: "class JsonPatchDocument|243" }, { a: "class Operation|240", b: "member operations|244" }, { a: "member value|241", b: "src\\api\\Rest\\dtos.ts" }, { a: "member value|241", b: "class Operation|240" }, { a: "class Operation_1|242", b: "src\\api\\Rest\\dtos.ts" }, { a: "class JsonPatchDocument|243", b: "src\\api\\Rest\\dtos.ts" }, { a: "class JsonPatchDocument|243", b: "class LayoutPatchCommand|535" }, { a: "class JsonPatchDocument|243", b: "class B2bLimitsPatchCommand|541" }, { a: "member operations|244", b: "src\\api\\Rest\\dtos.ts" }, { a: "member operations|244", b: "class JsonPatchDocument|243" }, { a: "class LayoutPatch|245", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutPatch|245", b: "class LayoutPatchCommand|535" }, { a: "member url|246", b: "src\\api\\Rest\\dtos.ts" }, { a: "member url|246", b: "class LayoutPatch|245" }, { a: "member fontName|247", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fontName|247", b: "class LayoutPatch|245" }, { a: "member primaryColour|248", b: "src\\api\\Rest\\dtos.ts" }, { a: "member primaryColour|248", b: "class LayoutPatch|245" }, { a: "member bodyColour|249", b: "src\\api\\Rest\\dtos.ts" }, { a: "member bodyColour|249", b: "class LayoutPatch|245" }, { a: "member backgroundColour|250", b: "src\\api\\Rest\\dtos.ts" }, { a: "member backgroundColour|250", b: "class LayoutPatch|245" }, { a: "member customCss|251", b: "src\\api\\Rest\\dtos.ts" }, { a: "member customCss|251", b: "class LayoutPatch|245" }, { a: "member linkWebsite|252", b: "src\\api\\Rest\\dtos.ts" }, { a: "member linkWebsite|252", b: "class LayoutPatch|245" }, { a: "member linkCheckValue|253", b: "src\\api\\Rest\\dtos.ts" }, { a: "member linkCheckValue|253", b: "class LayoutPatch|245" }, { a: "member isEmailDelivery|254", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|254", b: "class LayoutPatch|245" }, { a: "member isSmsDelivery|255", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|255", b: "class LayoutPatch|245" }, { a: "member isPostDelivery|256", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|256", b: "class LayoutPatch|245" }, { a: "member isInvoicePayment|257", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isInvoicePayment|257", b: "class LayoutPatch|245" }, { a: "member googleTag|258", b: "src\\api\\Rest\\dtos.ts" }, { a: "member googleTag|258", b: "class LayoutPatch|245" }, { a: "member pixel|259", b: "src\\api\\Rest\\dtos.ts" }, { a: "member pixel|259", b: "class LayoutPatch|245" }, { a: "member startTimestamp|260", b: "src\\api\\Rest\\dtos.ts" }, { a: "member startTimestamp|260", b: "class LayoutPatch|245" }, { a: "member endTimestamp|261", b: "src\\api\\Rest\\dtos.ts" }, { a: "member endTimestamp|261", b: "class LayoutPatch|245" }, { a: "member useStrictDates|262", b: "src\\api\\Rest\\dtos.ts" }, { a: "member useStrictDates|262", b: "class LayoutPatch|245" }, { a: "member isUniqueTesterEnabled|263", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isUniqueTesterEnabled|263", b: "class LayoutPatch|245" }, { a: "class B2bLimitPatch|264", b: "src\\api\\Rest\\dtos.ts" }, { a: "class B2bLimitPatch|264", b: "class B2bLimitsPatchCommand|541" }, { a: "class B2bLimitPatch|264", b: "member b2BLimitPatches|543" }, { a: "member currency|265", b: "src\\api\\Rest\\dtos.ts" }, { a: "member currency|265", b: "class B2bLimitPatch|264" }, { a: "member limitInMinorUnits|266", b: "src\\api\\Rest\\dtos.ts" }, { a: "member limitInMinorUnits|266", b: "class B2bLimitPatch|264" }, { a: "class StepNameTranslationPatch|267", b: "src\\api\\Rest\\dtos.ts" }, { a: "class StepNameTranslationPatch|267", b: "class StepNameTranslationPatchCommand|548" }, { a: "class StepNameTranslationPatch|267", b: "member stepNameTranslationPatches|550" }, { a: "member language|268", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|268", b: "class StepNameTranslationPatch|267" }, { a: "member step1Name|269", b: "src\\api\\Rest\\dtos.ts" }, { a: "member step1Name|269", b: "class StepNameTranslationPatch|267" }, { a: "member step2Name|270", b: "src\\api\\Rest\\dtos.ts" }, { a: "member step2Name|270", b: "class StepNameTranslationPatch|267" }, { a: "member step3Name|271", b: "src\\api\\Rest\\dtos.ts" }, { a: "member step3Name|271", b: "class StepNameTranslationPatch|267" }, { a: "member b2bStep1Name|272", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep1Name|272", b: "class StepNameTranslationPatch|267" }, { a: "member b2bStep2Name|273", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep2Name|273", b: "class StepNameTranslationPatch|267" }, { a: "member b2bStep3Name|274", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep3Name|274", b: "class StepNameTranslationPatch|267" }, { a: "member b2bStep4Name|275", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2bStep4Name|275", b: "class StepNameTranslationPatch|267" }, { a: "class Dictionary|276", b: "src\\api\\Rest\\dtos.ts" }, { a: "class Dictionary|276", b: "class LocalizationDictionary|277" }, { a: "class Dictionary|276", b: "class LocalizationResponse|361" }, { a: "class LocalizationDictionary|277", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LocalizationDictionary|277", b: "class LocalizationResponse|361" }, { a: "class LocationDto|278", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LocationDto|278", b: "class LocationResponse|362" }, { a: "member countryCode|279", b: "src\\api\\Rest\\dtos.ts" }, { a: "member countryCode|279", b: "class LocationDto|278" }, { a: "class CustomerDto|280", b: "src\\api\\Rest\\dtos.ts" }, { a: "class CustomerDto|280", b: "class OrderDto|318" }, { a: "class CustomerDto|280", b: "member customer|320" }, { a: "member createdTime|281", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createdTime|281", b: "class CustomerDto|280" }, { a: "member companyName|282", b: "src\\api\\Rest\\dtos.ts" }, { a: "member companyName|282", b: "class CustomerDto|280" }, { a: "member companyAddress|283", b: "src\\api\\Rest\\dtos.ts" }, { a: "member companyAddress|283", b: "class CustomerDto|280" }, { a: "member companyAddress2|284", b: "src\\api\\Rest\\dtos.ts" }, { a: "member companyAddress2|284", b: "class CustomerDto|280" }, { a: "member companyCity|285", b: "src\\api\\Rest\\dtos.ts" }, { a: "member companyCity|285", b: "class CustomerDto|280" }, { a: "member postalCode|286", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postalCode|286", b: "class CustomerDto|280" }, { a: "member country|287", b: "src\\api\\Rest\\dtos.ts" }, { a: "member country|287", b: "class CustomerDto|280" }, { a: "member cvrNumber|288", b: "src\\api\\Rest\\dtos.ts" }, { a: "member cvrNumber|288", b: "class CustomerDto|280" }, { a: "member phoneNumber|289", b: "src\\api\\Rest\\dtos.ts" }, { a: "member phoneNumber|289", b: "class CustomerDto|280" }, { a: "member invoiceEmail|290", b: "src\\api\\Rest\\dtos.ts" }, { a: "member invoiceEmail|290", b: "class CustomerDto|280" }, { a: "member eanNumber|291", b: "src\\api\\Rest\\dtos.ts" }, { a: "member eanNumber|291", b: "class CustomerDto|280" }, { a: "member contactName|292", b: "src\\api\\Rest\\dtos.ts" }, { a: "member contactName|292", b: "class CustomerDto|280" }, { a: "member contactPhoneNumber|293", b: "src\\api\\Rest\\dtos.ts" }, { a: "member contactPhoneNumber|293", b: "class CustomerDto|280" }, { a: "member contactEmail|294", b: "src\\api\\Rest\\dtos.ts" }, { a: "member contactEmail|294", b: "class CustomerDto|280" }, { a: "class OrderRowRecipient|295", b: "src\\api\\Rest\\dtos.ts" }, { a: "class OrderRowRecipient|295", b: "class OrderRowDto|304" }, { a: "class OrderRowRecipient|295", b: "member recipients|314" }, { a: "member recipientName|296", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientName|296", b: "class OrderRowRecipient|295" }, { a: "member recipientAddressCountryCode|297", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientAddressCountryCode|297", b: "class OrderRowRecipient|295" }, { a: "member recipientAddressPostCode|298", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientAddressPostCode|298", b: "class OrderRowRecipient|295" }, { a: "member recipientAddressCity|299", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientAddressCity|299", b: "class OrderRowRecipient|295" }, { a: "member recipientAddressLine1|300", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientAddressLine1|300", b: "class OrderRowRecipient|295" }, { a: "member recipientAddressLine2|301", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientAddressLine2|301", b: "class OrderRowRecipient|295" }, { a: "member recipientEmail|302", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientEmail|302", b: "class OrderRowRecipient|295" }, { a: "member recipientPhone|303", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientPhone|303", b: "class OrderRowRecipient|295" }, { a: "class OrderRowDto|304", b: "src\\api\\Rest\\dtos.ts" }, { a: "class OrderRowDto|304", b: "class OrderDto|318" }, { a: "class OrderRowDto|304", b: "member rows|321" }, { a: "member title|305", b: "src\\api\\Rest\\dtos.ts" }, { a: "member title|305", b: "class OrderRowDto|304" }, { a: "member amount|306", b: "src\\api\\Rest\\dtos.ts" }, { a: "member amount|306", b: "class OrderRowDto|304" }, { a: "member valueInDecimal|307", b: "src\\api\\Rest\\dtos.ts" }, { a: "member valueInDecimal|307", b: "class OrderRowDto|304" }, { a: "member subtotalInDecimal|308", b: "src\\api\\Rest\\dtos.ts" }, { a: "member subtotalInDecimal|308", b: "class OrderRowDto|304" }, { a: "member deliveryMethod|309", b: "src\\api\\Rest\\dtos.ts" }, { a: "member deliveryMethod|309", b: "class OrderRowDto|304" }, { a: "member deliveryDate|310", b: "src\\api\\Rest\\dtos.ts" }, { a: "member deliveryDate|310", b: "class OrderRowDto|304" }, { a: "member stockKeepingUnit|311", b: "src\\api\\Rest\\dtos.ts" }, { a: "member stockKeepingUnit|311", b: "class OrderRowDto|304" }, { a: "member valueCurrency|312", b: "src\\api\\Rest\\dtos.ts" }, { a: "member valueCurrency|312", b: "class OrderRowDto|304" }, { a: "member productId|313", b: "src\\api\\Rest\\dtos.ts" }, { a: "member productId|313", b: "class OrderRowDto|304" }, { a: "member recipients|314", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipients|314", b: "class OrderRowDto|304" }, { a: "member greetingImageId|315", b: "src\\api\\Rest\\dtos.ts" }, { a: "member greetingImageId|315", b: "class OrderRowDto|304" }, { a: "member greetingDescription|316", b: "src\\api\\Rest\\dtos.ts" }, { a: "member greetingDescription|316", b: "class OrderRowDto|304" }, { a: "member recipientsFileAsString|317", b: "src\\api\\Rest\\dtos.ts" }, { a: "member recipientsFileAsString|317", b: "class OrderRowDto|304" }, { a: "class OrderDto|318", b: "src\\api\\Rest\\dtos.ts" }, { a: "class OrderDto|318", b: "class OrderCreateCommand|599" }, { a: "class OrderDto|318", b: "member data|600" }, { a: "member number|319", b: "src\\api\\Rest\\dtos.ts" }, { a: "member number|319", b: "class OrderDto|318" }, { a: "member customer|320", b: "src\\api\\Rest\\dtos.ts" }, { a: "member customer|320", b: "class OrderDto|318" }, { a: "member rows|321", b: "src\\api\\Rest\\dtos.ts" }, { a: "member rows|321", b: "class OrderDto|318" }, { a: "member createTime|322", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createTime|322", b: "class OrderDto|318" }, { a: "member totalInDecimal|323", b: "src\\api\\Rest\\dtos.ts" }, { a: "member totalInDecimal|323", b: "class OrderDto|318" }, { a: "member engineId|324", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|324", b: "class OrderDto|318" }, { a: "member comment|325", b: "src\\api\\Rest\\dtos.ts" }, { a: "member comment|325", b: "class OrderDto|318" }, { a: "class ProductTranslationDto|326", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ProductTranslationDto|326", b: "class ProductDto|331" }, { a: "class ProductTranslationDto|326", b: "member translations|341" }, { a: "member title|327", b: "src\\api\\Rest\\dtos.ts" }, { a: "member title|327", b: "class ProductTranslationDto|326" }, { a: "member description|328", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|328", b: "class ProductTranslationDto|326" }, { a: "member language|329", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|329", b: "class ProductTranslationDto|326" }, { a: "member content|330", b: "src\\api\\Rest\\dtos.ts" }, { a: "member content|330", b: "class ProductTranslationDto|326" }, { a: "class ProductDto|331", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ProductDto|331", b: "class ProductResponse|364" }, { a: "member productEngineId|332", b: "src\\api\\Rest\\dtos.ts" }, { a: "member productEngineId|332", b: "class ProductDto|331" }, { a: "member isEmailDelivery|333", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|333", b: "class ProductDto|331" }, { a: "member isSmsDelivery|334", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|334", b: "class ProductDto|331" }, { a: "member isPostDelivery|335", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|335", b: "class ProductDto|331" }, { a: "member isMobilePayEnabled|336", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isMobilePayEnabled|336", b: "class ProductDto|331" }, { a: "member mobilePayLink|337", b: "src\\api\\Rest\\dtos.ts" }, { a: "member mobilePayLink|337", b: "class ProductDto|331" }, { a: "member emailImage|338", b: "src\\api\\Rest\\dtos.ts" }, { a: "member emailImage|338", b: "class ProductDto|331" }, { a: "member smsImage|339", b: "src\\api\\Rest\\dtos.ts" }, { a: "member smsImage|339", b: "class ProductDto|331" }, { a: "member postImage|340", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postImage|340", b: "class ProductDto|331" }, { a: "member translations|341", b: "src\\api\\Rest\\dtos.ts" }, { a: "member translations|341", b: "class ProductDto|331" }, { a: "class ProductPost|342", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ProductPost|342", b: "class ProductCreateCommand|612" }, { a: "class ProductPost|342", b: "member values|623" }, { a: "member title|343", b: "src\\api\\Rest\\dtos.ts" }, { a: "member title|343", b: "class ProductPost|342" }, { a: "member description|344", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|344", b: "class ProductPost|342" }, { a: "member language|345", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|345", b: "class ProductPost|342" }, { a: "member file|346", b: "src\\api\\Rest\\dtos.ts" }, { a: "member file|346", b: "class ProductPost|342" }, { a: "class ProductPut|347", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ProductPut|347", b: "class ProductPutCommand|628" }, { a: "class ProductPut|347", b: "member values|639" }, { a: "member language|348", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|348", b: "class ProductPut|347" }, { a: "member file|349", b: "src\\api\\Rest\\dtos.ts" }, { a: "member file|349", b: "class ProductPut|347" }, { a: "member title|350", b: "src\\api\\Rest\\dtos.ts" }, { a: "member title|350", b: "class ProductPut|347" }, { a: "member description|351", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|351", b: "class ProductPut|347" }, { a: "class AmountDescriptionDto|352", b: "src\\api\\Rest\\dtos.ts" }, { a: "class AmountDescriptionDto|352", b: "class GiftCardTranslationDto|127" }, { a: "class AmountDescriptionDto|352", b: "member amountDescriptions|128" }, { a: "class AmountDescriptionDto|352", b: "class GiftCardPost|144" }, { a: "class AmountDescriptionDto|352", b: "member amountDescriptions|147" }, { a: "class AmountDescriptionDto|352", b: "class GiftCardPut|148" }, { a: "class AmountDescriptionDto|352", b: "member amountDescriptions|151" }, { a: "member description|353", b: "src\\api\\Rest\\dtos.ts" }, { a: "member description|353", b: "class AmountDescriptionDto|352" }, { a: "member priceId|354", b: "src\\api\\Rest\\dtos.ts" }, { a: "member priceId|354", b: "class AmountDescriptionDto|352" }, { a: "member action|355", b: "src\\api\\Rest\\dtos.ts" }, { a: "member action|355", b: "class AmountDescriptionDto|352" }, { a: "class FaqResponse|356", b: "src\\api\\Rest\\dtos.ts" }, { a: "class FaqResponse|356", b: "class FaqQuery|413" }, { a: "class FaqResponse|356", b: "member createResponse|414" }, { a: "class FaqResponse|356", b: "method createResponse|416" }, { a: "class GiftCardResponse|357", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GiftCardResponse|357", b: "class GiftCardQuery|438" }, { a: "class GiftCardResponse|357", b: "member createResponse|440" }, { a: "class GiftCardResponse|357", b: "method createResponse|442" }, { a: "class GreetingCategoryResponse|358", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GreetingCategoryResponse|358", b: "class GreetingCategoryQuery|477" }, { a: "class GreetingCategoryResponse|358", b: "member createResponse|479" }, { a: "class GreetingCategoryResponse|358", b: "method createResponse|481" }, { a: "class GreetingCategoryResponse|358", b: "class GreetingCategoryCreateCommand|488" }, { a: "class GreetingCategoryResponse|358", b: "member createResponse|490" }, { a: "class GreetingCategoryResponse|358", b: "method createResponse|492" }, { a: "class GreetingCategoryResponse|358", b: "class GreetingCategoryPatchCommand|500" }, { a: "class GreetingCategoryResponse|358", b: "member createResponse|504" }, { a: "class GreetingCategoryResponse|358", b: "method createResponse|506" }, { a: "class GreetingCategoryListResponse|359", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GreetingCategoryListResponse|359", b: "class GreetingCategoryList|483" }, { a: "class GreetingCategoryListResponse|359", b: "member createResponse|484" }, { a: "class GreetingCategoryListResponse|359", b: "method createResponse|486" }, { a: "class LayoutResponse|360", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutResponse|360", b: "class LayoutQuery|529" }, { a: "class LayoutResponse|360", b: "member createResponse|531" }, { a: "class LayoutResponse|360", b: "method createResponse|533" }, { a: "class LocalizationResponse|361", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LocalizationResponse|361", b: "class LocalizationQuery|578" }, { a: "class LocalizationResponse|361", b: "member createResponse|579" }, { a: "class LocalizationResponse|361", b: "method createResponse|581" }, { a: "class LocalizationResponse|361", b: "class LocalizationNotCachedQuery|583" }, { a: "class LocalizationResponse|361", b: "member createResponse|584" }, { a: "class LocalizationResponse|361", b: "method createResponse|586" }, { a: "class LocationResponse|362", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LocationResponse|362", b: "class LocationQuery|594" }, { a: "class LocationResponse|362", b: "member createResponse|595" }, { a: "class LocationResponse|362", b: "method createResponse|597" }, { a: "class OrderCreateResponse|363", b: "src\\api\\Rest\\dtos.ts" }, { a: "class OrderCreateResponse|363", b: "class OrderCreateCommand|599" }, { a: "class OrderCreateResponse|363", b: "member createResponse|602" }, { a: "class OrderCreateResponse|363", b: "method createResponse|604" }, { a: "class ProductResponse|364", b: "src\\api\\Rest\\dtos.ts" }, { a: "class ProductResponse|364", b: "class ProductQuery|606" }, { a: "class ProductResponse|364", b: "member createResponse|608" }, { a: "class ProductResponse|364", b: "method createResponse|610" }, { a: "class AuthenticateResponse|365", b: "src\\api\\Rest\\dtos.ts" }, { a: "class AuthenticateResponse|365", b: "class Authenticate|650" }, { a: "class AuthenticateResponse|365", b: "member createResponse|671" }, { a: "class AuthenticateResponse|365", b: "method createResponse|673" }, { a: "member userId|366", b: "src\\api\\Rest\\dtos.ts" }, { a: "member userId|366", b: "class AuthenticateResponse|365" }, { a: "member sessionId|367", b: "src\\api\\Rest\\dtos.ts" }, { a: "member sessionId|367", b: "interface IHasSessionId|677" }, { a: "member sessionId|367", b: "class AuthenticateResponse|365" }, { a: "member userName|368", b: "src\\api\\Rest\\dtos.ts" }, { a: "member userName|368", b: "class AuthenticateResponse|365" }, { a: "member displayName|369", b: "src\\api\\Rest\\dtos.ts" }, { a: "member displayName|369", b: "class AuthenticateResponse|365" }, { a: "member referrerUrl|370", b: "src\\api\\Rest\\dtos.ts" }, { a: "member referrerUrl|370", b: "class AuthenticateResponse|365" }, { a: "member bearerToken|371", b: "src\\api\\Rest\\dtos.ts" }, { a: "member bearerToken|371", b: "interface IHasBearerToken|678" }, { a: "member bearerToken|371", b: "class AuthenticateResponse|365" }, { a: "member refreshToken|372", b: "src\\api\\Rest\\dtos.ts" }, { a: "member refreshToken|372", b: "class AuthenticateResponse|365" }, { a: "member profileUrl|373", b: "src\\api\\Rest\\dtos.ts" }, { a: "member profileUrl|373", b: "class AuthenticateResponse|365" }, { a: "member roles|374", b: "src\\api\\Rest\\dtos.ts" }, { a: "member roles|374", b: "class AuthenticateResponse|365" }, { a: "member permissions|375", b: "src\\api\\Rest\\dtos.ts" }, { a: "member permissions|375", b: "class AuthenticateResponse|365" }, { a: "member responseStatus|376", b: "src\\api\\Rest\\dtos.ts" }, { a: "member responseStatus|376", b: "class AuthenticateResponse|365" }, { a: "member meta|377", b: "src\\api\\Rest\\dtos.ts" }, { a: "member meta|377", b: "class AuthenticateResponse|365" }, { a: "class ContentPatchCommand|378", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|379", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|379", b: "class ContentPatchCommand|378" }, { a: "member contentTranslations|380", b: "src\\api\\Rest\\dtos.ts" }, { a: "member contentTranslations|380", b: "class ContentPatchCommand|378" }, { a: "member createResponse|381", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|381", b: "interface IReturnVoid|676" }, { a: "member createResponse|381", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|381", b: "member createResponse|388" }, { a: "member createResponse|381", b: "method createResponse|390" }, { a: "member createResponse|381", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|381", b: "member createResponse|395" }, { a: "member createResponse|381", b: "method createResponse|397" }, { a: "member createResponse|381", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|381", b: "member createResponse|428" }, { a: "member createResponse|381", b: "method createResponse|430" }, { a: "member createResponse|381", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|381", b: "member createResponse|457" }, { a: "member createResponse|381", b: "method createResponse|459" }, { a: "member createResponse|381", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|381", b: "member createResponse|473" }, { a: "member createResponse|381", b: "method createResponse|475" }, { a: "member createResponse|381", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|381", b: "member createResponse|496" }, { a: "member createResponse|381", b: "method createResponse|498" }, { a: "member createResponse|381", b: "class ImagePutCommand|515" }, { a: "member createResponse|381", b: "member createResponse|518" }, { a: "member createResponse|381", b: "method createResponse|520" }, { a: "member createResponse|381", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|381", b: "member createResponse|525" }, { a: "member createResponse|381", b: "method createResponse|527" }, { a: "member createResponse|381", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|381", b: "member createResponse|537" }, { a: "member createResponse|381", b: "method createResponse|539" }, { a: "member createResponse|381", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|381", b: "member createResponse|544" }, { a: "member createResponse|381", b: "method createResponse|546" }, { a: "member createResponse|381", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|381", b: "member createResponse|551" }, { a: "member createResponse|381", b: "method createResponse|553" }, { a: "member createResponse|381", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|381", b: "member createResponse|574" }, { a: "member createResponse|381", b: "method createResponse|576" }, { a: "member createResponse|381", b: "class ProductCreateCommand|612" }, { a: "member createResponse|381", b: "member createResponse|624" }, { a: "member createResponse|381", b: "method createResponse|626" }, { a: "member createResponse|381", b: "class ProductPutCommand|628" }, { a: "member createResponse|381", b: "member createResponse|640" }, { a: "member createResponse|381", b: "method createResponse|642" }, { a: "member createResponse|381", b: "class ContentPatchCommand|378" }, { a: "member getTypeName|382", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|382", b: "class ContentPatchCommand|378" }, { a: "method createResponse|383", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|383", b: "interface IReturnVoid|676" }, { a: "method createResponse|383", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|383", b: "member createResponse|388" }, { a: "method createResponse|383", b: "method createResponse|390" }, { a: "method createResponse|383", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|383", b: "member createResponse|395" }, { a: "method createResponse|383", b: "method createResponse|397" }, { a: "method createResponse|383", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|383", b: "member createResponse|428" }, { a: "method createResponse|383", b: "method createResponse|430" }, { a: "method createResponse|383", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|383", b: "member createResponse|457" }, { a: "method createResponse|383", b: "method createResponse|459" }, { a: "method createResponse|383", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|383", b: "member createResponse|473" }, { a: "method createResponse|383", b: "method createResponse|475" }, { a: "method createResponse|383", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|383", b: "member createResponse|496" }, { a: "method createResponse|383", b: "method createResponse|498" }, { a: "method createResponse|383", b: "class ImagePutCommand|515" }, { a: "method createResponse|383", b: "member createResponse|518" }, { a: "method createResponse|383", b: "method createResponse|520" }, { a: "method createResponse|383", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|383", b: "member createResponse|525" }, { a: "method createResponse|383", b: "method createResponse|527" }, { a: "method createResponse|383", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|383", b: "member createResponse|537" }, { a: "method createResponse|383", b: "method createResponse|539" }, { a: "method createResponse|383", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|383", b: "member createResponse|544" }, { a: "method createResponse|383", b: "method createResponse|546" }, { a: "method createResponse|383", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|383", b: "member createResponse|551" }, { a: "method createResponse|383", b: "method createResponse|553" }, { a: "method createResponse|383", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|383", b: "member createResponse|574" }, { a: "method createResponse|383", b: "method createResponse|576" }, { a: "method createResponse|383", b: "class ProductCreateCommand|612" }, { a: "method createResponse|383", b: "member createResponse|624" }, { a: "method createResponse|383", b: "method createResponse|626" }, { a: "method createResponse|383", b: "class ProductPutCommand|628" }, { a: "method createResponse|383", b: "member createResponse|640" }, { a: "method createResponse|383", b: "method createResponse|642" }, { a: "method createResponse|383", b: "class ContentPatchCommand|378" }, { a: "method getTypeName|384", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|384", b: "class ContentPatchCommand|378" }, { a: "class CurrencyPatchCommand|385", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|386", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|386", b: "class CurrencyPatchCommand|385" }, { a: "member currencyPatches|387", b: "src\\api\\Rest\\dtos.ts" }, { a: "member currencyPatches|387", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|388", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|388", b: "interface IReturnVoid|676" }, { a: "member createResponse|388", b: "class ContentPatchCommand|378" }, { a: "member createResponse|388", b: "member createResponse|381" }, { a: "member createResponse|388", b: "method createResponse|383" }, { a: "member createResponse|388", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|388", b: "member createResponse|395" }, { a: "member createResponse|388", b: "method createResponse|397" }, { a: "member createResponse|388", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|388", b: "member createResponse|428" }, { a: "member createResponse|388", b: "method createResponse|430" }, { a: "member createResponse|388", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|388", b: "member createResponse|457" }, { a: "member createResponse|388", b: "method createResponse|459" }, { a: "member createResponse|388", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|388", b: "member createResponse|473" }, { a: "member createResponse|388", b: "method createResponse|475" }, { a: "member createResponse|388", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|388", b: "member createResponse|496" }, { a: "member createResponse|388", b: "method createResponse|498" }, { a: "member createResponse|388", b: "class ImagePutCommand|515" }, { a: "member createResponse|388", b: "member createResponse|518" }, { a: "member createResponse|388", b: "method createResponse|520" }, { a: "member createResponse|388", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|388", b: "member createResponse|525" }, { a: "member createResponse|388", b: "method createResponse|527" }, { a: "member createResponse|388", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|388", b: "member createResponse|537" }, { a: "member createResponse|388", b: "method createResponse|539" }, { a: "member createResponse|388", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|388", b: "member createResponse|544" }, { a: "member createResponse|388", b: "method createResponse|546" }, { a: "member createResponse|388", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|388", b: "member createResponse|551" }, { a: "member createResponse|388", b: "method createResponse|553" }, { a: "member createResponse|388", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|388", b: "member createResponse|574" }, { a: "member createResponse|388", b: "method createResponse|576" }, { a: "member createResponse|388", b: "class ProductCreateCommand|612" }, { a: "member createResponse|388", b: "member createResponse|624" }, { a: "member createResponse|388", b: "method createResponse|626" }, { a: "member createResponse|388", b: "class ProductPutCommand|628" }, { a: "member createResponse|388", b: "member createResponse|640" }, { a: "member createResponse|388", b: "method createResponse|642" }, { a: "member createResponse|388", b: "class CurrencyPatchCommand|385" }, { a: "member getTypeName|389", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|389", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|390", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|390", b: "interface IReturnVoid|676" }, { a: "method createResponse|390", b: "class ContentPatchCommand|378" }, { a: "method createResponse|390", b: "member createResponse|381" }, { a: "method createResponse|390", b: "method createResponse|383" }, { a: "method createResponse|390", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|390", b: "member createResponse|395" }, { a: "method createResponse|390", b: "method createResponse|397" }, { a: "method createResponse|390", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|390", b: "member createResponse|428" }, { a: "method createResponse|390", b: "method createResponse|430" }, { a: "method createResponse|390", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|390", b: "member createResponse|457" }, { a: "method createResponse|390", b: "method createResponse|459" }, { a: "method createResponse|390", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|390", b: "member createResponse|473" }, { a: "method createResponse|390", b: "method createResponse|475" }, { a: "method createResponse|390", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|390", b: "member createResponse|496" }, { a: "method createResponse|390", b: "method createResponse|498" }, { a: "method createResponse|390", b: "class ImagePutCommand|515" }, { a: "method createResponse|390", b: "member createResponse|518" }, { a: "method createResponse|390", b: "method createResponse|520" }, { a: "method createResponse|390", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|390", b: "member createResponse|525" }, { a: "method createResponse|390", b: "method createResponse|527" }, { a: "method createResponse|390", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|390", b: "member createResponse|537" }, { a: "method createResponse|390", b: "method createResponse|539" }, { a: "method createResponse|390", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|390", b: "member createResponse|544" }, { a: "method createResponse|390", b: "method createResponse|546" }, { a: "method createResponse|390", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|390", b: "member createResponse|551" }, { a: "method createResponse|390", b: "method createResponse|553" }, { a: "method createResponse|390", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|390", b: "member createResponse|574" }, { a: "method createResponse|390", b: "method createResponse|576" }, { a: "method createResponse|390", b: "class ProductCreateCommand|612" }, { a: "method createResponse|390", b: "member createResponse|624" }, { a: "method createResponse|390", b: "method createResponse|626" }, { a: "method createResponse|390", b: "class ProductPutCommand|628" }, { a: "method createResponse|390", b: "member createResponse|640" }, { a: "method createResponse|390", b: "method createResponse|642" }, { a: "method createResponse|390", b: "class CurrencyPatchCommand|385" }, { a: "method getTypeName|391", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|391", b: "class CurrencyPatchCommand|385" }, { a: "class LanguagePatchCommand|392", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|393", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|393", b: "class LanguagePatchCommand|392" }, { a: "member languagePatches|394", b: "src\\api\\Rest\\dtos.ts" }, { a: "member languagePatches|394", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|395", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|395", b: "interface IReturnVoid|676" }, { a: "member createResponse|395", b: "class ContentPatchCommand|378" }, { a: "member createResponse|395", b: "member createResponse|381" }, { a: "member createResponse|395", b: "method createResponse|383" }, { a: "member createResponse|395", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|395", b: "member createResponse|388" }, { a: "member createResponse|395", b: "method createResponse|390" }, { a: "member createResponse|395", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|395", b: "member createResponse|428" }, { a: "member createResponse|395", b: "method createResponse|430" }, { a: "member createResponse|395", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|395", b: "member createResponse|457" }, { a: "member createResponse|395", b: "method createResponse|459" }, { a: "member createResponse|395", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|395", b: "member createResponse|473" }, { a: "member createResponse|395", b: "method createResponse|475" }, { a: "member createResponse|395", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|395", b: "member createResponse|496" }, { a: "member createResponse|395", b: "method createResponse|498" }, { a: "member createResponse|395", b: "class ImagePutCommand|515" }, { a: "member createResponse|395", b: "member createResponse|518" }, { a: "member createResponse|395", b: "method createResponse|520" }, { a: "member createResponse|395", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|395", b: "member createResponse|525" }, { a: "member createResponse|395", b: "method createResponse|527" }, { a: "member createResponse|395", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|395", b: "member createResponse|537" }, { a: "member createResponse|395", b: "method createResponse|539" }, { a: "member createResponse|395", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|395", b: "member createResponse|544" }, { a: "member createResponse|395", b: "method createResponse|546" }, { a: "member createResponse|395", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|395", b: "member createResponse|551" }, { a: "member createResponse|395", b: "method createResponse|553" }, { a: "member createResponse|395", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|395", b: "member createResponse|574" }, { a: "member createResponse|395", b: "method createResponse|576" }, { a: "member createResponse|395", b: "class ProductCreateCommand|612" }, { a: "member createResponse|395", b: "member createResponse|624" }, { a: "member createResponse|395", b: "method createResponse|626" }, { a: "member createResponse|395", b: "class ProductPutCommand|628" }, { a: "member createResponse|395", b: "member createResponse|640" }, { a: "member createResponse|395", b: "method createResponse|642" }, { a: "member createResponse|395", b: "class LanguagePatchCommand|392" }, { a: "member getTypeName|396", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|396", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|397", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|397", b: "interface IReturnVoid|676" }, { a: "method createResponse|397", b: "class ContentPatchCommand|378" }, { a: "method createResponse|397", b: "member createResponse|381" }, { a: "method createResponse|397", b: "method createResponse|383" }, { a: "method createResponse|397", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|397", b: "member createResponse|388" }, { a: "method createResponse|397", b: "method createResponse|390" }, { a: "method createResponse|397", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|397", b: "member createResponse|428" }, { a: "method createResponse|397", b: "method createResponse|430" }, { a: "method createResponse|397", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|397", b: "member createResponse|457" }, { a: "method createResponse|397", b: "method createResponse|459" }, { a: "method createResponse|397", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|397", b: "member createResponse|473" }, { a: "method createResponse|397", b: "method createResponse|475" }, { a: "method createResponse|397", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|397", b: "member createResponse|496" }, { a: "method createResponse|397", b: "method createResponse|498" }, { a: "method createResponse|397", b: "class ImagePutCommand|515" }, { a: "method createResponse|397", b: "member createResponse|518" }, { a: "method createResponse|397", b: "method createResponse|520" }, { a: "method createResponse|397", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|397", b: "member createResponse|525" }, { a: "method createResponse|397", b: "method createResponse|527" }, { a: "method createResponse|397", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|397", b: "member createResponse|537" }, { a: "method createResponse|397", b: "method createResponse|539" }, { a: "method createResponse|397", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|397", b: "member createResponse|544" }, { a: "method createResponse|397", b: "method createResponse|546" }, { a: "method createResponse|397", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|397", b: "member createResponse|551" }, { a: "method createResponse|397", b: "method createResponse|553" }, { a: "method createResponse|397", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|397", b: "member createResponse|574" }, { a: "method createResponse|397", b: "method createResponse|576" }, { a: "method createResponse|397", b: "class ProductCreateCommand|612" }, { a: "method createResponse|397", b: "member createResponse|624" }, { a: "method createResponse|397", b: "method createResponse|626" }, { a: "method createResponse|397", b: "class ProductPutCommand|628" }, { a: "method createResponse|397", b: "member createResponse|640" }, { a: "method createResponse|397", b: "method createResponse|642" }, { a: "method createResponse|397", b: "class LanguagePatchCommand|392" }, { a: "method getTypeName|398", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|398", b: "class LanguagePatchCommand|392" }, { a: "class EngineClientCreateCommand|399", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|400", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|400", b: "class EngineClientCreateCommand|399" }, { a: "member clientUid|401", b: "src\\api\\Rest\\dtos.ts" }, { a: "member clientUid|401", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|402", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|402", b: "interface IReturn|675" }, { a: "member createResponse|402", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|402", b: "member createResponse|409" }, { a: "member createResponse|402", b: "method createResponse|411" }, { a: "member createResponse|402", b: "class FaqQuery|413" }, { a: "member createResponse|402", b: "member createResponse|414" }, { a: "member createResponse|402", b: "method createResponse|416" }, { a: "member createResponse|402", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|402", b: "member createResponse|421" }, { a: "member createResponse|402", b: "method createResponse|423" }, { a: "member createResponse|402", b: "class FontFileGetQuery|432" }, { a: "member createResponse|402", b: "member createResponse|434" }, { a: "member createResponse|402", b: "method createResponse|436" }, { a: "member createResponse|402", b: "class GiftCardQuery|438" }, { a: "member createResponse|402", b: "member createResponse|440" }, { a: "member createResponse|402", b: "method createResponse|442" }, { a: "member createResponse|402", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|402", b: "member createResponse|479" }, { a: "member createResponse|402", b: "method createResponse|481" }, { a: "member createResponse|402", b: "class GreetingCategoryList|483" }, { a: "member createResponse|402", b: "member createResponse|484" }, { a: "member createResponse|402", b: "method createResponse|486" }, { a: "member createResponse|402", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|402", b: "member createResponse|490" }, { a: "member createResponse|402", b: "method createResponse|492" }, { a: "member createResponse|402", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|402", b: "member createResponse|504" }, { a: "member createResponse|402", b: "method createResponse|506" }, { a: "member createResponse|402", b: "class ImageCreateCommand|508" }, { a: "member createResponse|402", b: "member createResponse|511" }, { a: "member createResponse|402", b: "method createResponse|513" }, { a: "member createResponse|402", b: "class LayoutQuery|529" }, { a: "member createResponse|402", b: "member createResponse|531" }, { a: "member createResponse|402", b: "method createResponse|533" }, { a: "member createResponse|402", b: "class LocalizationQuery|578" }, { a: "member createResponse|402", b: "member createResponse|579" }, { a: "member createResponse|402", b: "method createResponse|581" }, { a: "member createResponse|402", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|402", b: "member createResponse|584" }, { a: "member createResponse|402", b: "method createResponse|586" }, { a: "member createResponse|402", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|402", b: "member createResponse|590" }, { a: "member createResponse|402", b: "method createResponse|592" }, { a: "member createResponse|402", b: "class LocationQuery|594" }, { a: "member createResponse|402", b: "member createResponse|595" }, { a: "member createResponse|402", b: "method createResponse|597" }, { a: "member createResponse|402", b: "class OrderCreateCommand|599" }, { a: "member createResponse|402", b: "member createResponse|602" }, { a: "member createResponse|402", b: "method createResponse|604" }, { a: "member createResponse|402", b: "class ProductQuery|606" }, { a: "member createResponse|402", b: "member createResponse|608" }, { a: "member createResponse|402", b: "method createResponse|610" }, { a: "member createResponse|402", b: "class VersionQuery|644" }, { a: "member createResponse|402", b: "member createResponse|646" }, { a: "member createResponse|402", b: "method createResponse|648" }, { a: "member createResponse|402", b: "class Authenticate|650" }, { a: "member createResponse|402", b: "member createResponse|671" }, { a: "member createResponse|402", b: "method createResponse|673" }, { a: "member createResponse|402", b: "class EngineClientCreateCommand|399" }, { a: "member getTypeName|403", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|403", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|404", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|404", b: "interface IReturn|675" }, { a: "method createResponse|404", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|404", b: "member createResponse|409" }, { a: "method createResponse|404", b: "method createResponse|411" }, { a: "method createResponse|404", b: "class FaqQuery|413" }, { a: "method createResponse|404", b: "member createResponse|414" }, { a: "method createResponse|404", b: "method createResponse|416" }, { a: "method createResponse|404", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|404", b: "member createResponse|421" }, { a: "method createResponse|404", b: "method createResponse|423" }, { a: "method createResponse|404", b: "class FontFileGetQuery|432" }, { a: "method createResponse|404", b: "member createResponse|434" }, { a: "method createResponse|404", b: "method createResponse|436" }, { a: "method createResponse|404", b: "class GiftCardQuery|438" }, { a: "method createResponse|404", b: "member createResponse|440" }, { a: "method createResponse|404", b: "method createResponse|442" }, { a: "method createResponse|404", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|404", b: "member createResponse|479" }, { a: "method createResponse|404", b: "method createResponse|481" }, { a: "method createResponse|404", b: "class GreetingCategoryList|483" }, { a: "method createResponse|404", b: "member createResponse|484" }, { a: "method createResponse|404", b: "method createResponse|486" }, { a: "method createResponse|404", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|404", b: "member createResponse|490" }, { a: "method createResponse|404", b: "method createResponse|492" }, { a: "method createResponse|404", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|404", b: "member createResponse|504" }, { a: "method createResponse|404", b: "method createResponse|506" }, { a: "method createResponse|404", b: "class ImageCreateCommand|508" }, { a: "method createResponse|404", b: "member createResponse|511" }, { a: "method createResponse|404", b: "method createResponse|513" }, { a: "method createResponse|404", b: "class LayoutQuery|529" }, { a: "method createResponse|404", b: "member createResponse|531" }, { a: "method createResponse|404", b: "method createResponse|533" }, { a: "method createResponse|404", b: "class LocalizationQuery|578" }, { a: "method createResponse|404", b: "member createResponse|579" }, { a: "method createResponse|404", b: "method createResponse|581" }, { a: "method createResponse|404", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|404", b: "member createResponse|584" }, { a: "method createResponse|404", b: "method createResponse|586" }, { a: "method createResponse|404", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|404", b: "member createResponse|590" }, { a: "method createResponse|404", b: "method createResponse|592" }, { a: "method createResponse|404", b: "class LocationQuery|594" }, { a: "method createResponse|404", b: "member createResponse|595" }, { a: "method createResponse|404", b: "method createResponse|597" }, { a: "method createResponse|404", b: "class OrderCreateCommand|599" }, { a: "method createResponse|404", b: "member createResponse|602" }, { a: "method createResponse|404", b: "method createResponse|604" }, { a: "method createResponse|404", b: "class ProductQuery|606" }, { a: "method createResponse|404", b: "member createResponse|608" }, { a: "method createResponse|404", b: "method createResponse|610" }, { a: "method createResponse|404", b: "class VersionQuery|644" }, { a: "method createResponse|404", b: "member createResponse|646" }, { a: "method createResponse|404", b: "method createResponse|648" }, { a: "method createResponse|404", b: "class Authenticate|650" }, { a: "method createResponse|404", b: "member createResponse|671" }, { a: "method createResponse|404", b: "method createResponse|673" }, { a: "method createResponse|404", b: "class EngineClientCreateCommand|399" }, { a: "method getTypeName|405", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|405", b: "class EngineClientCreateCommand|399" }, { a: "class EngineClientVerifyCommand|406", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|407", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|407", b: "class EngineClientVerifyCommand|406" }, { a: "member clientUid|408", b: "src\\api\\Rest\\dtos.ts" }, { a: "member clientUid|408", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|409", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|409", b: "interface IReturn|675" }, { a: "member createResponse|409", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|409", b: "member createResponse|402" }, { a: "member createResponse|409", b: "method createResponse|404" }, { a: "member createResponse|409", b: "class FaqQuery|413" }, { a: "member createResponse|409", b: "member createResponse|414" }, { a: "member createResponse|409", b: "method createResponse|416" }, { a: "member createResponse|409", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|409", b: "member createResponse|421" }, { a: "member createResponse|409", b: "method createResponse|423" }, { a: "member createResponse|409", b: "class FontFileGetQuery|432" }, { a: "member createResponse|409", b: "member createResponse|434" }, { a: "member createResponse|409", b: "method createResponse|436" }, { a: "member createResponse|409", b: "class GiftCardQuery|438" }, { a: "member createResponse|409", b: "member createResponse|440" }, { a: "member createResponse|409", b: "method createResponse|442" }, { a: "member createResponse|409", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|409", b: "member createResponse|479" }, { a: "member createResponse|409", b: "method createResponse|481" }, { a: "member createResponse|409", b: "class GreetingCategoryList|483" }, { a: "member createResponse|409", b: "member createResponse|484" }, { a: "member createResponse|409", b: "method createResponse|486" }, { a: "member createResponse|409", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|409", b: "member createResponse|490" }, { a: "member createResponse|409", b: "method createResponse|492" }, { a: "member createResponse|409", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|409", b: "member createResponse|504" }, { a: "member createResponse|409", b: "method createResponse|506" }, { a: "member createResponse|409", b: "class ImageCreateCommand|508" }, { a: "member createResponse|409", b: "member createResponse|511" }, { a: "member createResponse|409", b: "method createResponse|513" }, { a: "member createResponse|409", b: "class LayoutQuery|529" }, { a: "member createResponse|409", b: "member createResponse|531" }, { a: "member createResponse|409", b: "method createResponse|533" }, { a: "member createResponse|409", b: "class LocalizationQuery|578" }, { a: "member createResponse|409", b: "member createResponse|579" }, { a: "member createResponse|409", b: "method createResponse|581" }, { a: "member createResponse|409", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|409", b: "member createResponse|584" }, { a: "member createResponse|409", b: "method createResponse|586" }, { a: "member createResponse|409", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|409", b: "member createResponse|590" }, { a: "member createResponse|409", b: "method createResponse|592" }, { a: "member createResponse|409", b: "class LocationQuery|594" }, { a: "member createResponse|409", b: "member createResponse|595" }, { a: "member createResponse|409", b: "method createResponse|597" }, { a: "member createResponse|409", b: "class OrderCreateCommand|599" }, { a: "member createResponse|409", b: "member createResponse|602" }, { a: "member createResponse|409", b: "method createResponse|604" }, { a: "member createResponse|409", b: "class ProductQuery|606" }, { a: "member createResponse|409", b: "member createResponse|608" }, { a: "member createResponse|409", b: "method createResponse|610" }, { a: "member createResponse|409", b: "class VersionQuery|644" }, { a: "member createResponse|409", b: "member createResponse|646" }, { a: "member createResponse|409", b: "method createResponse|648" }, { a: "member createResponse|409", b: "class Authenticate|650" }, { a: "member createResponse|409", b: "member createResponse|671" }, { a: "member createResponse|409", b: "method createResponse|673" }, { a: "member createResponse|409", b: "class EngineClientVerifyCommand|406" }, { a: "member getTypeName|410", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|410", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|411", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|411", b: "interface IReturn|675" }, { a: "method createResponse|411", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|411", b: "member createResponse|402" }, { a: "method createResponse|411", b: "method createResponse|404" }, { a: "method createResponse|411", b: "class FaqQuery|413" }, { a: "method createResponse|411", b: "member createResponse|414" }, { a: "method createResponse|411", b: "method createResponse|416" }, { a: "method createResponse|411", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|411", b: "member createResponse|421" }, { a: "method createResponse|411", b: "method createResponse|423" }, { a: "method createResponse|411", b: "class FontFileGetQuery|432" }, { a: "method createResponse|411", b: "member createResponse|434" }, { a: "method createResponse|411", b: "method createResponse|436" }, { a: "method createResponse|411", b: "class GiftCardQuery|438" }, { a: "method createResponse|411", b: "member createResponse|440" }, { a: "method createResponse|411", b: "method createResponse|442" }, { a: "method createResponse|411", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|411", b: "member createResponse|479" }, { a: "method createResponse|411", b: "method createResponse|481" }, { a: "method createResponse|411", b: "class GreetingCategoryList|483" }, { a: "method createResponse|411", b: "member createResponse|484" }, { a: "method createResponse|411", b: "method createResponse|486" }, { a: "method createResponse|411", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|411", b: "member createResponse|490" }, { a: "method createResponse|411", b: "method createResponse|492" }, { a: "method createResponse|411", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|411", b: "member createResponse|504" }, { a: "method createResponse|411", b: "method createResponse|506" }, { a: "method createResponse|411", b: "class ImageCreateCommand|508" }, { a: "method createResponse|411", b: "member createResponse|511" }, { a: "method createResponse|411", b: "method createResponse|513" }, { a: "method createResponse|411", b: "class LayoutQuery|529" }, { a: "method createResponse|411", b: "member createResponse|531" }, { a: "method createResponse|411", b: "method createResponse|533" }, { a: "method createResponse|411", b: "class LocalizationQuery|578" }, { a: "method createResponse|411", b: "member createResponse|579" }, { a: "method createResponse|411", b: "method createResponse|581" }, { a: "method createResponse|411", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|411", b: "member createResponse|584" }, { a: "method createResponse|411", b: "method createResponse|586" }, { a: "method createResponse|411", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|411", b: "member createResponse|590" }, { a: "method createResponse|411", b: "method createResponse|592" }, { a: "method createResponse|411", b: "class LocationQuery|594" }, { a: "method createResponse|411", b: "member createResponse|595" }, { a: "method createResponse|411", b: "method createResponse|597" }, { a: "method createResponse|411", b: "class OrderCreateCommand|599" }, { a: "method createResponse|411", b: "member createResponse|602" }, { a: "method createResponse|411", b: "method createResponse|604" }, { a: "method createResponse|411", b: "class ProductQuery|606" }, { a: "method createResponse|411", b: "member createResponse|608" }, { a: "method createResponse|411", b: "method createResponse|610" }, { a: "method createResponse|411", b: "class VersionQuery|644" }, { a: "method createResponse|411", b: "member createResponse|646" }, { a: "method createResponse|411", b: "method createResponse|648" }, { a: "method createResponse|411", b: "class Authenticate|650" }, { a: "method createResponse|411", b: "member createResponse|671" }, { a: "method createResponse|411", b: "method createResponse|673" }, { a: "method createResponse|411", b: "class EngineClientVerifyCommand|406" }, { a: "method getTypeName|412", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|412", b: "class EngineClientVerifyCommand|406" }, { a: "class FaqQuery|413", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|414", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|414", b: "interface IReturn|675" }, { a: "member createResponse|414", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|414", b: "member createResponse|402" }, { a: "member createResponse|414", b: "method createResponse|404" }, { a: "member createResponse|414", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|414", b: "member createResponse|409" }, { a: "member createResponse|414", b: "method createResponse|411" }, { a: "member createResponse|414", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|414", b: "member createResponse|421" }, { a: "member createResponse|414", b: "method createResponse|423" }, { a: "member createResponse|414", b: "class FontFileGetQuery|432" }, { a: "member createResponse|414", b: "member createResponse|434" }, { a: "member createResponse|414", b: "method createResponse|436" }, { a: "member createResponse|414", b: "class GiftCardQuery|438" }, { a: "member createResponse|414", b: "member createResponse|440" }, { a: "member createResponse|414", b: "method createResponse|442" }, { a: "member createResponse|414", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|414", b: "member createResponse|479" }, { a: "member createResponse|414", b: "method createResponse|481" }, { a: "member createResponse|414", b: "class GreetingCategoryList|483" }, { a: "member createResponse|414", b: "member createResponse|484" }, { a: "member createResponse|414", b: "method createResponse|486" }, { a: "member createResponse|414", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|414", b: "member createResponse|490" }, { a: "member createResponse|414", b: "method createResponse|492" }, { a: "member createResponse|414", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|414", b: "member createResponse|504" }, { a: "member createResponse|414", b: "method createResponse|506" }, { a: "member createResponse|414", b: "class ImageCreateCommand|508" }, { a: "member createResponse|414", b: "member createResponse|511" }, { a: "member createResponse|414", b: "method createResponse|513" }, { a: "member createResponse|414", b: "class LayoutQuery|529" }, { a: "member createResponse|414", b: "member createResponse|531" }, { a: "member createResponse|414", b: "method createResponse|533" }, { a: "member createResponse|414", b: "class LocalizationQuery|578" }, { a: "member createResponse|414", b: "member createResponse|579" }, { a: "member createResponse|414", b: "method createResponse|581" }, { a: "member createResponse|414", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|414", b: "member createResponse|584" }, { a: "member createResponse|414", b: "method createResponse|586" }, { a: "member createResponse|414", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|414", b: "member createResponse|590" }, { a: "member createResponse|414", b: "method createResponse|592" }, { a: "member createResponse|414", b: "class LocationQuery|594" }, { a: "member createResponse|414", b: "member createResponse|595" }, { a: "member createResponse|414", b: "method createResponse|597" }, { a: "member createResponse|414", b: "class OrderCreateCommand|599" }, { a: "member createResponse|414", b: "member createResponse|602" }, { a: "member createResponse|414", b: "method createResponse|604" }, { a: "member createResponse|414", b: "class ProductQuery|606" }, { a: "member createResponse|414", b: "member createResponse|608" }, { a: "member createResponse|414", b: "method createResponse|610" }, { a: "member createResponse|414", b: "class VersionQuery|644" }, { a: "member createResponse|414", b: "member createResponse|646" }, { a: "member createResponse|414", b: "method createResponse|648" }, { a: "member createResponse|414", b: "class Authenticate|650" }, { a: "member createResponse|414", b: "member createResponse|671" }, { a: "member createResponse|414", b: "method createResponse|673" }, { a: "member createResponse|414", b: "class FaqQuery|413" }, { a: "member getTypeName|415", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|415", b: "class FaqQuery|413" }, { a: "method createResponse|416", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|416", b: "interface IReturn|675" }, { a: "method createResponse|416", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|416", b: "member createResponse|402" }, { a: "method createResponse|416", b: "method createResponse|404" }, { a: "method createResponse|416", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|416", b: "member createResponse|409" }, { a: "method createResponse|416", b: "method createResponse|411" }, { a: "method createResponse|416", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|416", b: "member createResponse|421" }, { a: "method createResponse|416", b: "method createResponse|423" }, { a: "method createResponse|416", b: "class FontFileGetQuery|432" }, { a: "method createResponse|416", b: "member createResponse|434" }, { a: "method createResponse|416", b: "method createResponse|436" }, { a: "method createResponse|416", b: "class GiftCardQuery|438" }, { a: "method createResponse|416", b: "member createResponse|440" }, { a: "method createResponse|416", b: "method createResponse|442" }, { a: "method createResponse|416", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|416", b: "member createResponse|479" }, { a: "method createResponse|416", b: "method createResponse|481" }, { a: "method createResponse|416", b: "class GreetingCategoryList|483" }, { a: "method createResponse|416", b: "member createResponse|484" }, { a: "method createResponse|416", b: "method createResponse|486" }, { a: "method createResponse|416", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|416", b: "member createResponse|490" }, { a: "method createResponse|416", b: "method createResponse|492" }, { a: "method createResponse|416", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|416", b: "member createResponse|504" }, { a: "method createResponse|416", b: "method createResponse|506" }, { a: "method createResponse|416", b: "class ImageCreateCommand|508" }, { a: "method createResponse|416", b: "member createResponse|511" }, { a: "method createResponse|416", b: "method createResponse|513" }, { a: "method createResponse|416", b: "class LayoutQuery|529" }, { a: "method createResponse|416", b: "member createResponse|531" }, { a: "method createResponse|416", b: "method createResponse|533" }, { a: "method createResponse|416", b: "class LocalizationQuery|578" }, { a: "method createResponse|416", b: "member createResponse|579" }, { a: "method createResponse|416", b: "method createResponse|581" }, { a: "method createResponse|416", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|416", b: "member createResponse|584" }, { a: "method createResponse|416", b: "method createResponse|586" }, { a: "method createResponse|416", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|416", b: "member createResponse|590" }, { a: "method createResponse|416", b: "method createResponse|592" }, { a: "method createResponse|416", b: "class LocationQuery|594" }, { a: "method createResponse|416", b: "member createResponse|595" }, { a: "method createResponse|416", b: "method createResponse|597" }, { a: "method createResponse|416", b: "class OrderCreateCommand|599" }, { a: "method createResponse|416", b: "member createResponse|602" }, { a: "method createResponse|416", b: "method createResponse|604" }, { a: "method createResponse|416", b: "class ProductQuery|606" }, { a: "method createResponse|416", b: "member createResponse|608" }, { a: "method createResponse|416", b: "method createResponse|610" }, { a: "method createResponse|416", b: "class VersionQuery|644" }, { a: "method createResponse|416", b: "member createResponse|646" }, { a: "method createResponse|416", b: "method createResponse|648" }, { a: "method createResponse|416", b: "class Authenticate|650" }, { a: "method createResponse|416", b: "member createResponse|671" }, { a: "method createResponse|416", b: "method createResponse|673" }, { a: "method createResponse|416", b: "class FaqQuery|413" }, { a: "method getTypeName|417", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|417", b: "class FaqQuery|413" }, { a: "class FontFileCreateCommand|418", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|419", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|419", b: "class FontFileCreateCommand|418" }, { a: "member fileDtos|420", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fileDtos|420", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|421", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|421", b: "interface IReturn|675" }, { a: "member createResponse|421", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|421", b: "member createResponse|402" }, { a: "member createResponse|421", b: "method createResponse|404" }, { a: "member createResponse|421", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|421", b: "member createResponse|409" }, { a: "member createResponse|421", b: "method createResponse|411" }, { a: "member createResponse|421", b: "class FaqQuery|413" }, { a: "member createResponse|421", b: "member createResponse|414" }, { a: "member createResponse|421", b: "method createResponse|416" }, { a: "member createResponse|421", b: "class FontFileGetQuery|432" }, { a: "member createResponse|421", b: "member createResponse|434" }, { a: "member createResponse|421", b: "method createResponse|436" }, { a: "member createResponse|421", b: "class GiftCardQuery|438" }, { a: "member createResponse|421", b: "member createResponse|440" }, { a: "member createResponse|421", b: "method createResponse|442" }, { a: "member createResponse|421", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|421", b: "member createResponse|479" }, { a: "member createResponse|421", b: "method createResponse|481" }, { a: "member createResponse|421", b: "class GreetingCategoryList|483" }, { a: "member createResponse|421", b: "member createResponse|484" }, { a: "member createResponse|421", b: "method createResponse|486" }, { a: "member createResponse|421", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|421", b: "member createResponse|490" }, { a: "member createResponse|421", b: "method createResponse|492" }, { a: "member createResponse|421", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|421", b: "member createResponse|504" }, { a: "member createResponse|421", b: "method createResponse|506" }, { a: "member createResponse|421", b: "class ImageCreateCommand|508" }, { a: "member createResponse|421", b: "member createResponse|511" }, { a: "member createResponse|421", b: "method createResponse|513" }, { a: "member createResponse|421", b: "class LayoutQuery|529" }, { a: "member createResponse|421", b: "member createResponse|531" }, { a: "member createResponse|421", b: "method createResponse|533" }, { a: "member createResponse|421", b: "class LocalizationQuery|578" }, { a: "member createResponse|421", b: "member createResponse|579" }, { a: "member createResponse|421", b: "method createResponse|581" }, { a: "member createResponse|421", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|421", b: "member createResponse|584" }, { a: "member createResponse|421", b: "method createResponse|586" }, { a: "member createResponse|421", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|421", b: "member createResponse|590" }, { a: "member createResponse|421", b: "method createResponse|592" }, { a: "member createResponse|421", b: "class LocationQuery|594" }, { a: "member createResponse|421", b: "member createResponse|595" }, { a: "member createResponse|421", b: "method createResponse|597" }, { a: "member createResponse|421", b: "class OrderCreateCommand|599" }, { a: "member createResponse|421", b: "member createResponse|602" }, { a: "member createResponse|421", b: "method createResponse|604" }, { a: "member createResponse|421", b: "class ProductQuery|606" }, { a: "member createResponse|421", b: "member createResponse|608" }, { a: "member createResponse|421", b: "method createResponse|610" }, { a: "member createResponse|421", b: "class VersionQuery|644" }, { a: "member createResponse|421", b: "member createResponse|646" }, { a: "member createResponse|421", b: "method createResponse|648" }, { a: "member createResponse|421", b: "class Authenticate|650" }, { a: "member createResponse|421", b: "member createResponse|671" }, { a: "member createResponse|421", b: "method createResponse|673" }, { a: "member createResponse|421", b: "class FontFileCreateCommand|418" }, { a: "member getTypeName|422", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|422", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|423", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|423", b: "interface IReturn|675" }, { a: "method createResponse|423", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|423", b: "member createResponse|402" }, { a: "method createResponse|423", b: "method createResponse|404" }, { a: "method createResponse|423", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|423", b: "member createResponse|409" }, { a: "method createResponse|423", b: "method createResponse|411" }, { a: "method createResponse|423", b: "class FaqQuery|413" }, { a: "method createResponse|423", b: "member createResponse|414" }, { a: "method createResponse|423", b: "method createResponse|416" }, { a: "method createResponse|423", b: "class FontFileGetQuery|432" }, { a: "method createResponse|423", b: "member createResponse|434" }, { a: "method createResponse|423", b: "method createResponse|436" }, { a: "method createResponse|423", b: "class GiftCardQuery|438" }, { a: "method createResponse|423", b: "member createResponse|440" }, { a: "method createResponse|423", b: "method createResponse|442" }, { a: "method createResponse|423", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|423", b: "member createResponse|479" }, { a: "method createResponse|423", b: "method createResponse|481" }, { a: "method createResponse|423", b: "class GreetingCategoryList|483" }, { a: "method createResponse|423", b: "member createResponse|484" }, { a: "method createResponse|423", b: "method createResponse|486" }, { a: "method createResponse|423", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|423", b: "member createResponse|490" }, { a: "method createResponse|423", b: "method createResponse|492" }, { a: "method createResponse|423", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|423", b: "member createResponse|504" }, { a: "method createResponse|423", b: "method createResponse|506" }, { a: "method createResponse|423", b: "class ImageCreateCommand|508" }, { a: "method createResponse|423", b: "member createResponse|511" }, { a: "method createResponse|423", b: "method createResponse|513" }, { a: "method createResponse|423", b: "class LayoutQuery|529" }, { a: "method createResponse|423", b: "member createResponse|531" }, { a: "method createResponse|423", b: "method createResponse|533" }, { a: "method createResponse|423", b: "class LocalizationQuery|578" }, { a: "method createResponse|423", b: "member createResponse|579" }, { a: "method createResponse|423", b: "method createResponse|581" }, { a: "method createResponse|423", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|423", b: "member createResponse|584" }, { a: "method createResponse|423", b: "method createResponse|586" }, { a: "method createResponse|423", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|423", b: "member createResponse|590" }, { a: "method createResponse|423", b: "method createResponse|592" }, { a: "method createResponse|423", b: "class LocationQuery|594" }, { a: "method createResponse|423", b: "member createResponse|595" }, { a: "method createResponse|423", b: "method createResponse|597" }, { a: "method createResponse|423", b: "class OrderCreateCommand|599" }, { a: "method createResponse|423", b: "member createResponse|602" }, { a: "method createResponse|423", b: "method createResponse|604" }, { a: "method createResponse|423", b: "class ProductQuery|606" }, { a: "method createResponse|423", b: "member createResponse|608" }, { a: "method createResponse|423", b: "method createResponse|610" }, { a: "method createResponse|423", b: "class VersionQuery|644" }, { a: "method createResponse|423", b: "member createResponse|646" }, { a: "method createResponse|423", b: "method createResponse|648" }, { a: "method createResponse|423", b: "class Authenticate|650" }, { a: "method createResponse|423", b: "member createResponse|671" }, { a: "method createResponse|423", b: "method createResponse|673" }, { a: "method createResponse|423", b: "class FontFileCreateCommand|418" }, { a: "method getTypeName|424", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|424", b: "class FontFileCreateCommand|418" }, { a: "class FontFileDeleteCommand|425", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fileIds|426", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fileIds|426", b: "class FontFileDeleteCommand|425" }, { a: "member engineId|427", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|427", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|428", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|428", b: "interface IReturnVoid|676" }, { a: "member createResponse|428", b: "class ContentPatchCommand|378" }, { a: "member createResponse|428", b: "member createResponse|381" }, { a: "member createResponse|428", b: "method createResponse|383" }, { a: "member createResponse|428", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|428", b: "member createResponse|388" }, { a: "member createResponse|428", b: "method createResponse|390" }, { a: "member createResponse|428", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|428", b: "member createResponse|395" }, { a: "member createResponse|428", b: "method createResponse|397" }, { a: "member createResponse|428", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|428", b: "member createResponse|457" }, { a: "member createResponse|428", b: "method createResponse|459" }, { a: "member createResponse|428", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|428", b: "member createResponse|473" }, { a: "member createResponse|428", b: "method createResponse|475" }, { a: "member createResponse|428", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|428", b: "member createResponse|496" }, { a: "member createResponse|428", b: "method createResponse|498" }, { a: "member createResponse|428", b: "class ImagePutCommand|515" }, { a: "member createResponse|428", b: "member createResponse|518" }, { a: "member createResponse|428", b: "method createResponse|520" }, { a: "member createResponse|428", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|428", b: "member createResponse|525" }, { a: "member createResponse|428", b: "method createResponse|527" }, { a: "member createResponse|428", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|428", b: "member createResponse|537" }, { a: "member createResponse|428", b: "method createResponse|539" }, { a: "member createResponse|428", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|428", b: "member createResponse|544" }, { a: "member createResponse|428", b: "method createResponse|546" }, { a: "member createResponse|428", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|428", b: "member createResponse|551" }, { a: "member createResponse|428", b: "method createResponse|553" }, { a: "member createResponse|428", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|428", b: "member createResponse|574" }, { a: "member createResponse|428", b: "method createResponse|576" }, { a: "member createResponse|428", b: "class ProductCreateCommand|612" }, { a: "member createResponse|428", b: "member createResponse|624" }, { a: "member createResponse|428", b: "method createResponse|626" }, { a: "member createResponse|428", b: "class ProductPutCommand|628" }, { a: "member createResponse|428", b: "member createResponse|640" }, { a: "member createResponse|428", b: "method createResponse|642" }, { a: "member createResponse|428", b: "class FontFileDeleteCommand|425" }, { a: "member getTypeName|429", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|429", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|430", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|430", b: "interface IReturnVoid|676" }, { a: "method createResponse|430", b: "class ContentPatchCommand|378" }, { a: "method createResponse|430", b: "member createResponse|381" }, { a: "method createResponse|430", b: "method createResponse|383" }, { a: "method createResponse|430", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|430", b: "member createResponse|388" }, { a: "method createResponse|430", b: "method createResponse|390" }, { a: "method createResponse|430", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|430", b: "member createResponse|395" }, { a: "method createResponse|430", b: "method createResponse|397" }, { a: "method createResponse|430", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|430", b: "member createResponse|457" }, { a: "method createResponse|430", b: "method createResponse|459" }, { a: "method createResponse|430", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|430", b: "member createResponse|473" }, { a: "method createResponse|430", b: "method createResponse|475" }, { a: "method createResponse|430", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|430", b: "member createResponse|496" }, { a: "method createResponse|430", b: "method createResponse|498" }, { a: "method createResponse|430", b: "class ImagePutCommand|515" }, { a: "method createResponse|430", b: "member createResponse|518" }, { a: "method createResponse|430", b: "method createResponse|520" }, { a: "method createResponse|430", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|430", b: "member createResponse|525" }, { a: "method createResponse|430", b: "method createResponse|527" }, { a: "method createResponse|430", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|430", b: "member createResponse|537" }, { a: "method createResponse|430", b: "method createResponse|539" }, { a: "method createResponse|430", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|430", b: "member createResponse|544" }, { a: "method createResponse|430", b: "method createResponse|546" }, { a: "method createResponse|430", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|430", b: "member createResponse|551" }, { a: "method createResponse|430", b: "method createResponse|553" }, { a: "method createResponse|430", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|430", b: "member createResponse|574" }, { a: "method createResponse|430", b: "method createResponse|576" }, { a: "method createResponse|430", b: "class ProductCreateCommand|612" }, { a: "method createResponse|430", b: "member createResponse|624" }, { a: "method createResponse|430", b: "method createResponse|626" }, { a: "method createResponse|430", b: "class ProductPutCommand|628" }, { a: "method createResponse|430", b: "member createResponse|640" }, { a: "method createResponse|430", b: "method createResponse|642" }, { a: "method createResponse|430", b: "class FontFileDeleteCommand|425" }, { a: "method getTypeName|431", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|431", b: "class FontFileDeleteCommand|425" }, { a: "class FontFileGetQuery|432", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|433", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|433", b: "class FontFileGetQuery|432" }, { a: "member createResponse|434", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|434", b: "interface IReturn|675" }, { a: "member createResponse|434", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|434", b: "member createResponse|402" }, { a: "member createResponse|434", b: "method createResponse|404" }, { a: "member createResponse|434", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|434", b: "member createResponse|409" }, { a: "member createResponse|434", b: "method createResponse|411" }, { a: "member createResponse|434", b: "class FaqQuery|413" }, { a: "member createResponse|434", b: "member createResponse|414" }, { a: "member createResponse|434", b: "method createResponse|416" }, { a: "member createResponse|434", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|434", b: "member createResponse|421" }, { a: "member createResponse|434", b: "method createResponse|423" }, { a: "member createResponse|434", b: "class GiftCardQuery|438" }, { a: "member createResponse|434", b: "member createResponse|440" }, { a: "member createResponse|434", b: "method createResponse|442" }, { a: "member createResponse|434", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|434", b: "member createResponse|479" }, { a: "member createResponse|434", b: "method createResponse|481" }, { a: "member createResponse|434", b: "class GreetingCategoryList|483" }, { a: "member createResponse|434", b: "member createResponse|484" }, { a: "member createResponse|434", b: "method createResponse|486" }, { a: "member createResponse|434", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|434", b: "member createResponse|490" }, { a: "member createResponse|434", b: "method createResponse|492" }, { a: "member createResponse|434", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|434", b: "member createResponse|504" }, { a: "member createResponse|434", b: "method createResponse|506" }, { a: "member createResponse|434", b: "class ImageCreateCommand|508" }, { a: "member createResponse|434", b: "member createResponse|511" }, { a: "member createResponse|434", b: "method createResponse|513" }, { a: "member createResponse|434", b: "class LayoutQuery|529" }, { a: "member createResponse|434", b: "member createResponse|531" }, { a: "member createResponse|434", b: "method createResponse|533" }, { a: "member createResponse|434", b: "class LocalizationQuery|578" }, { a: "member createResponse|434", b: "member createResponse|579" }, { a: "member createResponse|434", b: "method createResponse|581" }, { a: "member createResponse|434", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|434", b: "member createResponse|584" }, { a: "member createResponse|434", b: "method createResponse|586" }, { a: "member createResponse|434", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|434", b: "member createResponse|590" }, { a: "member createResponse|434", b: "method createResponse|592" }, { a: "member createResponse|434", b: "class LocationQuery|594" }, { a: "member createResponse|434", b: "member createResponse|595" }, { a: "member createResponse|434", b: "method createResponse|597" }, { a: "member createResponse|434", b: "class OrderCreateCommand|599" }, { a: "member createResponse|434", b: "member createResponse|602" }, { a: "member createResponse|434", b: "method createResponse|604" }, { a: "member createResponse|434", b: "class ProductQuery|606" }, { a: "member createResponse|434", b: "member createResponse|608" }, { a: "member createResponse|434", b: "method createResponse|610" }, { a: "member createResponse|434", b: "class VersionQuery|644" }, { a: "member createResponse|434", b: "member createResponse|646" }, { a: "member createResponse|434", b: "method createResponse|648" }, { a: "member createResponse|434", b: "class Authenticate|650" }, { a: "member createResponse|434", b: "member createResponse|671" }, { a: "member createResponse|434", b: "method createResponse|673" }, { a: "member createResponse|434", b: "class FontFileGetQuery|432" }, { a: "member getTypeName|435", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|435", b: "class FontFileGetQuery|432" }, { a: "method createResponse|436", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|436", b: "interface IReturn|675" }, { a: "method createResponse|436", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|436", b: "member createResponse|402" }, { a: "method createResponse|436", b: "method createResponse|404" }, { a: "method createResponse|436", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|436", b: "member createResponse|409" }, { a: "method createResponse|436", b: "method createResponse|411" }, { a: "method createResponse|436", b: "class FaqQuery|413" }, { a: "method createResponse|436", b: "member createResponse|414" }, { a: "method createResponse|436", b: "method createResponse|416" }, { a: "method createResponse|436", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|436", b: "member createResponse|421" }, { a: "method createResponse|436", b: "method createResponse|423" }, { a: "method createResponse|436", b: "class GiftCardQuery|438" }, { a: "method createResponse|436", b: "member createResponse|440" }, { a: "method createResponse|436", b: "method createResponse|442" }, { a: "method createResponse|436", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|436", b: "member createResponse|479" }, { a: "method createResponse|436", b: "method createResponse|481" }, { a: "method createResponse|436", b: "class GreetingCategoryList|483" }, { a: "method createResponse|436", b: "member createResponse|484" }, { a: "method createResponse|436", b: "method createResponse|486" }, { a: "method createResponse|436", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|436", b: "member createResponse|490" }, { a: "method createResponse|436", b: "method createResponse|492" }, { a: "method createResponse|436", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|436", b: "member createResponse|504" }, { a: "method createResponse|436", b: "method createResponse|506" }, { a: "method createResponse|436", b: "class ImageCreateCommand|508" }, { a: "method createResponse|436", b: "member createResponse|511" }, { a: "method createResponse|436", b: "method createResponse|513" }, { a: "method createResponse|436", b: "class LayoutQuery|529" }, { a: "method createResponse|436", b: "member createResponse|531" }, { a: "method createResponse|436", b: "method createResponse|533" }, { a: "method createResponse|436", b: "class LocalizationQuery|578" }, { a: "method createResponse|436", b: "member createResponse|579" }, { a: "method createResponse|436", b: "method createResponse|581" }, { a: "method createResponse|436", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|436", b: "member createResponse|584" }, { a: "method createResponse|436", b: "method createResponse|586" }, { a: "method createResponse|436", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|436", b: "member createResponse|590" }, { a: "method createResponse|436", b: "method createResponse|592" }, { a: "method createResponse|436", b: "class LocationQuery|594" }, { a: "method createResponse|436", b: "member createResponse|595" }, { a: "method createResponse|436", b: "method createResponse|597" }, { a: "method createResponse|436", b: "class OrderCreateCommand|599" }, { a: "method createResponse|436", b: "member createResponse|602" }, { a: "method createResponse|436", b: "method createResponse|604" }, { a: "method createResponse|436", b: "class ProductQuery|606" }, { a: "method createResponse|436", b: "member createResponse|608" }, { a: "method createResponse|436", b: "method createResponse|610" }, { a: "method createResponse|436", b: "class VersionQuery|644" }, { a: "method createResponse|436", b: "member createResponse|646" }, { a: "method createResponse|436", b: "method createResponse|648" }, { a: "method createResponse|436", b: "class Authenticate|650" }, { a: "method createResponse|436", b: "member createResponse|671" }, { a: "method createResponse|436", b: "method createResponse|673" }, { a: "method createResponse|436", b: "class FontFileGetQuery|432" }, { a: "method getTypeName|437", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|437", b: "class FontFileGetQuery|432" }, { a: "class GiftCardQuery|438", b: "src\\api\\Rest\\dtos.ts" }, { a: "class GiftCardQuery|438", b: "var getProducts|857" }, { a: "member engineId|439", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|439", b: "var getProducts|857" }, { a: "member engineId|439", b: "class GiftCardQuery|438" }, { a: "member createResponse|440", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|440", b: "interface IReturn|675" }, { a: "member createResponse|440", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|440", b: "member createResponse|402" }, { a: "member createResponse|440", b: "method createResponse|404" }, { a: "member createResponse|440", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|440", b: "member createResponse|409" }, { a: "member createResponse|440", b: "method createResponse|411" }, { a: "member createResponse|440", b: "class FaqQuery|413" }, { a: "member createResponse|440", b: "member createResponse|414" }, { a: "member createResponse|440", b: "method createResponse|416" }, { a: "member createResponse|440", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|440", b: "member createResponse|421" }, { a: "member createResponse|440", b: "method createResponse|423" }, { a: "member createResponse|440", b: "class FontFileGetQuery|432" }, { a: "member createResponse|440", b: "member createResponse|434" }, { a: "member createResponse|440", b: "method createResponse|436" }, { a: "member createResponse|440", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|440", b: "member createResponse|479" }, { a: "member createResponse|440", b: "method createResponse|481" }, { a: "member createResponse|440", b: "class GreetingCategoryList|483" }, { a: "member createResponse|440", b: "member createResponse|484" }, { a: "member createResponse|440", b: "method createResponse|486" }, { a: "member createResponse|440", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|440", b: "member createResponse|490" }, { a: "member createResponse|440", b: "method createResponse|492" }, { a: "member createResponse|440", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|440", b: "member createResponse|504" }, { a: "member createResponse|440", b: "method createResponse|506" }, { a: "member createResponse|440", b: "class ImageCreateCommand|508" }, { a: "member createResponse|440", b: "member createResponse|511" }, { a: "member createResponse|440", b: "method createResponse|513" }, { a: "member createResponse|440", b: "class LayoutQuery|529" }, { a: "member createResponse|440", b: "member createResponse|531" }, { a: "member createResponse|440", b: "method createResponse|533" }, { a: "member createResponse|440", b: "class LocalizationQuery|578" }, { a: "member createResponse|440", b: "member createResponse|579" }, { a: "member createResponse|440", b: "method createResponse|581" }, { a: "member createResponse|440", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|440", b: "member createResponse|584" }, { a: "member createResponse|440", b: "method createResponse|586" }, { a: "member createResponse|440", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|440", b: "member createResponse|590" }, { a: "member createResponse|440", b: "method createResponse|592" }, { a: "member createResponse|440", b: "class LocationQuery|594" }, { a: "member createResponse|440", b: "member createResponse|595" }, { a: "member createResponse|440", b: "method createResponse|597" }, { a: "member createResponse|440", b: "class OrderCreateCommand|599" }, { a: "member createResponse|440", b: "member createResponse|602" }, { a: "member createResponse|440", b: "method createResponse|604" }, { a: "member createResponse|440", b: "class ProductQuery|606" }, { a: "member createResponse|440", b: "member createResponse|608" }, { a: "member createResponse|440", b: "method createResponse|610" }, { a: "member createResponse|440", b: "class VersionQuery|644" }, { a: "member createResponse|440", b: "member createResponse|646" }, { a: "member createResponse|440", b: "method createResponse|648" }, { a: "member createResponse|440", b: "class Authenticate|650" }, { a: "member createResponse|440", b: "member createResponse|671" }, { a: "member createResponse|440", b: "method createResponse|673" }, { a: "member createResponse|440", b: "class GiftCardQuery|438" }, { a: "member getTypeName|441", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|441", b: "class GiftCardQuery|438" }, { a: "method createResponse|442", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|442", b: "interface IReturn|675" }, { a: "method createResponse|442", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|442", b: "member createResponse|402" }, { a: "method createResponse|442", b: "method createResponse|404" }, { a: "method createResponse|442", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|442", b: "member createResponse|409" }, { a: "method createResponse|442", b: "method createResponse|411" }, { a: "method createResponse|442", b: "class FaqQuery|413" }, { a: "method createResponse|442", b: "member createResponse|414" }, { a: "method createResponse|442", b: "method createResponse|416" }, { a: "method createResponse|442", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|442", b: "member createResponse|421" }, { a: "method createResponse|442", b: "method createResponse|423" }, { a: "method createResponse|442", b: "class FontFileGetQuery|432" }, { a: "method createResponse|442", b: "member createResponse|434" }, { a: "method createResponse|442", b: "method createResponse|436" }, { a: "method createResponse|442", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|442", b: "member createResponse|479" }, { a: "method createResponse|442", b: "method createResponse|481" }, { a: "method createResponse|442", b: "class GreetingCategoryList|483" }, { a: "method createResponse|442", b: "member createResponse|484" }, { a: "method createResponse|442", b: "method createResponse|486" }, { a: "method createResponse|442", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|442", b: "member createResponse|490" }, { a: "method createResponse|442", b: "method createResponse|492" }, { a: "method createResponse|442", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|442", b: "member createResponse|504" }, { a: "method createResponse|442", b: "method createResponse|506" }, { a: "method createResponse|442", b: "class ImageCreateCommand|508" }, { a: "method createResponse|442", b: "member createResponse|511" }, { a: "method createResponse|442", b: "method createResponse|513" }, { a: "method createResponse|442", b: "class LayoutQuery|529" }, { a: "method createResponse|442", b: "member createResponse|531" }, { a: "method createResponse|442", b: "method createResponse|533" }, { a: "method createResponse|442", b: "class LocalizationQuery|578" }, { a: "method createResponse|442", b: "member createResponse|579" }, { a: "method createResponse|442", b: "method createResponse|581" }, { a: "method createResponse|442", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|442", b: "member createResponse|584" }, { a: "method createResponse|442", b: "method createResponse|586" }, { a: "method createResponse|442", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|442", b: "member createResponse|590" }, { a: "method createResponse|442", b: "method createResponse|592" }, { a: "method createResponse|442", b: "class LocationQuery|594" }, { a: "method createResponse|442", b: "member createResponse|595" }, { a: "method createResponse|442", b: "method createResponse|597" }, { a: "method createResponse|442", b: "class OrderCreateCommand|599" }, { a: "method createResponse|442", b: "member createResponse|602" }, { a: "method createResponse|442", b: "method createResponse|604" }, { a: "method createResponse|442", b: "class ProductQuery|606" }, { a: "method createResponse|442", b: "member createResponse|608" }, { a: "method createResponse|442", b: "method createResponse|610" }, { a: "method createResponse|442", b: "class VersionQuery|644" }, { a: "method createResponse|442", b: "member createResponse|646" }, { a: "method createResponse|442", b: "method createResponse|648" }, { a: "method createResponse|442", b: "class Authenticate|650" }, { a: "method createResponse|442", b: "member createResponse|671" }, { a: "method createResponse|442", b: "method createResponse|673" }, { a: "method createResponse|442", b: "class GiftCardQuery|438" }, { a: "method getTypeName|443", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|443", b: "class GiftCardQuery|438" }, { a: "class GiftCardCreateCommand|444", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|445", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|445", b: "class GiftCardCreateCommand|444" }, { a: "member giftCardEngineId|446", b: "src\\api\\Rest\\dtos.ts" }, { a: "member giftCardEngineId|446", b: "class GiftCardCreateCommand|444" }, { a: "member amountDescription|447", b: "src\\api\\Rest\\dtos.ts" }, { a: "member amountDescription|447", b: "class GiftCardCreateCommand|444" }, { a: "member isEmailDelivery|448", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|448", b: "class GiftCardCreateCommand|444" }, { a: "member isSmsDelivery|449", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|449", b: "class GiftCardCreateCommand|444" }, { a: "member isPostDelivery|450", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|450", b: "class GiftCardCreateCommand|444" }, { a: "member mobilePayLink|451", b: "src\\api\\Rest\\dtos.ts" }, { a: "member mobilePayLink|451", b: "class GiftCardCreateCommand|444" }, { a: "member isMobilePayEnabled|452", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isMobilePayEnabled|452", b: "class GiftCardCreateCommand|444" }, { a: "member emailImage|453", b: "src\\api\\Rest\\dtos.ts" }, { a: "member emailImage|453", b: "class GiftCardCreateCommand|444" }, { a: "member smsImage|454", b: "src\\api\\Rest\\dtos.ts" }, { a: "member smsImage|454", b: "class GiftCardCreateCommand|444" }, { a: "member postImage|455", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postImage|455", b: "class GiftCardCreateCommand|444" }, { a: "member values|456", b: "src\\api\\Rest\\dtos.ts" }, { a: "member values|456", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|457", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|457", b: "interface IReturnVoid|676" }, { a: "member createResponse|457", b: "class ContentPatchCommand|378" }, { a: "member createResponse|457", b: "member createResponse|381" }, { a: "member createResponse|457", b: "method createResponse|383" }, { a: "member createResponse|457", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|457", b: "member createResponse|388" }, { a: "member createResponse|457", b: "method createResponse|390" }, { a: "member createResponse|457", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|457", b: "member createResponse|395" }, { a: "member createResponse|457", b: "method createResponse|397" }, { a: "member createResponse|457", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|457", b: "member createResponse|428" }, { a: "member createResponse|457", b: "method createResponse|430" }, { a: "member createResponse|457", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|457", b: "member createResponse|473" }, { a: "member createResponse|457", b: "method createResponse|475" }, { a: "member createResponse|457", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|457", b: "member createResponse|496" }, { a: "member createResponse|457", b: "method createResponse|498" }, { a: "member createResponse|457", b: "class ImagePutCommand|515" }, { a: "member createResponse|457", b: "member createResponse|518" }, { a: "member createResponse|457", b: "method createResponse|520" }, { a: "member createResponse|457", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|457", b: "member createResponse|525" }, { a: "member createResponse|457", b: "method createResponse|527" }, { a: "member createResponse|457", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|457", b: "member createResponse|537" }, { a: "member createResponse|457", b: "method createResponse|539" }, { a: "member createResponse|457", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|457", b: "member createResponse|544" }, { a: "member createResponse|457", b: "method createResponse|546" }, { a: "member createResponse|457", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|457", b: "member createResponse|551" }, { a: "member createResponse|457", b: "method createResponse|553" }, { a: "member createResponse|457", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|457", b: "member createResponse|574" }, { a: "member createResponse|457", b: "method createResponse|576" }, { a: "member createResponse|457", b: "class ProductCreateCommand|612" }, { a: "member createResponse|457", b: "member createResponse|624" }, { a: "member createResponse|457", b: "method createResponse|626" }, { a: "member createResponse|457", b: "class ProductPutCommand|628" }, { a: "member createResponse|457", b: "member createResponse|640" }, { a: "member createResponse|457", b: "method createResponse|642" }, { a: "member createResponse|457", b: "class GiftCardCreateCommand|444" }, { a: "member getTypeName|458", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|458", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|459", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|459", b: "interface IReturnVoid|676" }, { a: "method createResponse|459", b: "class ContentPatchCommand|378" }, { a: "method createResponse|459", b: "member createResponse|381" }, { a: "method createResponse|459", b: "method createResponse|383" }, { a: "method createResponse|459", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|459", b: "member createResponse|388" }, { a: "method createResponse|459", b: "method createResponse|390" }, { a: "method createResponse|459", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|459", b: "member createResponse|395" }, { a: "method createResponse|459", b: "method createResponse|397" }, { a: "method createResponse|459", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|459", b: "member createResponse|428" }, { a: "method createResponse|459", b: "method createResponse|430" }, { a: "method createResponse|459", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|459", b: "member createResponse|473" }, { a: "method createResponse|459", b: "method createResponse|475" }, { a: "method createResponse|459", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|459", b: "member createResponse|496" }, { a: "method createResponse|459", b: "method createResponse|498" }, { a: "method createResponse|459", b: "class ImagePutCommand|515" }, { a: "method createResponse|459", b: "member createResponse|518" }, { a: "method createResponse|459", b: "method createResponse|520" }, { a: "method createResponse|459", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|459", b: "member createResponse|525" }, { a: "method createResponse|459", b: "method createResponse|527" }, { a: "method createResponse|459", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|459", b: "member createResponse|537" }, { a: "method createResponse|459", b: "method createResponse|539" }, { a: "method createResponse|459", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|459", b: "member createResponse|544" }, { a: "method createResponse|459", b: "method createResponse|546" }, { a: "method createResponse|459", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|459", b: "member createResponse|551" }, { a: "method createResponse|459", b: "method createResponse|553" }, { a: "method createResponse|459", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|459", b: "member createResponse|574" }, { a: "method createResponse|459", b: "method createResponse|576" }, { a: "method createResponse|459", b: "class ProductCreateCommand|612" }, { a: "method createResponse|459", b: "member createResponse|624" }, { a: "method createResponse|459", b: "method createResponse|626" }, { a: "method createResponse|459", b: "class ProductPutCommand|628" }, { a: "method createResponse|459", b: "member createResponse|640" }, { a: "method createResponse|459", b: "method createResponse|642" }, { a: "method createResponse|459", b: "class GiftCardCreateCommand|444" }, { a: "method getTypeName|460", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|460", b: "class GiftCardCreateCommand|444" }, { a: "class GiftCardPutCommand|461", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|462", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|462", b: "class GiftCardPutCommand|461" }, { a: "member giftCardEngineId|463", b: "src\\api\\Rest\\dtos.ts" }, { a: "member giftCardEngineId|463", b: "class GiftCardPutCommand|461" }, { a: "member isEmailDelivery|464", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|464", b: "class GiftCardPutCommand|461" }, { a: "member isSmsDelivery|465", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|465", b: "class GiftCardPutCommand|461" }, { a: "member isPostDelivery|466", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|466", b: "class GiftCardPutCommand|461" }, { a: "member isMobilePayEnabled|467", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isMobilePayEnabled|467", b: "class GiftCardPutCommand|461" }, { a: "member mobilePayLink|468", b: "src\\api\\Rest\\dtos.ts" }, { a: "member mobilePayLink|468", b: "class GiftCardPutCommand|461" }, { a: "member emailImage|469", b: "src\\api\\Rest\\dtos.ts" }, { a: "member emailImage|469", b: "class GiftCardPutCommand|461" }, { a: "member smsImage|470", b: "src\\api\\Rest\\dtos.ts" }, { a: "member smsImage|470", b: "class GiftCardPutCommand|461" }, { a: "member postImage|471", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postImage|471", b: "class GiftCardPutCommand|461" }, { a: "member values|472", b: "src\\api\\Rest\\dtos.ts" }, { a: "member values|472", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|473", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|473", b: "interface IReturnVoid|676" }, { a: "member createResponse|473", b: "class ContentPatchCommand|378" }, { a: "member createResponse|473", b: "member createResponse|381" }, { a: "member createResponse|473", b: "method createResponse|383" }, { a: "member createResponse|473", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|473", b: "member createResponse|388" }, { a: "member createResponse|473", b: "method createResponse|390" }, { a: "member createResponse|473", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|473", b: "member createResponse|395" }, { a: "member createResponse|473", b: "method createResponse|397" }, { a: "member createResponse|473", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|473", b: "member createResponse|428" }, { a: "member createResponse|473", b: "method createResponse|430" }, { a: "member createResponse|473", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|473", b: "member createResponse|457" }, { a: "member createResponse|473", b: "method createResponse|459" }, { a: "member createResponse|473", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|473", b: "member createResponse|496" }, { a: "member createResponse|473", b: "method createResponse|498" }, { a: "member createResponse|473", b: "class ImagePutCommand|515" }, { a: "member createResponse|473", b: "member createResponse|518" }, { a: "member createResponse|473", b: "method createResponse|520" }, { a: "member createResponse|473", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|473", b: "member createResponse|525" }, { a: "member createResponse|473", b: "method createResponse|527" }, { a: "member createResponse|473", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|473", b: "member createResponse|537" }, { a: "member createResponse|473", b: "method createResponse|539" }, { a: "member createResponse|473", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|473", b: "member createResponse|544" }, { a: "member createResponse|473", b: "method createResponse|546" }, { a: "member createResponse|473", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|473", b: "member createResponse|551" }, { a: "member createResponse|473", b: "method createResponse|553" }, { a: "member createResponse|473", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|473", b: "member createResponse|574" }, { a: "member createResponse|473", b: "method createResponse|576" }, { a: "member createResponse|473", b: "class ProductCreateCommand|612" }, { a: "member createResponse|473", b: "member createResponse|624" }, { a: "member createResponse|473", b: "method createResponse|626" }, { a: "member createResponse|473", b: "class ProductPutCommand|628" }, { a: "member createResponse|473", b: "member createResponse|640" }, { a: "member createResponse|473", b: "method createResponse|642" }, { a: "member createResponse|473", b: "class GiftCardPutCommand|461" }, { a: "member getTypeName|474", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|474", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|475", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|475", b: "interface IReturnVoid|676" }, { a: "method createResponse|475", b: "class ContentPatchCommand|378" }, { a: "method createResponse|475", b: "member createResponse|381" }, { a: "method createResponse|475", b: "method createResponse|383" }, { a: "method createResponse|475", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|475", b: "member createResponse|388" }, { a: "method createResponse|475", b: "method createResponse|390" }, { a: "method createResponse|475", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|475", b: "member createResponse|395" }, { a: "method createResponse|475", b: "method createResponse|397" }, { a: "method createResponse|475", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|475", b: "member createResponse|428" }, { a: "method createResponse|475", b: "method createResponse|430" }, { a: "method createResponse|475", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|475", b: "member createResponse|457" }, { a: "method createResponse|475", b: "method createResponse|459" }, { a: "method createResponse|475", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|475", b: "member createResponse|496" }, { a: "method createResponse|475", b: "method createResponse|498" }, { a: "method createResponse|475", b: "class ImagePutCommand|515" }, { a: "method createResponse|475", b: "member createResponse|518" }, { a: "method createResponse|475", b: "method createResponse|520" }, { a: "method createResponse|475", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|475", b: "member createResponse|525" }, { a: "method createResponse|475", b: "method createResponse|527" }, { a: "method createResponse|475", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|475", b: "member createResponse|537" }, { a: "method createResponse|475", b: "method createResponse|539" }, { a: "method createResponse|475", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|475", b: "member createResponse|544" }, { a: "method createResponse|475", b: "method createResponse|546" }, { a: "method createResponse|475", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|475", b: "member createResponse|551" }, { a: "method createResponse|475", b: "method createResponse|553" }, { a: "method createResponse|475", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|475", b: "member createResponse|574" }, { a: "method createResponse|475", b: "method createResponse|576" }, { a: "method createResponse|475", b: "class ProductCreateCommand|612" }, { a: "method createResponse|475", b: "member createResponse|624" }, { a: "method createResponse|475", b: "method createResponse|626" }, { a: "method createResponse|475", b: "class ProductPutCommand|628" }, { a: "method createResponse|475", b: "member createResponse|640" }, { a: "method createResponse|475", b: "method createResponse|642" }, { a: "method createResponse|475", b: "class GiftCardPutCommand|461" }, { a: "method getTypeName|476", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|476", b: "class GiftCardPutCommand|461" }, { a: "class GreetingCategoryQuery|477", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|478", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|478", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|479", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|479", b: "interface IReturn|675" }, { a: "member createResponse|479", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|479", b: "member createResponse|402" }, { a: "member createResponse|479", b: "method createResponse|404" }, { a: "member createResponse|479", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|479", b: "member createResponse|409" }, { a: "member createResponse|479", b: "method createResponse|411" }, { a: "member createResponse|479", b: "class FaqQuery|413" }, { a: "member createResponse|479", b: "member createResponse|414" }, { a: "member createResponse|479", b: "method createResponse|416" }, { a: "member createResponse|479", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|479", b: "member createResponse|421" }, { a: "member createResponse|479", b: "method createResponse|423" }, { a: "member createResponse|479", b: "class FontFileGetQuery|432" }, { a: "member createResponse|479", b: "member createResponse|434" }, { a: "member createResponse|479", b: "method createResponse|436" }, { a: "member createResponse|479", b: "class GiftCardQuery|438" }, { a: "member createResponse|479", b: "member createResponse|440" }, { a: "member createResponse|479", b: "method createResponse|442" }, { a: "member createResponse|479", b: "class GreetingCategoryList|483" }, { a: "member createResponse|479", b: "member createResponse|484" }, { a: "member createResponse|479", b: "method createResponse|486" }, { a: "member createResponse|479", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|479", b: "member createResponse|490" }, { a: "member createResponse|479", b: "method createResponse|492" }, { a: "member createResponse|479", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|479", b: "member createResponse|504" }, { a: "member createResponse|479", b: "method createResponse|506" }, { a: "member createResponse|479", b: "class ImageCreateCommand|508" }, { a: "member createResponse|479", b: "member createResponse|511" }, { a: "member createResponse|479", b: "method createResponse|513" }, { a: "member createResponse|479", b: "class LayoutQuery|529" }, { a: "member createResponse|479", b: "member createResponse|531" }, { a: "member createResponse|479", b: "method createResponse|533" }, { a: "member createResponse|479", b: "class LocalizationQuery|578" }, { a: "member createResponse|479", b: "member createResponse|579" }, { a: "member createResponse|479", b: "method createResponse|581" }, { a: "member createResponse|479", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|479", b: "member createResponse|584" }, { a: "member createResponse|479", b: "method createResponse|586" }, { a: "member createResponse|479", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|479", b: "member createResponse|590" }, { a: "member createResponse|479", b: "method createResponse|592" }, { a: "member createResponse|479", b: "class LocationQuery|594" }, { a: "member createResponse|479", b: "member createResponse|595" }, { a: "member createResponse|479", b: "method createResponse|597" }, { a: "member createResponse|479", b: "class OrderCreateCommand|599" }, { a: "member createResponse|479", b: "member createResponse|602" }, { a: "member createResponse|479", b: "method createResponse|604" }, { a: "member createResponse|479", b: "class ProductQuery|606" }, { a: "member createResponse|479", b: "member createResponse|608" }, { a: "member createResponse|479", b: "method createResponse|610" }, { a: "member createResponse|479", b: "class VersionQuery|644" }, { a: "member createResponse|479", b: "member createResponse|646" }, { a: "member createResponse|479", b: "method createResponse|648" }, { a: "member createResponse|479", b: "class Authenticate|650" }, { a: "member createResponse|479", b: "member createResponse|671" }, { a: "member createResponse|479", b: "method createResponse|673" }, { a: "member createResponse|479", b: "class GreetingCategoryQuery|477" }, { a: "member getTypeName|480", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|480", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|481", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|481", b: "interface IReturn|675" }, { a: "method createResponse|481", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|481", b: "member createResponse|402" }, { a: "method createResponse|481", b: "method createResponse|404" }, { a: "method createResponse|481", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|481", b: "member createResponse|409" }, { a: "method createResponse|481", b: "method createResponse|411" }, { a: "method createResponse|481", b: "class FaqQuery|413" }, { a: "method createResponse|481", b: "member createResponse|414" }, { a: "method createResponse|481", b: "method createResponse|416" }, { a: "method createResponse|481", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|481", b: "member createResponse|421" }, { a: "method createResponse|481", b: "method createResponse|423" }, { a: "method createResponse|481", b: "class FontFileGetQuery|432" }, { a: "method createResponse|481", b: "member createResponse|434" }, { a: "method createResponse|481", b: "method createResponse|436" }, { a: "method createResponse|481", b: "class GiftCardQuery|438" }, { a: "method createResponse|481", b: "member createResponse|440" }, { a: "method createResponse|481", b: "method createResponse|442" }, { a: "method createResponse|481", b: "class GreetingCategoryList|483" }, { a: "method createResponse|481", b: "member createResponse|484" }, { a: "method createResponse|481", b: "method createResponse|486" }, { a: "method createResponse|481", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|481", b: "member createResponse|490" }, { a: "method createResponse|481", b: "method createResponse|492" }, { a: "method createResponse|481", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|481", b: "member createResponse|504" }, { a: "method createResponse|481", b: "method createResponse|506" }, { a: "method createResponse|481", b: "class ImageCreateCommand|508" }, { a: "method createResponse|481", b: "member createResponse|511" }, { a: "method createResponse|481", b: "method createResponse|513" }, { a: "method createResponse|481", b: "class LayoutQuery|529" }, { a: "method createResponse|481", b: "member createResponse|531" }, { a: "method createResponse|481", b: "method createResponse|533" }, { a: "method createResponse|481", b: "class LocalizationQuery|578" }, { a: "method createResponse|481", b: "member createResponse|579" }, { a: "method createResponse|481", b: "method createResponse|581" }, { a: "method createResponse|481", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|481", b: "member createResponse|584" }, { a: "method createResponse|481", b: "method createResponse|586" }, { a: "method createResponse|481", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|481", b: "member createResponse|590" }, { a: "method createResponse|481", b: "method createResponse|592" }, { a: "method createResponse|481", b: "class LocationQuery|594" }, { a: "method createResponse|481", b: "member createResponse|595" }, { a: "method createResponse|481", b: "method createResponse|597" }, { a: "method createResponse|481", b: "class OrderCreateCommand|599" }, { a: "method createResponse|481", b: "member createResponse|602" }, { a: "method createResponse|481", b: "method createResponse|604" }, { a: "method createResponse|481", b: "class ProductQuery|606" }, { a: "method createResponse|481", b: "member createResponse|608" }, { a: "method createResponse|481", b: "method createResponse|610" }, { a: "method createResponse|481", b: "class VersionQuery|644" }, { a: "method createResponse|481", b: "member createResponse|646" }, { a: "method createResponse|481", b: "method createResponse|648" }, { a: "method createResponse|481", b: "class Authenticate|650" }, { a: "method createResponse|481", b: "member createResponse|671" }, { a: "method createResponse|481", b: "method createResponse|673" }, { a: "method createResponse|481", b: "class GreetingCategoryQuery|477" }, { a: "method getTypeName|482", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|482", b: "class GreetingCategoryQuery|477" }, { a: "class GreetingCategoryList|483", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|484", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|484", b: "interface IReturn|675" }, { a: "member createResponse|484", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|484", b: "member createResponse|402" }, { a: "member createResponse|484", b: "method createResponse|404" }, { a: "member createResponse|484", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|484", b: "member createResponse|409" }, { a: "member createResponse|484", b: "method createResponse|411" }, { a: "member createResponse|484", b: "class FaqQuery|413" }, { a: "member createResponse|484", b: "member createResponse|414" }, { a: "member createResponse|484", b: "method createResponse|416" }, { a: "member createResponse|484", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|484", b: "member createResponse|421" }, { a: "member createResponse|484", b: "method createResponse|423" }, { a: "member createResponse|484", b: "class FontFileGetQuery|432" }, { a: "member createResponse|484", b: "member createResponse|434" }, { a: "member createResponse|484", b: "method createResponse|436" }, { a: "member createResponse|484", b: "class GiftCardQuery|438" }, { a: "member createResponse|484", b: "member createResponse|440" }, { a: "member createResponse|484", b: "method createResponse|442" }, { a: "member createResponse|484", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|484", b: "member createResponse|479" }, { a: "member createResponse|484", b: "method createResponse|481" }, { a: "member createResponse|484", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|484", b: "member createResponse|490" }, { a: "member createResponse|484", b: "method createResponse|492" }, { a: "member createResponse|484", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|484", b: "member createResponse|504" }, { a: "member createResponse|484", b: "method createResponse|506" }, { a: "member createResponse|484", b: "class ImageCreateCommand|508" }, { a: "member createResponse|484", b: "member createResponse|511" }, { a: "member createResponse|484", b: "method createResponse|513" }, { a: "member createResponse|484", b: "class LayoutQuery|529" }, { a: "member createResponse|484", b: "member createResponse|531" }, { a: "member createResponse|484", b: "method createResponse|533" }, { a: "member createResponse|484", b: "class LocalizationQuery|578" }, { a: "member createResponse|484", b: "member createResponse|579" }, { a: "member createResponse|484", b: "method createResponse|581" }, { a: "member createResponse|484", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|484", b: "member createResponse|584" }, { a: "member createResponse|484", b: "method createResponse|586" }, { a: "member createResponse|484", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|484", b: "member createResponse|590" }, { a: "member createResponse|484", b: "method createResponse|592" }, { a: "member createResponse|484", b: "class LocationQuery|594" }, { a: "member createResponse|484", b: "member createResponse|595" }, { a: "member createResponse|484", b: "method createResponse|597" }, { a: "member createResponse|484", b: "class OrderCreateCommand|599" }, { a: "member createResponse|484", b: "member createResponse|602" }, { a: "member createResponse|484", b: "method createResponse|604" }, { a: "member createResponse|484", b: "class ProductQuery|606" }, { a: "member createResponse|484", b: "member createResponse|608" }, { a: "member createResponse|484", b: "method createResponse|610" }, { a: "member createResponse|484", b: "class VersionQuery|644" }, { a: "member createResponse|484", b: "member createResponse|646" }, { a: "member createResponse|484", b: "method createResponse|648" }, { a: "member createResponse|484", b: "class Authenticate|650" }, { a: "member createResponse|484", b: "member createResponse|671" }, { a: "member createResponse|484", b: "method createResponse|673" }, { a: "member createResponse|484", b: "class GreetingCategoryList|483" }, { a: "member getTypeName|485", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|485", b: "class GreetingCategoryList|483" }, { a: "method createResponse|486", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|486", b: "interface IReturn|675" }, { a: "method createResponse|486", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|486", b: "member createResponse|402" }, { a: "method createResponse|486", b: "method createResponse|404" }, { a: "method createResponse|486", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|486", b: "member createResponse|409" }, { a: "method createResponse|486", b: "method createResponse|411" }, { a: "method createResponse|486", b: "class FaqQuery|413" }, { a: "method createResponse|486", b: "member createResponse|414" }, { a: "method createResponse|486", b: "method createResponse|416" }, { a: "method createResponse|486", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|486", b: "member createResponse|421" }, { a: "method createResponse|486", b: "method createResponse|423" }, { a: "method createResponse|486", b: "class FontFileGetQuery|432" }, { a: "method createResponse|486", b: "member createResponse|434" }, { a: "method createResponse|486", b: "method createResponse|436" }, { a: "method createResponse|486", b: "class GiftCardQuery|438" }, { a: "method createResponse|486", b: "member createResponse|440" }, { a: "method createResponse|486", b: "method createResponse|442" }, { a: "method createResponse|486", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|486", b: "member createResponse|479" }, { a: "method createResponse|486", b: "method createResponse|481" }, { a: "method createResponse|486", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|486", b: "member createResponse|490" }, { a: "method createResponse|486", b: "method createResponse|492" }, { a: "method createResponse|486", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|486", b: "member createResponse|504" }, { a: "method createResponse|486", b: "method createResponse|506" }, { a: "method createResponse|486", b: "class ImageCreateCommand|508" }, { a: "method createResponse|486", b: "member createResponse|511" }, { a: "method createResponse|486", b: "method createResponse|513" }, { a: "method createResponse|486", b: "class LayoutQuery|529" }, { a: "method createResponse|486", b: "member createResponse|531" }, { a: "method createResponse|486", b: "method createResponse|533" }, { a: "method createResponse|486", b: "class LocalizationQuery|578" }, { a: "method createResponse|486", b: "member createResponse|579" }, { a: "method createResponse|486", b: "method createResponse|581" }, { a: "method createResponse|486", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|486", b: "member createResponse|584" }, { a: "method createResponse|486", b: "method createResponse|586" }, { a: "method createResponse|486", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|486", b: "member createResponse|590" }, { a: "method createResponse|486", b: "method createResponse|592" }, { a: "method createResponse|486", b: "class LocationQuery|594" }, { a: "method createResponse|486", b: "member createResponse|595" }, { a: "method createResponse|486", b: "method createResponse|597" }, { a: "method createResponse|486", b: "class OrderCreateCommand|599" }, { a: "method createResponse|486", b: "member createResponse|602" }, { a: "method createResponse|486", b: "method createResponse|604" }, { a: "method createResponse|486", b: "class ProductQuery|606" }, { a: "method createResponse|486", b: "member createResponse|608" }, { a: "method createResponse|486", b: "method createResponse|610" }, { a: "method createResponse|486", b: "class VersionQuery|644" }, { a: "method createResponse|486", b: "member createResponse|646" }, { a: "method createResponse|486", b: "method createResponse|648" }, { a: "method createResponse|486", b: "class Authenticate|650" }, { a: "method createResponse|486", b: "member createResponse|671" }, { a: "method createResponse|486", b: "method createResponse|673" }, { a: "method createResponse|486", b: "class GreetingCategoryList|483" }, { a: "method getTypeName|487", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|487", b: "class GreetingCategoryList|483" }, { a: "class GreetingCategoryCreateCommand|488", b: "src\\api\\Rest\\dtos.ts" }, { a: "member name|489", b: "src\\api\\Rest\\dtos.ts" }, { a: "member name|489", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|490", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|490", b: "interface IReturn|675" }, { a: "member createResponse|490", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|490", b: "member createResponse|402" }, { a: "member createResponse|490", b: "method createResponse|404" }, { a: "member createResponse|490", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|490", b: "member createResponse|409" }, { a: "member createResponse|490", b: "method createResponse|411" }, { a: "member createResponse|490", b: "class FaqQuery|413" }, { a: "member createResponse|490", b: "member createResponse|414" }, { a: "member createResponse|490", b: "method createResponse|416" }, { a: "member createResponse|490", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|490", b: "member createResponse|421" }, { a: "member createResponse|490", b: "method createResponse|423" }, { a: "member createResponse|490", b: "class FontFileGetQuery|432" }, { a: "member createResponse|490", b: "member createResponse|434" }, { a: "member createResponse|490", b: "method createResponse|436" }, { a: "member createResponse|490", b: "class GiftCardQuery|438" }, { a: "member createResponse|490", b: "member createResponse|440" }, { a: "member createResponse|490", b: "method createResponse|442" }, { a: "member createResponse|490", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|490", b: "member createResponse|479" }, { a: "member createResponse|490", b: "method createResponse|481" }, { a: "member createResponse|490", b: "class GreetingCategoryList|483" }, { a: "member createResponse|490", b: "member createResponse|484" }, { a: "member createResponse|490", b: "method createResponse|486" }, { a: "member createResponse|490", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|490", b: "member createResponse|504" }, { a: "member createResponse|490", b: "method createResponse|506" }, { a: "member createResponse|490", b: "class ImageCreateCommand|508" }, { a: "member createResponse|490", b: "member createResponse|511" }, { a: "member createResponse|490", b: "method createResponse|513" }, { a: "member createResponse|490", b: "class LayoutQuery|529" }, { a: "member createResponse|490", b: "member createResponse|531" }, { a: "member createResponse|490", b: "method createResponse|533" }, { a: "member createResponse|490", b: "class LocalizationQuery|578" }, { a: "member createResponse|490", b: "member createResponse|579" }, { a: "member createResponse|490", b: "method createResponse|581" }, { a: "member createResponse|490", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|490", b: "member createResponse|584" }, { a: "member createResponse|490", b: "method createResponse|586" }, { a: "member createResponse|490", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|490", b: "member createResponse|590" }, { a: "member createResponse|490", b: "method createResponse|592" }, { a: "member createResponse|490", b: "class LocationQuery|594" }, { a: "member createResponse|490", b: "member createResponse|595" }, { a: "member createResponse|490", b: "method createResponse|597" }, { a: "member createResponse|490", b: "class OrderCreateCommand|599" }, { a: "member createResponse|490", b: "member createResponse|602" }, { a: "member createResponse|490", b: "method createResponse|604" }, { a: "member createResponse|490", b: "class ProductQuery|606" }, { a: "member createResponse|490", b: "member createResponse|608" }, { a: "member createResponse|490", b: "method createResponse|610" }, { a: "member createResponse|490", b: "class VersionQuery|644" }, { a: "member createResponse|490", b: "member createResponse|646" }, { a: "member createResponse|490", b: "method createResponse|648" }, { a: "member createResponse|490", b: "class Authenticate|650" }, { a: "member createResponse|490", b: "member createResponse|671" }, { a: "member createResponse|490", b: "method createResponse|673" }, { a: "member createResponse|490", b: "class GreetingCategoryCreateCommand|488" }, { a: "member getTypeName|491", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|491", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|492", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|492", b: "interface IReturn|675" }, { a: "method createResponse|492", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|492", b: "member createResponse|402" }, { a: "method createResponse|492", b: "method createResponse|404" }, { a: "method createResponse|492", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|492", b: "member createResponse|409" }, { a: "method createResponse|492", b: "method createResponse|411" }, { a: "method createResponse|492", b: "class FaqQuery|413" }, { a: "method createResponse|492", b: "member createResponse|414" }, { a: "method createResponse|492", b: "method createResponse|416" }, { a: "method createResponse|492", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|492", b: "member createResponse|421" }, { a: "method createResponse|492", b: "method createResponse|423" }, { a: "method createResponse|492", b: "class FontFileGetQuery|432" }, { a: "method createResponse|492", b: "member createResponse|434" }, { a: "method createResponse|492", b: "method createResponse|436" }, { a: "method createResponse|492", b: "class GiftCardQuery|438" }, { a: "method createResponse|492", b: "member createResponse|440" }, { a: "method createResponse|492", b: "method createResponse|442" }, { a: "method createResponse|492", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|492", b: "member createResponse|479" }, { a: "method createResponse|492", b: "method createResponse|481" }, { a: "method createResponse|492", b: "class GreetingCategoryList|483" }, { a: "method createResponse|492", b: "member createResponse|484" }, { a: "method createResponse|492", b: "method createResponse|486" }, { a: "method createResponse|492", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|492", b: "member createResponse|504" }, { a: "method createResponse|492", b: "method createResponse|506" }, { a: "method createResponse|492", b: "class ImageCreateCommand|508" }, { a: "method createResponse|492", b: "member createResponse|511" }, { a: "method createResponse|492", b: "method createResponse|513" }, { a: "method createResponse|492", b: "class LayoutQuery|529" }, { a: "method createResponse|492", b: "member createResponse|531" }, { a: "method createResponse|492", b: "method createResponse|533" }, { a: "method createResponse|492", b: "class LocalizationQuery|578" }, { a: "method createResponse|492", b: "member createResponse|579" }, { a: "method createResponse|492", b: "method createResponse|581" }, { a: "method createResponse|492", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|492", b: "member createResponse|584" }, { a: "method createResponse|492", b: "method createResponse|586" }, { a: "method createResponse|492", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|492", b: "member createResponse|590" }, { a: "method createResponse|492", b: "method createResponse|592" }, { a: "method createResponse|492", b: "class LocationQuery|594" }, { a: "method createResponse|492", b: "member createResponse|595" }, { a: "method createResponse|492", b: "method createResponse|597" }, { a: "method createResponse|492", b: "class OrderCreateCommand|599" }, { a: "method createResponse|492", b: "member createResponse|602" }, { a: "method createResponse|492", b: "method createResponse|604" }, { a: "method createResponse|492", b: "class ProductQuery|606" }, { a: "method createResponse|492", b: "member createResponse|608" }, { a: "method createResponse|492", b: "method createResponse|610" }, { a: "method createResponse|492", b: "class VersionQuery|644" }, { a: "method createResponse|492", b: "member createResponse|646" }, { a: "method createResponse|492", b: "method createResponse|648" }, { a: "method createResponse|492", b: "class Authenticate|650" }, { a: "method createResponse|492", b: "member createResponse|671" }, { a: "method createResponse|492", b: "method createResponse|673" }, { a: "method createResponse|492", b: "class GreetingCategoryCreateCommand|488" }, { a: "method getTypeName|493", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|493", b: "class GreetingCategoryCreateCommand|488" }, { a: "class GreetingCategoryDeleteCommand|494", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|495", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|495", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|496", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|496", b: "interface IReturnVoid|676" }, { a: "member createResponse|496", b: "class ContentPatchCommand|378" }, { a: "member createResponse|496", b: "member createResponse|381" }, { a: "member createResponse|496", b: "method createResponse|383" }, { a: "member createResponse|496", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|496", b: "member createResponse|388" }, { a: "member createResponse|496", b: "method createResponse|390" }, { a: "member createResponse|496", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|496", b: "member createResponse|395" }, { a: "member createResponse|496", b: "method createResponse|397" }, { a: "member createResponse|496", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|496", b: "member createResponse|428" }, { a: "member createResponse|496", b: "method createResponse|430" }, { a: "member createResponse|496", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|496", b: "member createResponse|457" }, { a: "member createResponse|496", b: "method createResponse|459" }, { a: "member createResponse|496", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|496", b: "member createResponse|473" }, { a: "member createResponse|496", b: "method createResponse|475" }, { a: "member createResponse|496", b: "class ImagePutCommand|515" }, { a: "member createResponse|496", b: "member createResponse|518" }, { a: "member createResponse|496", b: "method createResponse|520" }, { a: "member createResponse|496", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|496", b: "member createResponse|525" }, { a: "member createResponse|496", b: "method createResponse|527" }, { a: "member createResponse|496", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|496", b: "member createResponse|537" }, { a: "member createResponse|496", b: "method createResponse|539" }, { a: "member createResponse|496", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|496", b: "member createResponse|544" }, { a: "member createResponse|496", b: "method createResponse|546" }, { a: "member createResponse|496", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|496", b: "member createResponse|551" }, { a: "member createResponse|496", b: "method createResponse|553" }, { a: "member createResponse|496", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|496", b: "member createResponse|574" }, { a: "member createResponse|496", b: "method createResponse|576" }, { a: "member createResponse|496", b: "class ProductCreateCommand|612" }, { a: "member createResponse|496", b: "member createResponse|624" }, { a: "member createResponse|496", b: "method createResponse|626" }, { a: "member createResponse|496", b: "class ProductPutCommand|628" }, { a: "member createResponse|496", b: "member createResponse|640" }, { a: "member createResponse|496", b: "method createResponse|642" }, { a: "member createResponse|496", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member getTypeName|497", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|497", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|498", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|498", b: "interface IReturnVoid|676" }, { a: "method createResponse|498", b: "class ContentPatchCommand|378" }, { a: "method createResponse|498", b: "member createResponse|381" }, { a: "method createResponse|498", b: "method createResponse|383" }, { a: "method createResponse|498", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|498", b: "member createResponse|388" }, { a: "method createResponse|498", b: "method createResponse|390" }, { a: "method createResponse|498", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|498", b: "member createResponse|395" }, { a: "method createResponse|498", b: "method createResponse|397" }, { a: "method createResponse|498", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|498", b: "member createResponse|428" }, { a: "method createResponse|498", b: "method createResponse|430" }, { a: "method createResponse|498", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|498", b: "member createResponse|457" }, { a: "method createResponse|498", b: "method createResponse|459" }, { a: "method createResponse|498", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|498", b: "member createResponse|473" }, { a: "method createResponse|498", b: "method createResponse|475" }, { a: "method createResponse|498", b: "class ImagePutCommand|515" }, { a: "method createResponse|498", b: "member createResponse|518" }, { a: "method createResponse|498", b: "method createResponse|520" }, { a: "method createResponse|498", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|498", b: "member createResponse|525" }, { a: "method createResponse|498", b: "method createResponse|527" }, { a: "method createResponse|498", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|498", b: "member createResponse|537" }, { a: "method createResponse|498", b: "method createResponse|539" }, { a: "method createResponse|498", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|498", b: "member createResponse|544" }, { a: "method createResponse|498", b: "method createResponse|546" }, { a: "method createResponse|498", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|498", b: "member createResponse|551" }, { a: "method createResponse|498", b: "method createResponse|553" }, { a: "method createResponse|498", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|498", b: "member createResponse|574" }, { a: "method createResponse|498", b: "method createResponse|576" }, { a: "method createResponse|498", b: "class ProductCreateCommand|612" }, { a: "method createResponse|498", b: "member createResponse|624" }, { a: "method createResponse|498", b: "method createResponse|626" }, { a: "method createResponse|498", b: "class ProductPutCommand|628" }, { a: "method createResponse|498", b: "member createResponse|640" }, { a: "method createResponse|498", b: "method createResponse|642" }, { a: "method createResponse|498", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method getTypeName|499", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|499", b: "class GreetingCategoryDeleteCommand|494" }, { a: "class GreetingCategoryPatchCommand|500", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|501", b: "src\\api\\Rest\\dtos.ts" }, { a: "member id|501", b: "class GreetingCategoryPatchCommand|500" }, { a: "member name|502", b: "src\\api\\Rest\\dtos.ts" }, { a: "member name|502", b: "class GreetingCategoryPatchCommand|500" }, { a: "member files|503", b: "src\\api\\Rest\\dtos.ts" }, { a: "member files|503", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|504", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|504", b: "interface IReturn|675" }, { a: "member createResponse|504", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|504", b: "member createResponse|402" }, { a: "member createResponse|504", b: "method createResponse|404" }, { a: "member createResponse|504", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|504", b: "member createResponse|409" }, { a: "member createResponse|504", b: "method createResponse|411" }, { a: "member createResponse|504", b: "class FaqQuery|413" }, { a: "member createResponse|504", b: "member createResponse|414" }, { a: "member createResponse|504", b: "method createResponse|416" }, { a: "member createResponse|504", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|504", b: "member createResponse|421" }, { a: "member createResponse|504", b: "method createResponse|423" }, { a: "member createResponse|504", b: "class FontFileGetQuery|432" }, { a: "member createResponse|504", b: "member createResponse|434" }, { a: "member createResponse|504", b: "method createResponse|436" }, { a: "member createResponse|504", b: "class GiftCardQuery|438" }, { a: "member createResponse|504", b: "member createResponse|440" }, { a: "member createResponse|504", b: "method createResponse|442" }, { a: "member createResponse|504", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|504", b: "member createResponse|479" }, { a: "member createResponse|504", b: "method createResponse|481" }, { a: "member createResponse|504", b: "class GreetingCategoryList|483" }, { a: "member createResponse|504", b: "member createResponse|484" }, { a: "member createResponse|504", b: "method createResponse|486" }, { a: "member createResponse|504", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|504", b: "member createResponse|490" }, { a: "member createResponse|504", b: "method createResponse|492" }, { a: "member createResponse|504", b: "class ImageCreateCommand|508" }, { a: "member createResponse|504", b: "member createResponse|511" }, { a: "member createResponse|504", b: "method createResponse|513" }, { a: "member createResponse|504", b: "class LayoutQuery|529" }, { a: "member createResponse|504", b: "member createResponse|531" }, { a: "member createResponse|504", b: "method createResponse|533" }, { a: "member createResponse|504", b: "class LocalizationQuery|578" }, { a: "member createResponse|504", b: "member createResponse|579" }, { a: "member createResponse|504", b: "method createResponse|581" }, { a: "member createResponse|504", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|504", b: "member createResponse|584" }, { a: "member createResponse|504", b: "method createResponse|586" }, { a: "member createResponse|504", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|504", b: "member createResponse|590" }, { a: "member createResponse|504", b: "method createResponse|592" }, { a: "member createResponse|504", b: "class LocationQuery|594" }, { a: "member createResponse|504", b: "member createResponse|595" }, { a: "member createResponse|504", b: "method createResponse|597" }, { a: "member createResponse|504", b: "class OrderCreateCommand|599" }, { a: "member createResponse|504", b: "member createResponse|602" }, { a: "member createResponse|504", b: "method createResponse|604" }, { a: "member createResponse|504", b: "class ProductQuery|606" }, { a: "member createResponse|504", b: "member createResponse|608" }, { a: "member createResponse|504", b: "method createResponse|610" }, { a: "member createResponse|504", b: "class VersionQuery|644" }, { a: "member createResponse|504", b: "member createResponse|646" }, { a: "member createResponse|504", b: "method createResponse|648" }, { a: "member createResponse|504", b: "class Authenticate|650" }, { a: "member createResponse|504", b: "member createResponse|671" }, { a: "member createResponse|504", b: "method createResponse|673" }, { a: "member createResponse|504", b: "class GreetingCategoryPatchCommand|500" }, { a: "member getTypeName|505", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|505", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|506", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|506", b: "interface IReturn|675" }, { a: "method createResponse|506", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|506", b: "member createResponse|402" }, { a: "method createResponse|506", b: "method createResponse|404" }, { a: "method createResponse|506", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|506", b: "member createResponse|409" }, { a: "method createResponse|506", b: "method createResponse|411" }, { a: "method createResponse|506", b: "class FaqQuery|413" }, { a: "method createResponse|506", b: "member createResponse|414" }, { a: "method createResponse|506", b: "method createResponse|416" }, { a: "method createResponse|506", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|506", b: "member createResponse|421" }, { a: "method createResponse|506", b: "method createResponse|423" }, { a: "method createResponse|506", b: "class FontFileGetQuery|432" }, { a: "method createResponse|506", b: "member createResponse|434" }, { a: "method createResponse|506", b: "method createResponse|436" }, { a: "method createResponse|506", b: "class GiftCardQuery|438" }, { a: "method createResponse|506", b: "member createResponse|440" }, { a: "method createResponse|506", b: "method createResponse|442" }, { a: "method createResponse|506", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|506", b: "member createResponse|479" }, { a: "method createResponse|506", b: "method createResponse|481" }, { a: "method createResponse|506", b: "class GreetingCategoryList|483" }, { a: "method createResponse|506", b: "member createResponse|484" }, { a: "method createResponse|506", b: "method createResponse|486" }, { a: "method createResponse|506", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|506", b: "member createResponse|490" }, { a: "method createResponse|506", b: "method createResponse|492" }, { a: "method createResponse|506", b: "class ImageCreateCommand|508" }, { a: "method createResponse|506", b: "member createResponse|511" }, { a: "method createResponse|506", b: "method createResponse|513" }, { a: "method createResponse|506", b: "class LayoutQuery|529" }, { a: "method createResponse|506", b: "member createResponse|531" }, { a: "method createResponse|506", b: "method createResponse|533" }, { a: "method createResponse|506", b: "class LocalizationQuery|578" }, { a: "method createResponse|506", b: "member createResponse|579" }, { a: "method createResponse|506", b: "method createResponse|581" }, { a: "method createResponse|506", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|506", b: "member createResponse|584" }, { a: "method createResponse|506", b: "method createResponse|586" }, { a: "method createResponse|506", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|506", b: "member createResponse|590" }, { a: "method createResponse|506", b: "method createResponse|592" }, { a: "method createResponse|506", b: "class LocationQuery|594" }, { a: "method createResponse|506", b: "member createResponse|595" }, { a: "method createResponse|506", b: "method createResponse|597" }, { a: "method createResponse|506", b: "class OrderCreateCommand|599" }, { a: "method createResponse|506", b: "member createResponse|602" }, { a: "method createResponse|506", b: "method createResponse|604" }, { a: "method createResponse|506", b: "class ProductQuery|606" }, { a: "method createResponse|506", b: "member createResponse|608" }, { a: "method createResponse|506", b: "method createResponse|610" }, { a: "method createResponse|506", b: "class VersionQuery|644" }, { a: "method createResponse|506", b: "member createResponse|646" }, { a: "method createResponse|506", b: "method createResponse|648" }, { a: "method createResponse|506", b: "class Authenticate|650" }, { a: "method createResponse|506", b: "member createResponse|671" }, { a: "method createResponse|506", b: "method createResponse|673" }, { a: "method createResponse|506", b: "class GreetingCategoryPatchCommand|500" }, { a: "method getTypeName|507", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|507", b: "class GreetingCategoryPatchCommand|500" }, { a: "class ImageCreateCommand|508", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|509", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|509", b: "class ImageCreateCommand|508" }, { a: "member files|510", b: "src\\api\\Rest\\dtos.ts" }, { a: "member files|510", b: "class ImageCreateCommand|508" }, { a: "member createResponse|511", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|511", b: "interface IReturn|675" }, { a: "member createResponse|511", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|511", b: "member createResponse|402" }, { a: "member createResponse|511", b: "method createResponse|404" }, { a: "member createResponse|511", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|511", b: "member createResponse|409" }, { a: "member createResponse|511", b: "method createResponse|411" }, { a: "member createResponse|511", b: "class FaqQuery|413" }, { a: "member createResponse|511", b: "member createResponse|414" }, { a: "member createResponse|511", b: "method createResponse|416" }, { a: "member createResponse|511", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|511", b: "member createResponse|421" }, { a: "member createResponse|511", b: "method createResponse|423" }, { a: "member createResponse|511", b: "class FontFileGetQuery|432" }, { a: "member createResponse|511", b: "member createResponse|434" }, { a: "member createResponse|511", b: "method createResponse|436" }, { a: "member createResponse|511", b: "class GiftCardQuery|438" }, { a: "member createResponse|511", b: "member createResponse|440" }, { a: "member createResponse|511", b: "method createResponse|442" }, { a: "member createResponse|511", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|511", b: "member createResponse|479" }, { a: "member createResponse|511", b: "method createResponse|481" }, { a: "member createResponse|511", b: "class GreetingCategoryList|483" }, { a: "member createResponse|511", b: "member createResponse|484" }, { a: "member createResponse|511", b: "method createResponse|486" }, { a: "member createResponse|511", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|511", b: "member createResponse|490" }, { a: "member createResponse|511", b: "method createResponse|492" }, { a: "member createResponse|511", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|511", b: "member createResponse|504" }, { a: "member createResponse|511", b: "method createResponse|506" }, { a: "member createResponse|511", b: "class LayoutQuery|529" }, { a: "member createResponse|511", b: "member createResponse|531" }, { a: "member createResponse|511", b: "method createResponse|533" }, { a: "member createResponse|511", b: "class LocalizationQuery|578" }, { a: "member createResponse|511", b: "member createResponse|579" }, { a: "member createResponse|511", b: "method createResponse|581" }, { a: "member createResponse|511", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|511", b: "member createResponse|584" }, { a: "member createResponse|511", b: "method createResponse|586" }, { a: "member createResponse|511", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|511", b: "member createResponse|590" }, { a: "member createResponse|511", b: "method createResponse|592" }, { a: "member createResponse|511", b: "class LocationQuery|594" }, { a: "member createResponse|511", b: "member createResponse|595" }, { a: "member createResponse|511", b: "method createResponse|597" }, { a: "member createResponse|511", b: "class OrderCreateCommand|599" }, { a: "member createResponse|511", b: "member createResponse|602" }, { a: "member createResponse|511", b: "method createResponse|604" }, { a: "member createResponse|511", b: "class ProductQuery|606" }, { a: "member createResponse|511", b: "member createResponse|608" }, { a: "member createResponse|511", b: "method createResponse|610" }, { a: "member createResponse|511", b: "class VersionQuery|644" }, { a: "member createResponse|511", b: "member createResponse|646" }, { a: "member createResponse|511", b: "method createResponse|648" }, { a: "member createResponse|511", b: "class Authenticate|650" }, { a: "member createResponse|511", b: "member createResponse|671" }, { a: "member createResponse|511", b: "method createResponse|673" }, { a: "member createResponse|511", b: "class ImageCreateCommand|508" }, { a: "member getTypeName|512", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|512", b: "class ImageCreateCommand|508" }, { a: "method createResponse|513", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|513", b: "interface IReturn|675" }, { a: "method createResponse|513", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|513", b: "member createResponse|402" }, { a: "method createResponse|513", b: "method createResponse|404" }, { a: "method createResponse|513", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|513", b: "member createResponse|409" }, { a: "method createResponse|513", b: "method createResponse|411" }, { a: "method createResponse|513", b: "class FaqQuery|413" }, { a: "method createResponse|513", b: "member createResponse|414" }, { a: "method createResponse|513", b: "method createResponse|416" }, { a: "method createResponse|513", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|513", b: "member createResponse|421" }, { a: "method createResponse|513", b: "method createResponse|423" }, { a: "method createResponse|513", b: "class FontFileGetQuery|432" }, { a: "method createResponse|513", b: "member createResponse|434" }, { a: "method createResponse|513", b: "method createResponse|436" }, { a: "method createResponse|513", b: "class GiftCardQuery|438" }, { a: "method createResponse|513", b: "member createResponse|440" }, { a: "method createResponse|513", b: "method createResponse|442" }, { a: "method createResponse|513", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|513", b: "member createResponse|479" }, { a: "method createResponse|513", b: "method createResponse|481" }, { a: "method createResponse|513", b: "class GreetingCategoryList|483" }, { a: "method createResponse|513", b: "member createResponse|484" }, { a: "method createResponse|513", b: "method createResponse|486" }, { a: "method createResponse|513", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|513", b: "member createResponse|490" }, { a: "method createResponse|513", b: "method createResponse|492" }, { a: "method createResponse|513", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|513", b: "member createResponse|504" }, { a: "method createResponse|513", b: "method createResponse|506" }, { a: "method createResponse|513", b: "class LayoutQuery|529" }, { a: "method createResponse|513", b: "member createResponse|531" }, { a: "method createResponse|513", b: "method createResponse|533" }, { a: "method createResponse|513", b: "class LocalizationQuery|578" }, { a: "method createResponse|513", b: "member createResponse|579" }, { a: "method createResponse|513", b: "method createResponse|581" }, { a: "method createResponse|513", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|513", b: "member createResponse|584" }, { a: "method createResponse|513", b: "method createResponse|586" }, { a: "method createResponse|513", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|513", b: "member createResponse|590" }, { a: "method createResponse|513", b: "method createResponse|592" }, { a: "method createResponse|513", b: "class LocationQuery|594" }, { a: "method createResponse|513", b: "member createResponse|595" }, { a: "method createResponse|513", b: "method createResponse|597" }, { a: "method createResponse|513", b: "class OrderCreateCommand|599" }, { a: "method createResponse|513", b: "member createResponse|602" }, { a: "method createResponse|513", b: "method createResponse|604" }, { a: "method createResponse|513", b: "class ProductQuery|606" }, { a: "method createResponse|513", b: "member createResponse|608" }, { a: "method createResponse|513", b: "method createResponse|610" }, { a: "method createResponse|513", b: "class VersionQuery|644" }, { a: "method createResponse|513", b: "member createResponse|646" }, { a: "method createResponse|513", b: "method createResponse|648" }, { a: "method createResponse|513", b: "class Authenticate|650" }, { a: "method createResponse|513", b: "member createResponse|671" }, { a: "method createResponse|513", b: "method createResponse|673" }, { a: "method createResponse|513", b: "class ImageCreateCommand|508" }, { a: "method getTypeName|514", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|514", b: "class ImageCreateCommand|508" }, { a: "class ImagePutCommand|515", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|516", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|516", b: "class ImagePutCommand|515" }, { a: "member files|517", b: "src\\api\\Rest\\dtos.ts" }, { a: "member files|517", b: "class ImagePutCommand|515" }, { a: "member createResponse|518", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|518", b: "interface IReturnVoid|676" }, { a: "member createResponse|518", b: "class ContentPatchCommand|378" }, { a: "member createResponse|518", b: "member createResponse|381" }, { a: "member createResponse|518", b: "method createResponse|383" }, { a: "member createResponse|518", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|518", b: "member createResponse|388" }, { a: "member createResponse|518", b: "method createResponse|390" }, { a: "member createResponse|518", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|518", b: "member createResponse|395" }, { a: "member createResponse|518", b: "method createResponse|397" }, { a: "member createResponse|518", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|518", b: "member createResponse|428" }, { a: "member createResponse|518", b: "method createResponse|430" }, { a: "member createResponse|518", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|518", b: "member createResponse|457" }, { a: "member createResponse|518", b: "method createResponse|459" }, { a: "member createResponse|518", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|518", b: "member createResponse|473" }, { a: "member createResponse|518", b: "method createResponse|475" }, { a: "member createResponse|518", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|518", b: "member createResponse|496" }, { a: "member createResponse|518", b: "method createResponse|498" }, { a: "member createResponse|518", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|518", b: "member createResponse|525" }, { a: "member createResponse|518", b: "method createResponse|527" }, { a: "member createResponse|518", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|518", b: "member createResponse|537" }, { a: "member createResponse|518", b: "method createResponse|539" }, { a: "member createResponse|518", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|518", b: "member createResponse|544" }, { a: "member createResponse|518", b: "method createResponse|546" }, { a: "member createResponse|518", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|518", b: "member createResponse|551" }, { a: "member createResponse|518", b: "method createResponse|553" }, { a: "member createResponse|518", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|518", b: "member createResponse|574" }, { a: "member createResponse|518", b: "method createResponse|576" }, { a: "member createResponse|518", b: "class ProductCreateCommand|612" }, { a: "member createResponse|518", b: "member createResponse|624" }, { a: "member createResponse|518", b: "method createResponse|626" }, { a: "member createResponse|518", b: "class ProductPutCommand|628" }, { a: "member createResponse|518", b: "member createResponse|640" }, { a: "member createResponse|518", b: "method createResponse|642" }, { a: "member createResponse|518", b: "class ImagePutCommand|515" }, { a: "member getTypeName|519", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|519", b: "class ImagePutCommand|515" }, { a: "method createResponse|520", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|520", b: "interface IReturnVoid|676" }, { a: "method createResponse|520", b: "class ContentPatchCommand|378" }, { a: "method createResponse|520", b: "member createResponse|381" }, { a: "method createResponse|520", b: "method createResponse|383" }, { a: "method createResponse|520", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|520", b: "member createResponse|388" }, { a: "method createResponse|520", b: "method createResponse|390" }, { a: "method createResponse|520", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|520", b: "member createResponse|395" }, { a: "method createResponse|520", b: "method createResponse|397" }, { a: "method createResponse|520", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|520", b: "member createResponse|428" }, { a: "method createResponse|520", b: "method createResponse|430" }, { a: "method createResponse|520", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|520", b: "member createResponse|457" }, { a: "method createResponse|520", b: "method createResponse|459" }, { a: "method createResponse|520", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|520", b: "member createResponse|473" }, { a: "method createResponse|520", b: "method createResponse|475" }, { a: "method createResponse|520", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|520", b: "member createResponse|496" }, { a: "method createResponse|520", b: "method createResponse|498" }, { a: "method createResponse|520", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|520", b: "member createResponse|525" }, { a: "method createResponse|520", b: "method createResponse|527" }, { a: "method createResponse|520", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|520", b: "member createResponse|537" }, { a: "method createResponse|520", b: "method createResponse|539" }, { a: "method createResponse|520", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|520", b: "member createResponse|544" }, { a: "method createResponse|520", b: "method createResponse|546" }, { a: "method createResponse|520", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|520", b: "member createResponse|551" }, { a: "method createResponse|520", b: "method createResponse|553" }, { a: "method createResponse|520", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|520", b: "member createResponse|574" }, { a: "method createResponse|520", b: "method createResponse|576" }, { a: "method createResponse|520", b: "class ProductCreateCommand|612" }, { a: "method createResponse|520", b: "member createResponse|624" }, { a: "method createResponse|520", b: "method createResponse|626" }, { a: "method createResponse|520", b: "class ProductPutCommand|628" }, { a: "method createResponse|520", b: "member createResponse|640" }, { a: "method createResponse|520", b: "method createResponse|642" }, { a: "method createResponse|520", b: "class ImagePutCommand|515" }, { a: "method getTypeName|521", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|521", b: "class ImagePutCommand|515" }, { a: "class ImageDeleteCommand|522", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|523", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|523", b: "class ImageDeleteCommand|522" }, { a: "member ids|524", b: "src\\api\\Rest\\dtos.ts" }, { a: "member ids|524", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|525", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|525", b: "interface IReturnVoid|676" }, { a: "member createResponse|525", b: "class ContentPatchCommand|378" }, { a: "member createResponse|525", b: "member createResponse|381" }, { a: "member createResponse|525", b: "method createResponse|383" }, { a: "member createResponse|525", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|525", b: "member createResponse|388" }, { a: "member createResponse|525", b: "method createResponse|390" }, { a: "member createResponse|525", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|525", b: "member createResponse|395" }, { a: "member createResponse|525", b: "method createResponse|397" }, { a: "member createResponse|525", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|525", b: "member createResponse|428" }, { a: "member createResponse|525", b: "method createResponse|430" }, { a: "member createResponse|525", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|525", b: "member createResponse|457" }, { a: "member createResponse|525", b: "method createResponse|459" }, { a: "member createResponse|525", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|525", b: "member createResponse|473" }, { a: "member createResponse|525", b: "method createResponse|475" }, { a: "member createResponse|525", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|525", b: "member createResponse|496" }, { a: "member createResponse|525", b: "method createResponse|498" }, { a: "member createResponse|525", b: "class ImagePutCommand|515" }, { a: "member createResponse|525", b: "member createResponse|518" }, { a: "member createResponse|525", b: "method createResponse|520" }, { a: "member createResponse|525", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|525", b: "member createResponse|537" }, { a: "member createResponse|525", b: "method createResponse|539" }, { a: "member createResponse|525", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|525", b: "member createResponse|544" }, { a: "member createResponse|525", b: "method createResponse|546" }, { a: "member createResponse|525", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|525", b: "member createResponse|551" }, { a: "member createResponse|525", b: "method createResponse|553" }, { a: "member createResponse|525", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|525", b: "member createResponse|574" }, { a: "member createResponse|525", b: "method createResponse|576" }, { a: "member createResponse|525", b: "class ProductCreateCommand|612" }, { a: "member createResponse|525", b: "member createResponse|624" }, { a: "member createResponse|525", b: "method createResponse|626" }, { a: "member createResponse|525", b: "class ProductPutCommand|628" }, { a: "member createResponse|525", b: "member createResponse|640" }, { a: "member createResponse|525", b: "method createResponse|642" }, { a: "member createResponse|525", b: "class ImageDeleteCommand|522" }, { a: "member getTypeName|526", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|526", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|527", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|527", b: "interface IReturnVoid|676" }, { a: "method createResponse|527", b: "class ContentPatchCommand|378" }, { a: "method createResponse|527", b: "member createResponse|381" }, { a: "method createResponse|527", b: "method createResponse|383" }, { a: "method createResponse|527", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|527", b: "member createResponse|388" }, { a: "method createResponse|527", b: "method createResponse|390" }, { a: "method createResponse|527", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|527", b: "member createResponse|395" }, { a: "method createResponse|527", b: "method createResponse|397" }, { a: "method createResponse|527", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|527", b: "member createResponse|428" }, { a: "method createResponse|527", b: "method createResponse|430" }, { a: "method createResponse|527", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|527", b: "member createResponse|457" }, { a: "method createResponse|527", b: "method createResponse|459" }, { a: "method createResponse|527", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|527", b: "member createResponse|473" }, { a: "method createResponse|527", b: "method createResponse|475" }, { a: "method createResponse|527", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|527", b: "member createResponse|496" }, { a: "method createResponse|527", b: "method createResponse|498" }, { a: "method createResponse|527", b: "class ImagePutCommand|515" }, { a: "method createResponse|527", b: "member createResponse|518" }, { a: "method createResponse|527", b: "method createResponse|520" }, { a: "method createResponse|527", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|527", b: "member createResponse|537" }, { a: "method createResponse|527", b: "method createResponse|539" }, { a: "method createResponse|527", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|527", b: "member createResponse|544" }, { a: "method createResponse|527", b: "method createResponse|546" }, { a: "method createResponse|527", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|527", b: "member createResponse|551" }, { a: "method createResponse|527", b: "method createResponse|553" }, { a: "method createResponse|527", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|527", b: "member createResponse|574" }, { a: "method createResponse|527", b: "method createResponse|576" }, { a: "method createResponse|527", b: "class ProductCreateCommand|612" }, { a: "method createResponse|527", b: "member createResponse|624" }, { a: "method createResponse|527", b: "method createResponse|626" }, { a: "method createResponse|527", b: "class ProductPutCommand|628" }, { a: "method createResponse|527", b: "member createResponse|640" }, { a: "method createResponse|527", b: "method createResponse|642" }, { a: "method createResponse|527", b: "class ImageDeleteCommand|522" }, { a: "method getTypeName|528", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|528", b: "class ImageDeleteCommand|522" }, { a: "class LayoutQuery|529", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LayoutQuery|529", b: "var getLayout|854" }, { a: "member engineId|530", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|530", b: "var getLayout|854" }, { a: "member engineId|530", b: "class LayoutQuery|529" }, { a: "member createResponse|531", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|531", b: "interface IReturn|675" }, { a: "member createResponse|531", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|531", b: "member createResponse|402" }, { a: "member createResponse|531", b: "method createResponse|404" }, { a: "member createResponse|531", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|531", b: "member createResponse|409" }, { a: "member createResponse|531", b: "method createResponse|411" }, { a: "member createResponse|531", b: "class FaqQuery|413" }, { a: "member createResponse|531", b: "member createResponse|414" }, { a: "member createResponse|531", b: "method createResponse|416" }, { a: "member createResponse|531", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|531", b: "member createResponse|421" }, { a: "member createResponse|531", b: "method createResponse|423" }, { a: "member createResponse|531", b: "class FontFileGetQuery|432" }, { a: "member createResponse|531", b: "member createResponse|434" }, { a: "member createResponse|531", b: "method createResponse|436" }, { a: "member createResponse|531", b: "class GiftCardQuery|438" }, { a: "member createResponse|531", b: "member createResponse|440" }, { a: "member createResponse|531", b: "method createResponse|442" }, { a: "member createResponse|531", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|531", b: "member createResponse|479" }, { a: "member createResponse|531", b: "method createResponse|481" }, { a: "member createResponse|531", b: "class GreetingCategoryList|483" }, { a: "member createResponse|531", b: "member createResponse|484" }, { a: "member createResponse|531", b: "method createResponse|486" }, { a: "member createResponse|531", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|531", b: "member createResponse|490" }, { a: "member createResponse|531", b: "method createResponse|492" }, { a: "member createResponse|531", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|531", b: "member createResponse|504" }, { a: "member createResponse|531", b: "method createResponse|506" }, { a: "member createResponse|531", b: "class ImageCreateCommand|508" }, { a: "member createResponse|531", b: "member createResponse|511" }, { a: "member createResponse|531", b: "method createResponse|513" }, { a: "member createResponse|531", b: "class LocalizationQuery|578" }, { a: "member createResponse|531", b: "member createResponse|579" }, { a: "member createResponse|531", b: "method createResponse|581" }, { a: "member createResponse|531", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|531", b: "member createResponse|584" }, { a: "member createResponse|531", b: "method createResponse|586" }, { a: "member createResponse|531", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|531", b: "member createResponse|590" }, { a: "member createResponse|531", b: "method createResponse|592" }, { a: "member createResponse|531", b: "class LocationQuery|594" }, { a: "member createResponse|531", b: "member createResponse|595" }, { a: "member createResponse|531", b: "method createResponse|597" }, { a: "member createResponse|531", b: "class OrderCreateCommand|599" }, { a: "member createResponse|531", b: "member createResponse|602" }, { a: "member createResponse|531", b: "method createResponse|604" }, { a: "member createResponse|531", b: "class ProductQuery|606" }, { a: "member createResponse|531", b: "member createResponse|608" }, { a: "member createResponse|531", b: "method createResponse|610" }, { a: "member createResponse|531", b: "class VersionQuery|644" }, { a: "member createResponse|531", b: "member createResponse|646" }, { a: "member createResponse|531", b: "method createResponse|648" }, { a: "member createResponse|531", b: "class Authenticate|650" }, { a: "member createResponse|531", b: "member createResponse|671" }, { a: "member createResponse|531", b: "method createResponse|673" }, { a: "member createResponse|531", b: "class LayoutQuery|529" }, { a: "member getTypeName|532", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|532", b: "class LayoutQuery|529" }, { a: "method createResponse|533", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|533", b: "interface IReturn|675" }, { a: "method createResponse|533", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|533", b: "member createResponse|402" }, { a: "method createResponse|533", b: "method createResponse|404" }, { a: "method createResponse|533", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|533", b: "member createResponse|409" }, { a: "method createResponse|533", b: "method createResponse|411" }, { a: "method createResponse|533", b: "class FaqQuery|413" }, { a: "method createResponse|533", b: "member createResponse|414" }, { a: "method createResponse|533", b: "method createResponse|416" }, { a: "method createResponse|533", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|533", b: "member createResponse|421" }, { a: "method createResponse|533", b: "method createResponse|423" }, { a: "method createResponse|533", b: "class FontFileGetQuery|432" }, { a: "method createResponse|533", b: "member createResponse|434" }, { a: "method createResponse|533", b: "method createResponse|436" }, { a: "method createResponse|533", b: "class GiftCardQuery|438" }, { a: "method createResponse|533", b: "member createResponse|440" }, { a: "method createResponse|533", b: "method createResponse|442" }, { a: "method createResponse|533", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|533", b: "member createResponse|479" }, { a: "method createResponse|533", b: "method createResponse|481" }, { a: "method createResponse|533", b: "class GreetingCategoryList|483" }, { a: "method createResponse|533", b: "member createResponse|484" }, { a: "method createResponse|533", b: "method createResponse|486" }, { a: "method createResponse|533", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|533", b: "member createResponse|490" }, { a: "method createResponse|533", b: "method createResponse|492" }, { a: "method createResponse|533", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|533", b: "member createResponse|504" }, { a: "method createResponse|533", b: "method createResponse|506" }, { a: "method createResponse|533", b: "class ImageCreateCommand|508" }, { a: "method createResponse|533", b: "member createResponse|511" }, { a: "method createResponse|533", b: "method createResponse|513" }, { a: "method createResponse|533", b: "class LocalizationQuery|578" }, { a: "method createResponse|533", b: "member createResponse|579" }, { a: "method createResponse|533", b: "method createResponse|581" }, { a: "method createResponse|533", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|533", b: "member createResponse|584" }, { a: "method createResponse|533", b: "method createResponse|586" }, { a: "method createResponse|533", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|533", b: "member createResponse|590" }, { a: "method createResponse|533", b: "method createResponse|592" }, { a: "method createResponse|533", b: "class LocationQuery|594" }, { a: "method createResponse|533", b: "member createResponse|595" }, { a: "method createResponse|533", b: "method createResponse|597" }, { a: "method createResponse|533", b: "class OrderCreateCommand|599" }, { a: "method createResponse|533", b: "member createResponse|602" }, { a: "method createResponse|533", b: "method createResponse|604" }, { a: "method createResponse|533", b: "class ProductQuery|606" }, { a: "method createResponse|533", b: "member createResponse|608" }, { a: "method createResponse|533", b: "method createResponse|610" }, { a: "method createResponse|533", b: "class VersionQuery|644" }, { a: "method createResponse|533", b: "member createResponse|646" }, { a: "method createResponse|533", b: "method createResponse|648" }, { a: "method createResponse|533", b: "class Authenticate|650" }, { a: "method createResponse|533", b: "member createResponse|671" }, { a: "method createResponse|533", b: "method createResponse|673" }, { a: "method createResponse|533", b: "class LayoutQuery|529" }, { a: "method getTypeName|534", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|534", b: "class LayoutQuery|529" }, { a: "class LayoutPatchCommand|535", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|536", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|536", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|537", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|537", b: "interface IReturnVoid|676" }, { a: "member createResponse|537", b: "class ContentPatchCommand|378" }, { a: "member createResponse|537", b: "member createResponse|381" }, { a: "member createResponse|537", b: "method createResponse|383" }, { a: "member createResponse|537", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|537", b: "member createResponse|388" }, { a: "member createResponse|537", b: "method createResponse|390" }, { a: "member createResponse|537", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|537", b: "member createResponse|395" }, { a: "member createResponse|537", b: "method createResponse|397" }, { a: "member createResponse|537", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|537", b: "member createResponse|428" }, { a: "member createResponse|537", b: "method createResponse|430" }, { a: "member createResponse|537", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|537", b: "member createResponse|457" }, { a: "member createResponse|537", b: "method createResponse|459" }, { a: "member createResponse|537", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|537", b: "member createResponse|473" }, { a: "member createResponse|537", b: "method createResponse|475" }, { a: "member createResponse|537", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|537", b: "member createResponse|496" }, { a: "member createResponse|537", b: "method createResponse|498" }, { a: "member createResponse|537", b: "class ImagePutCommand|515" }, { a: "member createResponse|537", b: "member createResponse|518" }, { a: "member createResponse|537", b: "method createResponse|520" }, { a: "member createResponse|537", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|537", b: "member createResponse|525" }, { a: "member createResponse|537", b: "method createResponse|527" }, { a: "member createResponse|537", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|537", b: "member createResponse|544" }, { a: "member createResponse|537", b: "method createResponse|546" }, { a: "member createResponse|537", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|537", b: "member createResponse|551" }, { a: "member createResponse|537", b: "method createResponse|553" }, { a: "member createResponse|537", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|537", b: "member createResponse|574" }, { a: "member createResponse|537", b: "method createResponse|576" }, { a: "member createResponse|537", b: "class ProductCreateCommand|612" }, { a: "member createResponse|537", b: "member createResponse|624" }, { a: "member createResponse|537", b: "method createResponse|626" }, { a: "member createResponse|537", b: "class ProductPutCommand|628" }, { a: "member createResponse|537", b: "member createResponse|640" }, { a: "member createResponse|537", b: "method createResponse|642" }, { a: "member createResponse|537", b: "class LayoutPatchCommand|535" }, { a: "member getTypeName|538", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|538", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|539", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|539", b: "interface IReturnVoid|676" }, { a: "method createResponse|539", b: "class ContentPatchCommand|378" }, { a: "method createResponse|539", b: "member createResponse|381" }, { a: "method createResponse|539", b: "method createResponse|383" }, { a: "method createResponse|539", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|539", b: "member createResponse|388" }, { a: "method createResponse|539", b: "method createResponse|390" }, { a: "method createResponse|539", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|539", b: "member createResponse|395" }, { a: "method createResponse|539", b: "method createResponse|397" }, { a: "method createResponse|539", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|539", b: "member createResponse|428" }, { a: "method createResponse|539", b: "method createResponse|430" }, { a: "method createResponse|539", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|539", b: "member createResponse|457" }, { a: "method createResponse|539", b: "method createResponse|459" }, { a: "method createResponse|539", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|539", b: "member createResponse|473" }, { a: "method createResponse|539", b: "method createResponse|475" }, { a: "method createResponse|539", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|539", b: "member createResponse|496" }, { a: "method createResponse|539", b: "method createResponse|498" }, { a: "method createResponse|539", b: "class ImagePutCommand|515" }, { a: "method createResponse|539", b: "member createResponse|518" }, { a: "method createResponse|539", b: "method createResponse|520" }, { a: "method createResponse|539", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|539", b: "member createResponse|525" }, { a: "method createResponse|539", b: "method createResponse|527" }, { a: "method createResponse|539", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|539", b: "member createResponse|544" }, { a: "method createResponse|539", b: "method createResponse|546" }, { a: "method createResponse|539", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|539", b: "member createResponse|551" }, { a: "method createResponse|539", b: "method createResponse|553" }, { a: "method createResponse|539", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|539", b: "member createResponse|574" }, { a: "method createResponse|539", b: "method createResponse|576" }, { a: "method createResponse|539", b: "class ProductCreateCommand|612" }, { a: "method createResponse|539", b: "member createResponse|624" }, { a: "method createResponse|539", b: "method createResponse|626" }, { a: "method createResponse|539", b: "class ProductPutCommand|628" }, { a: "method createResponse|539", b: "member createResponse|640" }, { a: "method createResponse|539", b: "method createResponse|642" }, { a: "method createResponse|539", b: "class LayoutPatchCommand|535" }, { a: "method getTypeName|540", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|540", b: "class LayoutPatchCommand|535" }, { a: "class B2bLimitsPatchCommand|541", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|542", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|542", b: "class B2bLimitsPatchCommand|541" }, { a: "member b2BLimitPatches|543", b: "src\\api\\Rest\\dtos.ts" }, { a: "member b2BLimitPatches|543", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|544", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|544", b: "interface IReturnVoid|676" }, { a: "member createResponse|544", b: "class ContentPatchCommand|378" }, { a: "member createResponse|544", b: "member createResponse|381" }, { a: "member createResponse|544", b: "method createResponse|383" }, { a: "member createResponse|544", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|544", b: "member createResponse|388" }, { a: "member createResponse|544", b: "method createResponse|390" }, { a: "member createResponse|544", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|544", b: "member createResponse|395" }, { a: "member createResponse|544", b: "method createResponse|397" }, { a: "member createResponse|544", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|544", b: "member createResponse|428" }, { a: "member createResponse|544", b: "method createResponse|430" }, { a: "member createResponse|544", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|544", b: "member createResponse|457" }, { a: "member createResponse|544", b: "method createResponse|459" }, { a: "member createResponse|544", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|544", b: "member createResponse|473" }, { a: "member createResponse|544", b: "method createResponse|475" }, { a: "member createResponse|544", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|544", b: "member createResponse|496" }, { a: "member createResponse|544", b: "method createResponse|498" }, { a: "member createResponse|544", b: "class ImagePutCommand|515" }, { a: "member createResponse|544", b: "member createResponse|518" }, { a: "member createResponse|544", b: "method createResponse|520" }, { a: "member createResponse|544", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|544", b: "member createResponse|525" }, { a: "member createResponse|544", b: "method createResponse|527" }, { a: "member createResponse|544", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|544", b: "member createResponse|537" }, { a: "member createResponse|544", b: "method createResponse|539" }, { a: "member createResponse|544", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|544", b: "member createResponse|551" }, { a: "member createResponse|544", b: "method createResponse|553" }, { a: "member createResponse|544", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|544", b: "member createResponse|574" }, { a: "member createResponse|544", b: "method createResponse|576" }, { a: "member createResponse|544", b: "class ProductCreateCommand|612" }, { a: "member createResponse|544", b: "member createResponse|624" }, { a: "member createResponse|544", b: "method createResponse|626" }, { a: "member createResponse|544", b: "class ProductPutCommand|628" }, { a: "member createResponse|544", b: "member createResponse|640" }, { a: "member createResponse|544", b: "method createResponse|642" }, { a: "member createResponse|544", b: "class B2bLimitsPatchCommand|541" }, { a: "member getTypeName|545", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|545", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|546", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|546", b: "interface IReturnVoid|676" }, { a: "method createResponse|546", b: "class ContentPatchCommand|378" }, { a: "method createResponse|546", b: "member createResponse|381" }, { a: "method createResponse|546", b: "method createResponse|383" }, { a: "method createResponse|546", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|546", b: "member createResponse|388" }, { a: "method createResponse|546", b: "method createResponse|390" }, { a: "method createResponse|546", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|546", b: "member createResponse|395" }, { a: "method createResponse|546", b: "method createResponse|397" }, { a: "method createResponse|546", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|546", b: "member createResponse|428" }, { a: "method createResponse|546", b: "method createResponse|430" }, { a: "method createResponse|546", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|546", b: "member createResponse|457" }, { a: "method createResponse|546", b: "method createResponse|459" }, { a: "method createResponse|546", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|546", b: "member createResponse|473" }, { a: "method createResponse|546", b: "method createResponse|475" }, { a: "method createResponse|546", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|546", b: "member createResponse|496" }, { a: "method createResponse|546", b: "method createResponse|498" }, { a: "method createResponse|546", b: "class ImagePutCommand|515" }, { a: "method createResponse|546", b: "member createResponse|518" }, { a: "method createResponse|546", b: "method createResponse|520" }, { a: "method createResponse|546", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|546", b: "member createResponse|525" }, { a: "method createResponse|546", b: "method createResponse|527" }, { a: "method createResponse|546", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|546", b: "member createResponse|537" }, { a: "method createResponse|546", b: "method createResponse|539" }, { a: "method createResponse|546", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|546", b: "member createResponse|551" }, { a: "method createResponse|546", b: "method createResponse|553" }, { a: "method createResponse|546", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|546", b: "member createResponse|574" }, { a: "method createResponse|546", b: "method createResponse|576" }, { a: "method createResponse|546", b: "class ProductCreateCommand|612" }, { a: "method createResponse|546", b: "member createResponse|624" }, { a: "method createResponse|546", b: "method createResponse|626" }, { a: "method createResponse|546", b: "class ProductPutCommand|628" }, { a: "method createResponse|546", b: "member createResponse|640" }, { a: "method createResponse|546", b: "method createResponse|642" }, { a: "method createResponse|546", b: "class B2bLimitsPatchCommand|541" }, { a: "method getTypeName|547", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|547", b: "class B2bLimitsPatchCommand|541" }, { a: "class StepNameTranslationPatchCommand|548", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|549", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|549", b: "class StepNameTranslationPatchCommand|548" }, { a: "member stepNameTranslationPatches|550", b: "src\\api\\Rest\\dtos.ts" }, { a: "member stepNameTranslationPatches|550", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|551", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|551", b: "interface IReturnVoid|676" }, { a: "member createResponse|551", b: "class ContentPatchCommand|378" }, { a: "member createResponse|551", b: "member createResponse|381" }, { a: "member createResponse|551", b: "method createResponse|383" }, { a: "member createResponse|551", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|551", b: "member createResponse|388" }, { a: "member createResponse|551", b: "method createResponse|390" }, { a: "member createResponse|551", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|551", b: "member createResponse|395" }, { a: "member createResponse|551", b: "method createResponse|397" }, { a: "member createResponse|551", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|551", b: "member createResponse|428" }, { a: "member createResponse|551", b: "method createResponse|430" }, { a: "member createResponse|551", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|551", b: "member createResponse|457" }, { a: "member createResponse|551", b: "method createResponse|459" }, { a: "member createResponse|551", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|551", b: "member createResponse|473" }, { a: "member createResponse|551", b: "method createResponse|475" }, { a: "member createResponse|551", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|551", b: "member createResponse|496" }, { a: "member createResponse|551", b: "method createResponse|498" }, { a: "member createResponse|551", b: "class ImagePutCommand|515" }, { a: "member createResponse|551", b: "member createResponse|518" }, { a: "member createResponse|551", b: "method createResponse|520" }, { a: "member createResponse|551", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|551", b: "member createResponse|525" }, { a: "member createResponse|551", b: "method createResponse|527" }, { a: "member createResponse|551", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|551", b: "member createResponse|537" }, { a: "member createResponse|551", b: "method createResponse|539" }, { a: "member createResponse|551", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|551", b: "member createResponse|544" }, { a: "member createResponse|551", b: "method createResponse|546" }, { a: "member createResponse|551", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|551", b: "member createResponse|574" }, { a: "member createResponse|551", b: "method createResponse|576" }, { a: "member createResponse|551", b: "class ProductCreateCommand|612" }, { a: "member createResponse|551", b: "member createResponse|624" }, { a: "member createResponse|551", b: "method createResponse|626" }, { a: "member createResponse|551", b: "class ProductPutCommand|628" }, { a: "member createResponse|551", b: "member createResponse|640" }, { a: "member createResponse|551", b: "method createResponse|642" }, { a: "member createResponse|551", b: "class StepNameTranslationPatchCommand|548" }, { a: "member getTypeName|552", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|552", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|553", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|553", b: "interface IReturnVoid|676" }, { a: "method createResponse|553", b: "class ContentPatchCommand|378" }, { a: "method createResponse|553", b: "member createResponse|381" }, { a: "method createResponse|553", b: "method createResponse|383" }, { a: "method createResponse|553", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|553", b: "member createResponse|388" }, { a: "method createResponse|553", b: "method createResponse|390" }, { a: "method createResponse|553", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|553", b: "member createResponse|395" }, { a: "method createResponse|553", b: "method createResponse|397" }, { a: "method createResponse|553", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|553", b: "member createResponse|428" }, { a: "method createResponse|553", b: "method createResponse|430" }, { a: "method createResponse|553", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|553", b: "member createResponse|457" }, { a: "method createResponse|553", b: "method createResponse|459" }, { a: "method createResponse|553", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|553", b: "member createResponse|473" }, { a: "method createResponse|553", b: "method createResponse|475" }, { a: "method createResponse|553", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|553", b: "member createResponse|496" }, { a: "method createResponse|553", b: "method createResponse|498" }, { a: "method createResponse|553", b: "class ImagePutCommand|515" }, { a: "method createResponse|553", b: "member createResponse|518" }, { a: "method createResponse|553", b: "method createResponse|520" }, { a: "method createResponse|553", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|553", b: "member createResponse|525" }, { a: "method createResponse|553", b: "method createResponse|527" }, { a: "method createResponse|553", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|553", b: "member createResponse|537" }, { a: "method createResponse|553", b: "method createResponse|539" }, { a: "method createResponse|553", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|553", b: "member createResponse|544" }, { a: "method createResponse|553", b: "method createResponse|546" }, { a: "method createResponse|553", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|553", b: "member createResponse|574" }, { a: "method createResponse|553", b: "method createResponse|576" }, { a: "method createResponse|553", b: "class ProductCreateCommand|612" }, { a: "method createResponse|553", b: "member createResponse|624" }, { a: "method createResponse|553", b: "method createResponse|626" }, { a: "method createResponse|553", b: "class ProductPutCommand|628" }, { a: "method createResponse|553", b: "member createResponse|640" }, { a: "method createResponse|553", b: "method createResponse|642" }, { a: "method createResponse|553", b: "class StepNameTranslationPatchCommand|548" }, { a: "method getTypeName|554", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|554", b: "class StepNameTranslationPatchCommand|548" }, { a: "class LayoutCreateCommand|555", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|556", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|556", b: "class LayoutCreateCommand|555" }, { a: "member url|557", b: "src\\api\\Rest\\dtos.ts" }, { a: "member url|557", b: "class LayoutCreateCommand|555" }, { a: "member fontName|558", b: "src\\api\\Rest\\dtos.ts" }, { a: "member fontName|558", b: "class LayoutCreateCommand|555" }, { a: "member primaryColour|559", b: "src\\api\\Rest\\dtos.ts" }, { a: "member primaryColour|559", b: "class LayoutCreateCommand|555" }, { a: "member bodyColour|560", b: "src\\api\\Rest\\dtos.ts" }, { a: "member bodyColour|560", b: "class LayoutCreateCommand|555" }, { a: "member backgroundColour|561", b: "src\\api\\Rest\\dtos.ts" }, { a: "member backgroundColour|561", b: "class LayoutCreateCommand|555" }, { a: "member customCss|562", b: "src\\api\\Rest\\dtos.ts" }, { a: "member customCss|562", b: "class LayoutCreateCommand|555" }, { a: "member linkWebsite|563", b: "src\\api\\Rest\\dtos.ts" }, { a: "member linkWebsite|563", b: "class LayoutCreateCommand|555" }, { a: "member linkCheckValue|564", b: "src\\api\\Rest\\dtos.ts" }, { a: "member linkCheckValue|564", b: "class LayoutCreateCommand|555" }, { a: "member isEmailDelivery|565", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|565", b: "class LayoutCreateCommand|555" }, { a: "member isSmsDelivery|566", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|566", b: "class LayoutCreateCommand|555" }, { a: "member isPostDelivery|567", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|567", b: "class LayoutCreateCommand|555" }, { a: "member isInvoicePayment|568", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isInvoicePayment|568", b: "class LayoutCreateCommand|555" }, { a: "member googleTag|569", b: "src\\api\\Rest\\dtos.ts" }, { a: "member googleTag|569", b: "class LayoutCreateCommand|555" }, { a: "member startTimestamp|570", b: "src\\api\\Rest\\dtos.ts" }, { a: "member startTimestamp|570", b: "class LayoutCreateCommand|555" }, { a: "member endTimestamp|571", b: "src\\api\\Rest\\dtos.ts" }, { a: "member endTimestamp|571", b: "class LayoutCreateCommand|555" }, { a: "member useStrictDates|572", b: "src\\api\\Rest\\dtos.ts" }, { a: "member useStrictDates|572", b: "class LayoutCreateCommand|555" }, { a: "member isUniqueTesterEnabled|573", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isUniqueTesterEnabled|573", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|574", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|574", b: "interface IReturnVoid|676" }, { a: "member createResponse|574", b: "class ContentPatchCommand|378" }, { a: "member createResponse|574", b: "member createResponse|381" }, { a: "member createResponse|574", b: "method createResponse|383" }, { a: "member createResponse|574", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|574", b: "member createResponse|388" }, { a: "member createResponse|574", b: "method createResponse|390" }, { a: "member createResponse|574", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|574", b: "member createResponse|395" }, { a: "member createResponse|574", b: "method createResponse|397" }, { a: "member createResponse|574", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|574", b: "member createResponse|428" }, { a: "member createResponse|574", b: "method createResponse|430" }, { a: "member createResponse|574", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|574", b: "member createResponse|457" }, { a: "member createResponse|574", b: "method createResponse|459" }, { a: "member createResponse|574", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|574", b: "member createResponse|473" }, { a: "member createResponse|574", b: "method createResponse|475" }, { a: "member createResponse|574", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|574", b: "member createResponse|496" }, { a: "member createResponse|574", b: "method createResponse|498" }, { a: "member createResponse|574", b: "class ImagePutCommand|515" }, { a: "member createResponse|574", b: "member createResponse|518" }, { a: "member createResponse|574", b: "method createResponse|520" }, { a: "member createResponse|574", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|574", b: "member createResponse|525" }, { a: "member createResponse|574", b: "method createResponse|527" }, { a: "member createResponse|574", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|574", b: "member createResponse|537" }, { a: "member createResponse|574", b: "method createResponse|539" }, { a: "member createResponse|574", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|574", b: "member createResponse|544" }, { a: "member createResponse|574", b: "method createResponse|546" }, { a: "member createResponse|574", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|574", b: "member createResponse|551" }, { a: "member createResponse|574", b: "method createResponse|553" }, { a: "member createResponse|574", b: "class ProductCreateCommand|612" }, { a: "member createResponse|574", b: "member createResponse|624" }, { a: "member createResponse|574", b: "method createResponse|626" }, { a: "member createResponse|574", b: "class ProductPutCommand|628" }, { a: "member createResponse|574", b: "member createResponse|640" }, { a: "member createResponse|574", b: "method createResponse|642" }, { a: "member createResponse|574", b: "class LayoutCreateCommand|555" }, { a: "member getTypeName|575", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|575", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|576", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|576", b: "interface IReturnVoid|676" }, { a: "method createResponse|576", b: "class ContentPatchCommand|378" }, { a: "method createResponse|576", b: "member createResponse|381" }, { a: "method createResponse|576", b: "method createResponse|383" }, { a: "method createResponse|576", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|576", b: "member createResponse|388" }, { a: "method createResponse|576", b: "method createResponse|390" }, { a: "method createResponse|576", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|576", b: "member createResponse|395" }, { a: "method createResponse|576", b: "method createResponse|397" }, { a: "method createResponse|576", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|576", b: "member createResponse|428" }, { a: "method createResponse|576", b: "method createResponse|430" }, { a: "method createResponse|576", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|576", b: "member createResponse|457" }, { a: "method createResponse|576", b: "method createResponse|459" }, { a: "method createResponse|576", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|576", b: "member createResponse|473" }, { a: "method createResponse|576", b: "method createResponse|475" }, { a: "method createResponse|576", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|576", b: "member createResponse|496" }, { a: "method createResponse|576", b: "method createResponse|498" }, { a: "method createResponse|576", b: "class ImagePutCommand|515" }, { a: "method createResponse|576", b: "member createResponse|518" }, { a: "method createResponse|576", b: "method createResponse|520" }, { a: "method createResponse|576", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|576", b: "member createResponse|525" }, { a: "method createResponse|576", b: "method createResponse|527" }, { a: "method createResponse|576", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|576", b: "member createResponse|537" }, { a: "method createResponse|576", b: "method createResponse|539" }, { a: "method createResponse|576", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|576", b: "member createResponse|544" }, { a: "method createResponse|576", b: "method createResponse|546" }, { a: "method createResponse|576", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|576", b: "member createResponse|551" }, { a: "method createResponse|576", b: "method createResponse|553" }, { a: "method createResponse|576", b: "class ProductCreateCommand|612" }, { a: "method createResponse|576", b: "member createResponse|624" }, { a: "method createResponse|576", b: "method createResponse|626" }, { a: "method createResponse|576", b: "class ProductPutCommand|628" }, { a: "method createResponse|576", b: "member createResponse|640" }, { a: "method createResponse|576", b: "method createResponse|642" }, { a: "method createResponse|576", b: "class LayoutCreateCommand|555" }, { a: "method getTypeName|577", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|577", b: "class LayoutCreateCommand|555" }, { a: "class LocalizationQuery|578", b: "src\\api\\Rest\\dtos.ts" }, { a: "class LocalizationQuery|578", b: "var getLanguages|855" }, { a: "member createResponse|579", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|579", b: "interface IReturn|675" }, { a: "member createResponse|579", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|579", b: "member createResponse|402" }, { a: "member createResponse|579", b: "method createResponse|404" }, { a: "member createResponse|579", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|579", b: "member createResponse|409" }, { a: "member createResponse|579", b: "method createResponse|411" }, { a: "member createResponse|579", b: "class FaqQuery|413" }, { a: "member createResponse|579", b: "member createResponse|414" }, { a: "member createResponse|579", b: "method createResponse|416" }, { a: "member createResponse|579", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|579", b: "member createResponse|421" }, { a: "member createResponse|579", b: "method createResponse|423" }, { a: "member createResponse|579", b: "class FontFileGetQuery|432" }, { a: "member createResponse|579", b: "member createResponse|434" }, { a: "member createResponse|579", b: "method createResponse|436" }, { a: "member createResponse|579", b: "class GiftCardQuery|438" }, { a: "member createResponse|579", b: "member createResponse|440" }, { a: "member createResponse|579", b: "method createResponse|442" }, { a: "member createResponse|579", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|579", b: "member createResponse|479" }, { a: "member createResponse|579", b: "method createResponse|481" }, { a: "member createResponse|579", b: "class GreetingCategoryList|483" }, { a: "member createResponse|579", b: "member createResponse|484" }, { a: "member createResponse|579", b: "method createResponse|486" }, { a: "member createResponse|579", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|579", b: "member createResponse|490" }, { a: "member createResponse|579", b: "method createResponse|492" }, { a: "member createResponse|579", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|579", b: "member createResponse|504" }, { a: "member createResponse|579", b: "method createResponse|506" }, { a: "member createResponse|579", b: "class ImageCreateCommand|508" }, { a: "member createResponse|579", b: "member createResponse|511" }, { a: "member createResponse|579", b: "method createResponse|513" }, { a: "member createResponse|579", b: "class LayoutQuery|529" }, { a: "member createResponse|579", b: "member createResponse|531" }, { a: "member createResponse|579", b: "method createResponse|533" }, { a: "member createResponse|579", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|579", b: "member createResponse|584" }, { a: "member createResponse|579", b: "method createResponse|586" }, { a: "member createResponse|579", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|579", b: "member createResponse|590" }, { a: "member createResponse|579", b: "method createResponse|592" }, { a: "member createResponse|579", b: "class LocationQuery|594" }, { a: "member createResponse|579", b: "member createResponse|595" }, { a: "member createResponse|579", b: "method createResponse|597" }, { a: "member createResponse|579", b: "class OrderCreateCommand|599" }, { a: "member createResponse|579", b: "member createResponse|602" }, { a: "member createResponse|579", b: "method createResponse|604" }, { a: "member createResponse|579", b: "class ProductQuery|606" }, { a: "member createResponse|579", b: "member createResponse|608" }, { a: "member createResponse|579", b: "method createResponse|610" }, { a: "member createResponse|579", b: "class VersionQuery|644" }, { a: "member createResponse|579", b: "member createResponse|646" }, { a: "member createResponse|579", b: "method createResponse|648" }, { a: "member createResponse|579", b: "class Authenticate|650" }, { a: "member createResponse|579", b: "member createResponse|671" }, { a: "member createResponse|579", b: "method createResponse|673" }, { a: "member createResponse|579", b: "class LocalizationQuery|578" }, { a: "member getTypeName|580", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|580", b: "class LocalizationQuery|578" }, { a: "method createResponse|581", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|581", b: "interface IReturn|675" }, { a: "method createResponse|581", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|581", b: "member createResponse|402" }, { a: "method createResponse|581", b: "method createResponse|404" }, { a: "method createResponse|581", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|581", b: "member createResponse|409" }, { a: "method createResponse|581", b: "method createResponse|411" }, { a: "method createResponse|581", b: "class FaqQuery|413" }, { a: "method createResponse|581", b: "member createResponse|414" }, { a: "method createResponse|581", b: "method createResponse|416" }, { a: "method createResponse|581", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|581", b: "member createResponse|421" }, { a: "method createResponse|581", b: "method createResponse|423" }, { a: "method createResponse|581", b: "class FontFileGetQuery|432" }, { a: "method createResponse|581", b: "member createResponse|434" }, { a: "method createResponse|581", b: "method createResponse|436" }, { a: "method createResponse|581", b: "class GiftCardQuery|438" }, { a: "method createResponse|581", b: "member createResponse|440" }, { a: "method createResponse|581", b: "method createResponse|442" }, { a: "method createResponse|581", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|581", b: "member createResponse|479" }, { a: "method createResponse|581", b: "method createResponse|481" }, { a: "method createResponse|581", b: "class GreetingCategoryList|483" }, { a: "method createResponse|581", b: "member createResponse|484" }, { a: "method createResponse|581", b: "method createResponse|486" }, { a: "method createResponse|581", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|581", b: "member createResponse|490" }, { a: "method createResponse|581", b: "method createResponse|492" }, { a: "method createResponse|581", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|581", b: "member createResponse|504" }, { a: "method createResponse|581", b: "method createResponse|506" }, { a: "method createResponse|581", b: "class ImageCreateCommand|508" }, { a: "method createResponse|581", b: "member createResponse|511" }, { a: "method createResponse|581", b: "method createResponse|513" }, { a: "method createResponse|581", b: "class LayoutQuery|529" }, { a: "method createResponse|581", b: "member createResponse|531" }, { a: "method createResponse|581", b: "method createResponse|533" }, { a: "method createResponse|581", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|581", b: "member createResponse|584" }, { a: "method createResponse|581", b: "method createResponse|586" }, { a: "method createResponse|581", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|581", b: "member createResponse|590" }, { a: "method createResponse|581", b: "method createResponse|592" }, { a: "method createResponse|581", b: "class LocationQuery|594" }, { a: "method createResponse|581", b: "member createResponse|595" }, { a: "method createResponse|581", b: "method createResponse|597" }, { a: "method createResponse|581", b: "class OrderCreateCommand|599" }, { a: "method createResponse|581", b: "member createResponse|602" }, { a: "method createResponse|581", b: "method createResponse|604" }, { a: "method createResponse|581", b: "class ProductQuery|606" }, { a: "method createResponse|581", b: "member createResponse|608" }, { a: "method createResponse|581", b: "method createResponse|610" }, { a: "method createResponse|581", b: "class VersionQuery|644" }, { a: "method createResponse|581", b: "member createResponse|646" }, { a: "method createResponse|581", b: "method createResponse|648" }, { a: "method createResponse|581", b: "class Authenticate|650" }, { a: "method createResponse|581", b: "member createResponse|671" }, { a: "method createResponse|581", b: "method createResponse|673" }, { a: "method createResponse|581", b: "class LocalizationQuery|578" }, { a: "method getTypeName|582", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|582", b: "class LocalizationQuery|578" }, { a: "class LocalizationNotCachedQuery|583", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|584", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|584", b: "interface IReturn|675" }, { a: "member createResponse|584", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|584", b: "member createResponse|402" }, { a: "member createResponse|584", b: "method createResponse|404" }, { a: "member createResponse|584", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|584", b: "member createResponse|409" }, { a: "member createResponse|584", b: "method createResponse|411" }, { a: "member createResponse|584", b: "class FaqQuery|413" }, { a: "member createResponse|584", b: "member createResponse|414" }, { a: "member createResponse|584", b: "method createResponse|416" }, { a: "member createResponse|584", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|584", b: "member createResponse|421" }, { a: "member createResponse|584", b: "method createResponse|423" }, { a: "member createResponse|584", b: "class FontFileGetQuery|432" }, { a: "member createResponse|584", b: "member createResponse|434" }, { a: "member createResponse|584", b: "method createResponse|436" }, { a: "member createResponse|584", b: "class GiftCardQuery|438" }, { a: "member createResponse|584", b: "member createResponse|440" }, { a: "member createResponse|584", b: "method createResponse|442" }, { a: "member createResponse|584", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|584", b: "member createResponse|479" }, { a: "member createResponse|584", b: "method createResponse|481" }, { a: "member createResponse|584", b: "class GreetingCategoryList|483" }, { a: "member createResponse|584", b: "member createResponse|484" }, { a: "member createResponse|584", b: "method createResponse|486" }, { a: "member createResponse|584", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|584", b: "member createResponse|490" }, { a: "member createResponse|584", b: "method createResponse|492" }, { a: "member createResponse|584", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|584", b: "member createResponse|504" }, { a: "member createResponse|584", b: "method createResponse|506" }, { a: "member createResponse|584", b: "class ImageCreateCommand|508" }, { a: "member createResponse|584", b: "member createResponse|511" }, { a: "member createResponse|584", b: "method createResponse|513" }, { a: "member createResponse|584", b: "class LayoutQuery|529" }, { a: "member createResponse|584", b: "member createResponse|531" }, { a: "member createResponse|584", b: "method createResponse|533" }, { a: "member createResponse|584", b: "class LocalizationQuery|578" }, { a: "member createResponse|584", b: "member createResponse|579" }, { a: "member createResponse|584", b: "method createResponse|581" }, { a: "member createResponse|584", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|584", b: "member createResponse|590" }, { a: "member createResponse|584", b: "method createResponse|592" }, { a: "member createResponse|584", b: "class LocationQuery|594" }, { a: "member createResponse|584", b: "member createResponse|595" }, { a: "member createResponse|584", b: "method createResponse|597" }, { a: "member createResponse|584", b: "class OrderCreateCommand|599" }, { a: "member createResponse|584", b: "member createResponse|602" }, { a: "member createResponse|584", b: "method createResponse|604" }, { a: "member createResponse|584", b: "class ProductQuery|606" }, { a: "member createResponse|584", b: "member createResponse|608" }, { a: "member createResponse|584", b: "method createResponse|610" }, { a: "member createResponse|584", b: "class VersionQuery|644" }, { a: "member createResponse|584", b: "member createResponse|646" }, { a: "member createResponse|584", b: "method createResponse|648" }, { a: "member createResponse|584", b: "class Authenticate|650" }, { a: "member createResponse|584", b: "member createResponse|671" }, { a: "member createResponse|584", b: "method createResponse|673" }, { a: "member createResponse|584", b: "class LocalizationNotCachedQuery|583" }, { a: "member getTypeName|585", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|585", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|586", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|586", b: "interface IReturn|675" }, { a: "method createResponse|586", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|586", b: "member createResponse|402" }, { a: "method createResponse|586", b: "method createResponse|404" }, { a: "method createResponse|586", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|586", b: "member createResponse|409" }, { a: "method createResponse|586", b: "method createResponse|411" }, { a: "method createResponse|586", b: "class FaqQuery|413" }, { a: "method createResponse|586", b: "member createResponse|414" }, { a: "method createResponse|586", b: "method createResponse|416" }, { a: "method createResponse|586", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|586", b: "member createResponse|421" }, { a: "method createResponse|586", b: "method createResponse|423" }, { a: "method createResponse|586", b: "class FontFileGetQuery|432" }, { a: "method createResponse|586", b: "member createResponse|434" }, { a: "method createResponse|586", b: "method createResponse|436" }, { a: "method createResponse|586", b: "class GiftCardQuery|438" }, { a: "method createResponse|586", b: "member createResponse|440" }, { a: "method createResponse|586", b: "method createResponse|442" }, { a: "method createResponse|586", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|586", b: "member createResponse|479" }, { a: "method createResponse|586", b: "method createResponse|481" }, { a: "method createResponse|586", b: "class GreetingCategoryList|483" }, { a: "method createResponse|586", b: "member createResponse|484" }, { a: "method createResponse|586", b: "method createResponse|486" }, { a: "method createResponse|586", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|586", b: "member createResponse|490" }, { a: "method createResponse|586", b: "method createResponse|492" }, { a: "method createResponse|586", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|586", b: "member createResponse|504" }, { a: "method createResponse|586", b: "method createResponse|506" }, { a: "method createResponse|586", b: "class ImageCreateCommand|508" }, { a: "method createResponse|586", b: "member createResponse|511" }, { a: "method createResponse|586", b: "method createResponse|513" }, { a: "method createResponse|586", b: "class LayoutQuery|529" }, { a: "method createResponse|586", b: "member createResponse|531" }, { a: "method createResponse|586", b: "method createResponse|533" }, { a: "method createResponse|586", b: "class LocalizationQuery|578" }, { a: "method createResponse|586", b: "member createResponse|579" }, { a: "method createResponse|586", b: "method createResponse|581" }, { a: "method createResponse|586", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|586", b: "member createResponse|590" }, { a: "method createResponse|586", b: "method createResponse|592" }, { a: "method createResponse|586", b: "class LocationQuery|594" }, { a: "method createResponse|586", b: "member createResponse|595" }, { a: "method createResponse|586", b: "method createResponse|597" }, { a: "method createResponse|586", b: "class OrderCreateCommand|599" }, { a: "method createResponse|586", b: "member createResponse|602" }, { a: "method createResponse|586", b: "method createResponse|604" }, { a: "method createResponse|586", b: "class ProductQuery|606" }, { a: "method createResponse|586", b: "member createResponse|608" }, { a: "method createResponse|586", b: "method createResponse|610" }, { a: "method createResponse|586", b: "class VersionQuery|644" }, { a: "method createResponse|586", b: "member createResponse|646" }, { a: "method createResponse|586", b: "method createResponse|648" }, { a: "method createResponse|586", b: "class Authenticate|650" }, { a: "method createResponse|586", b: "member createResponse|671" }, { a: "method createResponse|586", b: "method createResponse|673" }, { a: "method createResponse|586", b: "class LocalizationNotCachedQuery|583" }, { a: "method getTypeName|587", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|587", b: "class LocalizationNotCachedQuery|583" }, { a: "class ClearLocalizationCommand|588", b: "src\\api\\Rest\\dtos.ts" }, { a: "member key|589", b: "src\\api\\Rest\\dtos.ts" }, { a: "member key|589", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|590", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|590", b: "interface IReturn|675" }, { a: "member createResponse|590", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|590", b: "member createResponse|402" }, { a: "member createResponse|590", b: "method createResponse|404" }, { a: "member createResponse|590", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|590", b: "member createResponse|409" }, { a: "member createResponse|590", b: "method createResponse|411" }, { a: "member createResponse|590", b: "class FaqQuery|413" }, { a: "member createResponse|590", b: "member createResponse|414" }, { a: "member createResponse|590", b: "method createResponse|416" }, { a: "member createResponse|590", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|590", b: "member createResponse|421" }, { a: "member createResponse|590", b: "method createResponse|423" }, { a: "member createResponse|590", b: "class FontFileGetQuery|432" }, { a: "member createResponse|590", b: "member createResponse|434" }, { a: "member createResponse|590", b: "method createResponse|436" }, { a: "member createResponse|590", b: "class GiftCardQuery|438" }, { a: "member createResponse|590", b: "member createResponse|440" }, { a: "member createResponse|590", b: "method createResponse|442" }, { a: "member createResponse|590", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|590", b: "member createResponse|479" }, { a: "member createResponse|590", b: "method createResponse|481" }, { a: "member createResponse|590", b: "class GreetingCategoryList|483" }, { a: "member createResponse|590", b: "member createResponse|484" }, { a: "member createResponse|590", b: "method createResponse|486" }, { a: "member createResponse|590", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|590", b: "member createResponse|490" }, { a: "member createResponse|590", b: "method createResponse|492" }, { a: "member createResponse|590", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|590", b: "member createResponse|504" }, { a: "member createResponse|590", b: "method createResponse|506" }, { a: "member createResponse|590", b: "class ImageCreateCommand|508" }, { a: "member createResponse|590", b: "member createResponse|511" }, { a: "member createResponse|590", b: "method createResponse|513" }, { a: "member createResponse|590", b: "class LayoutQuery|529" }, { a: "member createResponse|590", b: "member createResponse|531" }, { a: "member createResponse|590", b: "method createResponse|533" }, { a: "member createResponse|590", b: "class LocalizationQuery|578" }, { a: "member createResponse|590", b: "member createResponse|579" }, { a: "member createResponse|590", b: "method createResponse|581" }, { a: "member createResponse|590", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|590", b: "member createResponse|584" }, { a: "member createResponse|590", b: "method createResponse|586" }, { a: "member createResponse|590", b: "class LocationQuery|594" }, { a: "member createResponse|590", b: "member createResponse|595" }, { a: "member createResponse|590", b: "method createResponse|597" }, { a: "member createResponse|590", b: "class OrderCreateCommand|599" }, { a: "member createResponse|590", b: "member createResponse|602" }, { a: "member createResponse|590", b: "method createResponse|604" }, { a: "member createResponse|590", b: "class ProductQuery|606" }, { a: "member createResponse|590", b: "member createResponse|608" }, { a: "member createResponse|590", b: "method createResponse|610" }, { a: "member createResponse|590", b: "class VersionQuery|644" }, { a: "member createResponse|590", b: "member createResponse|646" }, { a: "member createResponse|590", b: "method createResponse|648" }, { a: "member createResponse|590", b: "class Authenticate|650" }, { a: "member createResponse|590", b: "member createResponse|671" }, { a: "member createResponse|590", b: "method createResponse|673" }, { a: "member createResponse|590", b: "class ClearLocalizationCommand|588" }, { a: "member getTypeName|591", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|591", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|592", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|592", b: "interface IReturn|675" }, { a: "method createResponse|592", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|592", b: "member createResponse|402" }, { a: "method createResponse|592", b: "method createResponse|404" }, { a: "method createResponse|592", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|592", b: "member createResponse|409" }, { a: "method createResponse|592", b: "method createResponse|411" }, { a: "method createResponse|592", b: "class FaqQuery|413" }, { a: "method createResponse|592", b: "member createResponse|414" }, { a: "method createResponse|592", b: "method createResponse|416" }, { a: "method createResponse|592", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|592", b: "member createResponse|421" }, { a: "method createResponse|592", b: "method createResponse|423" }, { a: "method createResponse|592", b: "class FontFileGetQuery|432" }, { a: "method createResponse|592", b: "member createResponse|434" }, { a: "method createResponse|592", b: "method createResponse|436" }, { a: "method createResponse|592", b: "class GiftCardQuery|438" }, { a: "method createResponse|592", b: "member createResponse|440" }, { a: "method createResponse|592", b: "method createResponse|442" }, { a: "method createResponse|592", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|592", b: "member createResponse|479" }, { a: "method createResponse|592", b: "method createResponse|481" }, { a: "method createResponse|592", b: "class GreetingCategoryList|483" }, { a: "method createResponse|592", b: "member createResponse|484" }, { a: "method createResponse|592", b: "method createResponse|486" }, { a: "method createResponse|592", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|592", b: "member createResponse|490" }, { a: "method createResponse|592", b: "method createResponse|492" }, { a: "method createResponse|592", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|592", b: "member createResponse|504" }, { a: "method createResponse|592", b: "method createResponse|506" }, { a: "method createResponse|592", b: "class ImageCreateCommand|508" }, { a: "method createResponse|592", b: "member createResponse|511" }, { a: "method createResponse|592", b: "method createResponse|513" }, { a: "method createResponse|592", b: "class LayoutQuery|529" }, { a: "method createResponse|592", b: "member createResponse|531" }, { a: "method createResponse|592", b: "method createResponse|533" }, { a: "method createResponse|592", b: "class LocalizationQuery|578" }, { a: "method createResponse|592", b: "member createResponse|579" }, { a: "method createResponse|592", b: "method createResponse|581" }, { a: "method createResponse|592", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|592", b: "member createResponse|584" }, { a: "method createResponse|592", b: "method createResponse|586" }, { a: "method createResponse|592", b: "class LocationQuery|594" }, { a: "method createResponse|592", b: "member createResponse|595" }, { a: "method createResponse|592", b: "method createResponse|597" }, { a: "method createResponse|592", b: "class OrderCreateCommand|599" }, { a: "method createResponse|592", b: "member createResponse|602" }, { a: "method createResponse|592", b: "method createResponse|604" }, { a: "method createResponse|592", b: "class ProductQuery|606" }, { a: "method createResponse|592", b: "member createResponse|608" }, { a: "method createResponse|592", b: "method createResponse|610" }, { a: "method createResponse|592", b: "class VersionQuery|644" }, { a: "method createResponse|592", b: "member createResponse|646" }, { a: "method createResponse|592", b: "method createResponse|648" }, { a: "method createResponse|592", b: "class Authenticate|650" }, { a: "method createResponse|592", b: "member createResponse|671" }, { a: "method createResponse|592", b: "method createResponse|673" }, { a: "method createResponse|592", b: "class ClearLocalizationCommand|588" }, { a: "method getTypeName|593", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|593", b: "class ClearLocalizationCommand|588" }, { a: "class LocationQuery|594", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|595", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|595", b: "interface IReturn|675" }, { a: "member createResponse|595", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|595", b: "member createResponse|402" }, { a: "member createResponse|595", b: "method createResponse|404" }, { a: "member createResponse|595", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|595", b: "member createResponse|409" }, { a: "member createResponse|595", b: "method createResponse|411" }, { a: "member createResponse|595", b: "class FaqQuery|413" }, { a: "member createResponse|595", b: "member createResponse|414" }, { a: "member createResponse|595", b: "method createResponse|416" }, { a: "member createResponse|595", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|595", b: "member createResponse|421" }, { a: "member createResponse|595", b: "method createResponse|423" }, { a: "member createResponse|595", b: "class FontFileGetQuery|432" }, { a: "member createResponse|595", b: "member createResponse|434" }, { a: "member createResponse|595", b: "method createResponse|436" }, { a: "member createResponse|595", b: "class GiftCardQuery|438" }, { a: "member createResponse|595", b: "member createResponse|440" }, { a: "member createResponse|595", b: "method createResponse|442" }, { a: "member createResponse|595", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|595", b: "member createResponse|479" }, { a: "member createResponse|595", b: "method createResponse|481" }, { a: "member createResponse|595", b: "class GreetingCategoryList|483" }, { a: "member createResponse|595", b: "member createResponse|484" }, { a: "member createResponse|595", b: "method createResponse|486" }, { a: "member createResponse|595", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|595", b: "member createResponse|490" }, { a: "member createResponse|595", b: "method createResponse|492" }, { a: "member createResponse|595", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|595", b: "member createResponse|504" }, { a: "member createResponse|595", b: "method createResponse|506" }, { a: "member createResponse|595", b: "class ImageCreateCommand|508" }, { a: "member createResponse|595", b: "member createResponse|511" }, { a: "member createResponse|595", b: "method createResponse|513" }, { a: "member createResponse|595", b: "class LayoutQuery|529" }, { a: "member createResponse|595", b: "member createResponse|531" }, { a: "member createResponse|595", b: "method createResponse|533" }, { a: "member createResponse|595", b: "class LocalizationQuery|578" }, { a: "member createResponse|595", b: "member createResponse|579" }, { a: "member createResponse|595", b: "method createResponse|581" }, { a: "member createResponse|595", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|595", b: "member createResponse|584" }, { a: "member createResponse|595", b: "method createResponse|586" }, { a: "member createResponse|595", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|595", b: "member createResponse|590" }, { a: "member createResponse|595", b: "method createResponse|592" }, { a: "member createResponse|595", b: "class OrderCreateCommand|599" }, { a: "member createResponse|595", b: "member createResponse|602" }, { a: "member createResponse|595", b: "method createResponse|604" }, { a: "member createResponse|595", b: "class ProductQuery|606" }, { a: "member createResponse|595", b: "member createResponse|608" }, { a: "member createResponse|595", b: "method createResponse|610" }, { a: "member createResponse|595", b: "class VersionQuery|644" }, { a: "member createResponse|595", b: "member createResponse|646" }, { a: "member createResponse|595", b: "method createResponse|648" }, { a: "member createResponse|595", b: "class Authenticate|650" }, { a: "member createResponse|595", b: "member createResponse|671" }, { a: "member createResponse|595", b: "method createResponse|673" }, { a: "member createResponse|595", b: "class LocationQuery|594" }, { a: "member getTypeName|596", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|596", b: "class LocationQuery|594" }, { a: "method createResponse|597", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|597", b: "interface IReturn|675" }, { a: "method createResponse|597", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|597", b: "member createResponse|402" }, { a: "method createResponse|597", b: "method createResponse|404" }, { a: "method createResponse|597", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|597", b: "member createResponse|409" }, { a: "method createResponse|597", b: "method createResponse|411" }, { a: "method createResponse|597", b: "class FaqQuery|413" }, { a: "method createResponse|597", b: "member createResponse|414" }, { a: "method createResponse|597", b: "method createResponse|416" }, { a: "method createResponse|597", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|597", b: "member createResponse|421" }, { a: "method createResponse|597", b: "method createResponse|423" }, { a: "method createResponse|597", b: "class FontFileGetQuery|432" }, { a: "method createResponse|597", b: "member createResponse|434" }, { a: "method createResponse|597", b: "method createResponse|436" }, { a: "method createResponse|597", b: "class GiftCardQuery|438" }, { a: "method createResponse|597", b: "member createResponse|440" }, { a: "method createResponse|597", b: "method createResponse|442" }, { a: "method createResponse|597", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|597", b: "member createResponse|479" }, { a: "method createResponse|597", b: "method createResponse|481" }, { a: "method createResponse|597", b: "class GreetingCategoryList|483" }, { a: "method createResponse|597", b: "member createResponse|484" }, { a: "method createResponse|597", b: "method createResponse|486" }, { a: "method createResponse|597", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|597", b: "member createResponse|490" }, { a: "method createResponse|597", b: "method createResponse|492" }, { a: "method createResponse|597", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|597", b: "member createResponse|504" }, { a: "method createResponse|597", b: "method createResponse|506" }, { a: "method createResponse|597", b: "class ImageCreateCommand|508" }, { a: "method createResponse|597", b: "member createResponse|511" }, { a: "method createResponse|597", b: "method createResponse|513" }, { a: "method createResponse|597", b: "class LayoutQuery|529" }, { a: "method createResponse|597", b: "member createResponse|531" }, { a: "method createResponse|597", b: "method createResponse|533" }, { a: "method createResponse|597", b: "class LocalizationQuery|578" }, { a: "method createResponse|597", b: "member createResponse|579" }, { a: "method createResponse|597", b: "method createResponse|581" }, { a: "method createResponse|597", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|597", b: "member createResponse|584" }, { a: "method createResponse|597", b: "method createResponse|586" }, { a: "method createResponse|597", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|597", b: "member createResponse|590" }, { a: "method createResponse|597", b: "method createResponse|592" }, { a: "method createResponse|597", b: "class OrderCreateCommand|599" }, { a: "method createResponse|597", b: "member createResponse|602" }, { a: "method createResponse|597", b: "method createResponse|604" }, { a: "method createResponse|597", b: "class ProductQuery|606" }, { a: "method createResponse|597", b: "member createResponse|608" }, { a: "method createResponse|597", b: "method createResponse|610" }, { a: "method createResponse|597", b: "class VersionQuery|644" }, { a: "method createResponse|597", b: "member createResponse|646" }, { a: "method createResponse|597", b: "method createResponse|648" }, { a: "method createResponse|597", b: "class Authenticate|650" }, { a: "method createResponse|597", b: "member createResponse|671" }, { a: "method createResponse|597", b: "method createResponse|673" }, { a: "method createResponse|597", b: "class LocationQuery|594" }, { a: "method getTypeName|598", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|598", b: "class LocationQuery|594" }, { a: "class OrderCreateCommand|599", b: "src\\api\\Rest\\dtos.ts" }, { a: "member data|600", b: "src\\api\\Rest\\dtos.ts" }, { a: "member data|600", b: "class OrderCreateCommand|599" }, { a: "member language|601", b: "src\\api\\Rest\\dtos.ts" }, { a: "member language|601", b: "class OrderCreateCommand|599" }, { a: "member createResponse|602", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|602", b: "interface IReturn|675" }, { a: "member createResponse|602", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|602", b: "member createResponse|402" }, { a: "member createResponse|602", b: "method createResponse|404" }, { a: "member createResponse|602", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|602", b: "member createResponse|409" }, { a: "member createResponse|602", b: "method createResponse|411" }, { a: "member createResponse|602", b: "class FaqQuery|413" }, { a: "member createResponse|602", b: "member createResponse|414" }, { a: "member createResponse|602", b: "method createResponse|416" }, { a: "member createResponse|602", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|602", b: "member createResponse|421" }, { a: "member createResponse|602", b: "method createResponse|423" }, { a: "member createResponse|602", b: "class FontFileGetQuery|432" }, { a: "member createResponse|602", b: "member createResponse|434" }, { a: "member createResponse|602", b: "method createResponse|436" }, { a: "member createResponse|602", b: "class GiftCardQuery|438" }, { a: "member createResponse|602", b: "member createResponse|440" }, { a: "member createResponse|602", b: "method createResponse|442" }, { a: "member createResponse|602", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|602", b: "member createResponse|479" }, { a: "member createResponse|602", b: "method createResponse|481" }, { a: "member createResponse|602", b: "class GreetingCategoryList|483" }, { a: "member createResponse|602", b: "member createResponse|484" }, { a: "member createResponse|602", b: "method createResponse|486" }, { a: "member createResponse|602", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|602", b: "member createResponse|490" }, { a: "member createResponse|602", b: "method createResponse|492" }, { a: "member createResponse|602", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|602", b: "member createResponse|504" }, { a: "member createResponse|602", b: "method createResponse|506" }, { a: "member createResponse|602", b: "class ImageCreateCommand|508" }, { a: "member createResponse|602", b: "member createResponse|511" }, { a: "member createResponse|602", b: "method createResponse|513" }, { a: "member createResponse|602", b: "class LayoutQuery|529" }, { a: "member createResponse|602", b: "member createResponse|531" }, { a: "member createResponse|602", b: "method createResponse|533" }, { a: "member createResponse|602", b: "class LocalizationQuery|578" }, { a: "member createResponse|602", b: "member createResponse|579" }, { a: "member createResponse|602", b: "method createResponse|581" }, { a: "member createResponse|602", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|602", b: "member createResponse|584" }, { a: "member createResponse|602", b: "method createResponse|586" }, { a: "member createResponse|602", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|602", b: "member createResponse|590" }, { a: "member createResponse|602", b: "method createResponse|592" }, { a: "member createResponse|602", b: "class LocationQuery|594" }, { a: "member createResponse|602", b: "member createResponse|595" }, { a: "member createResponse|602", b: "method createResponse|597" }, { a: "member createResponse|602", b: "class ProductQuery|606" }, { a: "member createResponse|602", b: "member createResponse|608" }, { a: "member createResponse|602", b: "method createResponse|610" }, { a: "member createResponse|602", b: "class VersionQuery|644" }, { a: "member createResponse|602", b: "member createResponse|646" }, { a: "member createResponse|602", b: "method createResponse|648" }, { a: "member createResponse|602", b: "class Authenticate|650" }, { a: "member createResponse|602", b: "member createResponse|671" }, { a: "member createResponse|602", b: "method createResponse|673" }, { a: "member createResponse|602", b: "class OrderCreateCommand|599" }, { a: "member getTypeName|603", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|603", b: "class OrderCreateCommand|599" }, { a: "method createResponse|604", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|604", b: "interface IReturn|675" }, { a: "method createResponse|604", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|604", b: "member createResponse|402" }, { a: "method createResponse|604", b: "method createResponse|404" }, { a: "method createResponse|604", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|604", b: "member createResponse|409" }, { a: "method createResponse|604", b: "method createResponse|411" }, { a: "method createResponse|604", b: "class FaqQuery|413" }, { a: "method createResponse|604", b: "member createResponse|414" }, { a: "method createResponse|604", b: "method createResponse|416" }, { a: "method createResponse|604", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|604", b: "member createResponse|421" }, { a: "method createResponse|604", b: "method createResponse|423" }, { a: "method createResponse|604", b: "class FontFileGetQuery|432" }, { a: "method createResponse|604", b: "member createResponse|434" }, { a: "method createResponse|604", b: "method createResponse|436" }, { a: "method createResponse|604", b: "class GiftCardQuery|438" }, { a: "method createResponse|604", b: "member createResponse|440" }, { a: "method createResponse|604", b: "method createResponse|442" }, { a: "method createResponse|604", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|604", b: "member createResponse|479" }, { a: "method createResponse|604", b: "method createResponse|481" }, { a: "method createResponse|604", b: "class GreetingCategoryList|483" }, { a: "method createResponse|604", b: "member createResponse|484" }, { a: "method createResponse|604", b: "method createResponse|486" }, { a: "method createResponse|604", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|604", b: "member createResponse|490" }, { a: "method createResponse|604", b: "method createResponse|492" }, { a: "method createResponse|604", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|604", b: "member createResponse|504" }, { a: "method createResponse|604", b: "method createResponse|506" }, { a: "method createResponse|604", b: "class ImageCreateCommand|508" }, { a: "method createResponse|604", b: "member createResponse|511" }, { a: "method createResponse|604", b: "method createResponse|513" }, { a: "method createResponse|604", b: "class LayoutQuery|529" }, { a: "method createResponse|604", b: "member createResponse|531" }, { a: "method createResponse|604", b: "method createResponse|533" }, { a: "method createResponse|604", b: "class LocalizationQuery|578" }, { a: "method createResponse|604", b: "member createResponse|579" }, { a: "method createResponse|604", b: "method createResponse|581" }, { a: "method createResponse|604", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|604", b: "member createResponse|584" }, { a: "method createResponse|604", b: "method createResponse|586" }, { a: "method createResponse|604", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|604", b: "member createResponse|590" }, { a: "method createResponse|604", b: "method createResponse|592" }, { a: "method createResponse|604", b: "class LocationQuery|594" }, { a: "method createResponse|604", b: "member createResponse|595" }, { a: "method createResponse|604", b: "method createResponse|597" }, { a: "method createResponse|604", b: "class ProductQuery|606" }, { a: "method createResponse|604", b: "member createResponse|608" }, { a: "method createResponse|604", b: "method createResponse|610" }, { a: "method createResponse|604", b: "class VersionQuery|644" }, { a: "method createResponse|604", b: "member createResponse|646" }, { a: "method createResponse|604", b: "method createResponse|648" }, { a: "method createResponse|604", b: "class Authenticate|650" }, { a: "method createResponse|604", b: "member createResponse|671" }, { a: "method createResponse|604", b: "method createResponse|673" }, { a: "method createResponse|604", b: "class OrderCreateCommand|599" }, { a: "method getTypeName|605", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|605", b: "class OrderCreateCommand|599" }, { a: "class ProductQuery|606", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|607", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|607", b: "class ProductQuery|606" }, { a: "member createResponse|608", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|608", b: "interface IReturn|675" }, { a: "member createResponse|608", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|608", b: "member createResponse|402" }, { a: "member createResponse|608", b: "method createResponse|404" }, { a: "member createResponse|608", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|608", b: "member createResponse|409" }, { a: "member createResponse|608", b: "method createResponse|411" }, { a: "member createResponse|608", b: "class FaqQuery|413" }, { a: "member createResponse|608", b: "member createResponse|414" }, { a: "member createResponse|608", b: "method createResponse|416" }, { a: "member createResponse|608", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|608", b: "member createResponse|421" }, { a: "member createResponse|608", b: "method createResponse|423" }, { a: "member createResponse|608", b: "class FontFileGetQuery|432" }, { a: "member createResponse|608", b: "member createResponse|434" }, { a: "member createResponse|608", b: "method createResponse|436" }, { a: "member createResponse|608", b: "class GiftCardQuery|438" }, { a: "member createResponse|608", b: "member createResponse|440" }, { a: "member createResponse|608", b: "method createResponse|442" }, { a: "member createResponse|608", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|608", b: "member createResponse|479" }, { a: "member createResponse|608", b: "method createResponse|481" }, { a: "member createResponse|608", b: "class GreetingCategoryList|483" }, { a: "member createResponse|608", b: "member createResponse|484" }, { a: "member createResponse|608", b: "method createResponse|486" }, { a: "member createResponse|608", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|608", b: "member createResponse|490" }, { a: "member createResponse|608", b: "method createResponse|492" }, { a: "member createResponse|608", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|608", b: "member createResponse|504" }, { a: "member createResponse|608", b: "method createResponse|506" }, { a: "member createResponse|608", b: "class ImageCreateCommand|508" }, { a: "member createResponse|608", b: "member createResponse|511" }, { a: "member createResponse|608", b: "method createResponse|513" }, { a: "member createResponse|608", b: "class LayoutQuery|529" }, { a: "member createResponse|608", b: "member createResponse|531" }, { a: "member createResponse|608", b: "method createResponse|533" }, { a: "member createResponse|608", b: "class LocalizationQuery|578" }, { a: "member createResponse|608", b: "member createResponse|579" }, { a: "member createResponse|608", b: "method createResponse|581" }, { a: "member createResponse|608", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|608", b: "member createResponse|584" }, { a: "member createResponse|608", b: "method createResponse|586" }, { a: "member createResponse|608", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|608", b: "member createResponse|590" }, { a: "member createResponse|608", b: "method createResponse|592" }, { a: "member createResponse|608", b: "class LocationQuery|594" }, { a: "member createResponse|608", b: "member createResponse|595" }, { a: "member createResponse|608", b: "method createResponse|597" }, { a: "member createResponse|608", b: "class OrderCreateCommand|599" }, { a: "member createResponse|608", b: "member createResponse|602" }, { a: "member createResponse|608", b: "method createResponse|604" }, { a: "member createResponse|608", b: "class VersionQuery|644" }, { a: "member createResponse|608", b: "member createResponse|646" }, { a: "member createResponse|608", b: "method createResponse|648" }, { a: "member createResponse|608", b: "class Authenticate|650" }, { a: "member createResponse|608", b: "member createResponse|671" }, { a: "member createResponse|608", b: "method createResponse|673" }, { a: "member createResponse|608", b: "class ProductQuery|606" }, { a: "member getTypeName|609", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|609", b: "class ProductQuery|606" }, { a: "method createResponse|610", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|610", b: "interface IReturn|675" }, { a: "method createResponse|610", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|610", b: "member createResponse|402" }, { a: "method createResponse|610", b: "method createResponse|404" }, { a: "method createResponse|610", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|610", b: "member createResponse|409" }, { a: "method createResponse|610", b: "method createResponse|411" }, { a: "method createResponse|610", b: "class FaqQuery|413" }, { a: "method createResponse|610", b: "member createResponse|414" }, { a: "method createResponse|610", b: "method createResponse|416" }, { a: "method createResponse|610", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|610", b: "member createResponse|421" }, { a: "method createResponse|610", b: "method createResponse|423" }, { a: "method createResponse|610", b: "class FontFileGetQuery|432" }, { a: "method createResponse|610", b: "member createResponse|434" }, { a: "method createResponse|610", b: "method createResponse|436" }, { a: "method createResponse|610", b: "class GiftCardQuery|438" }, { a: "method createResponse|610", b: "member createResponse|440" }, { a: "method createResponse|610", b: "method createResponse|442" }, { a: "method createResponse|610", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|610", b: "member createResponse|479" }, { a: "method createResponse|610", b: "method createResponse|481" }, { a: "method createResponse|610", b: "class GreetingCategoryList|483" }, { a: "method createResponse|610", b: "member createResponse|484" }, { a: "method createResponse|610", b: "method createResponse|486" }, { a: "method createResponse|610", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|610", b: "member createResponse|490" }, { a: "method createResponse|610", b: "method createResponse|492" }, { a: "method createResponse|610", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|610", b: "member createResponse|504" }, { a: "method createResponse|610", b: "method createResponse|506" }, { a: "method createResponse|610", b: "class ImageCreateCommand|508" }, { a: "method createResponse|610", b: "member createResponse|511" }, { a: "method createResponse|610", b: "method createResponse|513" }, { a: "method createResponse|610", b: "class LayoutQuery|529" }, { a: "method createResponse|610", b: "member createResponse|531" }, { a: "method createResponse|610", b: "method createResponse|533" }, { a: "method createResponse|610", b: "class LocalizationQuery|578" }, { a: "method createResponse|610", b: "member createResponse|579" }, { a: "method createResponse|610", b: "method createResponse|581" }, { a: "method createResponse|610", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|610", b: "member createResponse|584" }, { a: "method createResponse|610", b: "method createResponse|586" }, { a: "method createResponse|610", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|610", b: "member createResponse|590" }, { a: "method createResponse|610", b: "method createResponse|592" }, { a: "method createResponse|610", b: "class LocationQuery|594" }, { a: "method createResponse|610", b: "member createResponse|595" }, { a: "method createResponse|610", b: "method createResponse|597" }, { a: "method createResponse|610", b: "class OrderCreateCommand|599" }, { a: "method createResponse|610", b: "member createResponse|602" }, { a: "method createResponse|610", b: "method createResponse|604" }, { a: "method createResponse|610", b: "class VersionQuery|644" }, { a: "method createResponse|610", b: "member createResponse|646" }, { a: "method createResponse|610", b: "method createResponse|648" }, { a: "method createResponse|610", b: "class Authenticate|650" }, { a: "method createResponse|610", b: "member createResponse|671" }, { a: "method createResponse|610", b: "method createResponse|673" }, { a: "method createResponse|610", b: "class ProductQuery|606" }, { a: "method getTypeName|611", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|611", b: "class ProductQuery|606" }, { a: "class ProductCreateCommand|612", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|613", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|613", b: "class ProductCreateCommand|612" }, { a: "member productEngineId|614", b: "src\\api\\Rest\\dtos.ts" }, { a: "member productEngineId|614", b: "class ProductCreateCommand|612" }, { a: "member isEmailDelivery|615", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|615", b: "class ProductCreateCommand|612" }, { a: "member isSmsDelivery|616", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|616", b: "class ProductCreateCommand|612" }, { a: "member isPostDelivery|617", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|617", b: "class ProductCreateCommand|612" }, { a: "member isMobilePayEnabled|618", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isMobilePayEnabled|618", b: "class ProductCreateCommand|612" }, { a: "member mobilePayLink|619", b: "src\\api\\Rest\\dtos.ts" }, { a: "member mobilePayLink|619", b: "class ProductCreateCommand|612" }, { a: "member emailImage|620", b: "src\\api\\Rest\\dtos.ts" }, { a: "member emailImage|620", b: "class ProductCreateCommand|612" }, { a: "member smsImage|621", b: "src\\api\\Rest\\dtos.ts" }, { a: "member smsImage|621", b: "class ProductCreateCommand|612" }, { a: "member postImage|622", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postImage|622", b: "class ProductCreateCommand|612" }, { a: "member values|623", b: "src\\api\\Rest\\dtos.ts" }, { a: "member values|623", b: "class ProductCreateCommand|612" }, { a: "member createResponse|624", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|624", b: "interface IReturnVoid|676" }, { a: "member createResponse|624", b: "class ContentPatchCommand|378" }, { a: "member createResponse|624", b: "member createResponse|381" }, { a: "member createResponse|624", b: "method createResponse|383" }, { a: "member createResponse|624", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|624", b: "member createResponse|388" }, { a: "member createResponse|624", b: "method createResponse|390" }, { a: "member createResponse|624", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|624", b: "member createResponse|395" }, { a: "member createResponse|624", b: "method createResponse|397" }, { a: "member createResponse|624", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|624", b: "member createResponse|428" }, { a: "member createResponse|624", b: "method createResponse|430" }, { a: "member createResponse|624", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|624", b: "member createResponse|457" }, { a: "member createResponse|624", b: "method createResponse|459" }, { a: "member createResponse|624", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|624", b: "member createResponse|473" }, { a: "member createResponse|624", b: "method createResponse|475" }, { a: "member createResponse|624", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|624", b: "member createResponse|496" }, { a: "member createResponse|624", b: "method createResponse|498" }, { a: "member createResponse|624", b: "class ImagePutCommand|515" }, { a: "member createResponse|624", b: "member createResponse|518" }, { a: "member createResponse|624", b: "method createResponse|520" }, { a: "member createResponse|624", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|624", b: "member createResponse|525" }, { a: "member createResponse|624", b: "method createResponse|527" }, { a: "member createResponse|624", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|624", b: "member createResponse|537" }, { a: "member createResponse|624", b: "method createResponse|539" }, { a: "member createResponse|624", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|624", b: "member createResponse|544" }, { a: "member createResponse|624", b: "method createResponse|546" }, { a: "member createResponse|624", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|624", b: "member createResponse|551" }, { a: "member createResponse|624", b: "method createResponse|553" }, { a: "member createResponse|624", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|624", b: "member createResponse|574" }, { a: "member createResponse|624", b: "method createResponse|576" }, { a: "member createResponse|624", b: "class ProductPutCommand|628" }, { a: "member createResponse|624", b: "member createResponse|640" }, { a: "member createResponse|624", b: "method createResponse|642" }, { a: "member createResponse|624", b: "class ProductCreateCommand|612" }, { a: "member getTypeName|625", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|625", b: "class ProductCreateCommand|612" }, { a: "method createResponse|626", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|626", b: "interface IReturnVoid|676" }, { a: "method createResponse|626", b: "class ContentPatchCommand|378" }, { a: "method createResponse|626", b: "member createResponse|381" }, { a: "method createResponse|626", b: "method createResponse|383" }, { a: "method createResponse|626", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|626", b: "member createResponse|388" }, { a: "method createResponse|626", b: "method createResponse|390" }, { a: "method createResponse|626", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|626", b: "member createResponse|395" }, { a: "method createResponse|626", b: "method createResponse|397" }, { a: "method createResponse|626", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|626", b: "member createResponse|428" }, { a: "method createResponse|626", b: "method createResponse|430" }, { a: "method createResponse|626", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|626", b: "member createResponse|457" }, { a: "method createResponse|626", b: "method createResponse|459" }, { a: "method createResponse|626", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|626", b: "member createResponse|473" }, { a: "method createResponse|626", b: "method createResponse|475" }, { a: "method createResponse|626", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|626", b: "member createResponse|496" }, { a: "method createResponse|626", b: "method createResponse|498" }, { a: "method createResponse|626", b: "class ImagePutCommand|515" }, { a: "method createResponse|626", b: "member createResponse|518" }, { a: "method createResponse|626", b: "method createResponse|520" }, { a: "method createResponse|626", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|626", b: "member createResponse|525" }, { a: "method createResponse|626", b: "method createResponse|527" }, { a: "method createResponse|626", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|626", b: "member createResponse|537" }, { a: "method createResponse|626", b: "method createResponse|539" }, { a: "method createResponse|626", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|626", b: "member createResponse|544" }, { a: "method createResponse|626", b: "method createResponse|546" }, { a: "method createResponse|626", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|626", b: "member createResponse|551" }, { a: "method createResponse|626", b: "method createResponse|553" }, { a: "method createResponse|626", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|626", b: "member createResponse|574" }, { a: "method createResponse|626", b: "method createResponse|576" }, { a: "method createResponse|626", b: "class ProductPutCommand|628" }, { a: "method createResponse|626", b: "member createResponse|640" }, { a: "method createResponse|626", b: "method createResponse|642" }, { a: "method createResponse|626", b: "class ProductCreateCommand|612" }, { a: "method getTypeName|627", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|627", b: "class ProductCreateCommand|612" }, { a: "class ProductPutCommand|628", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|629", b: "src\\api\\Rest\\dtos.ts" }, { a: "member engineId|629", b: "class ProductPutCommand|628" }, { a: "member productEngineId|630", b: "src\\api\\Rest\\dtos.ts" }, { a: "member productEngineId|630", b: "class ProductPutCommand|628" }, { a: "member isEmailDelivery|631", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isEmailDelivery|631", b: "class ProductPutCommand|628" }, { a: "member isSmsDelivery|632", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isSmsDelivery|632", b: "class ProductPutCommand|628" }, { a: "member isPostDelivery|633", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isPostDelivery|633", b: "class ProductPutCommand|628" }, { a: "member isMobilePayEnabled|634", b: "src\\api\\Rest\\dtos.ts" }, { a: "member isMobilePayEnabled|634", b: "class ProductPutCommand|628" }, { a: "member mobilePayLink|635", b: "src\\api\\Rest\\dtos.ts" }, { a: "member mobilePayLink|635", b: "class ProductPutCommand|628" }, { a: "member emailImage|636", b: "src\\api\\Rest\\dtos.ts" }, { a: "member emailImage|636", b: "class ProductPutCommand|628" }, { a: "member smsImage|637", b: "src\\api\\Rest\\dtos.ts" }, { a: "member smsImage|637", b: "class ProductPutCommand|628" }, { a: "member postImage|638", b: "src\\api\\Rest\\dtos.ts" }, { a: "member postImage|638", b: "class ProductPutCommand|628" }, { a: "member values|639", b: "src\\api\\Rest\\dtos.ts" }, { a: "member values|639", b: "class ProductPutCommand|628" }, { a: "member createResponse|640", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|640", b: "interface IReturnVoid|676" }, { a: "member createResponse|640", b: "class ContentPatchCommand|378" }, { a: "member createResponse|640", b: "member createResponse|381" }, { a: "member createResponse|640", b: "method createResponse|383" }, { a: "member createResponse|640", b: "class CurrencyPatchCommand|385" }, { a: "member createResponse|640", b: "member createResponse|388" }, { a: "member createResponse|640", b: "method createResponse|390" }, { a: "member createResponse|640", b: "class LanguagePatchCommand|392" }, { a: "member createResponse|640", b: "member createResponse|395" }, { a: "member createResponse|640", b: "method createResponse|397" }, { a: "member createResponse|640", b: "class FontFileDeleteCommand|425" }, { a: "member createResponse|640", b: "member createResponse|428" }, { a: "member createResponse|640", b: "method createResponse|430" }, { a: "member createResponse|640", b: "class GiftCardCreateCommand|444" }, { a: "member createResponse|640", b: "member createResponse|457" }, { a: "member createResponse|640", b: "method createResponse|459" }, { a: "member createResponse|640", b: "class GiftCardPutCommand|461" }, { a: "member createResponse|640", b: "member createResponse|473" }, { a: "member createResponse|640", b: "method createResponse|475" }, { a: "member createResponse|640", b: "class GreetingCategoryDeleteCommand|494" }, { a: "member createResponse|640", b: "member createResponse|496" }, { a: "member createResponse|640", b: "method createResponse|498" }, { a: "member createResponse|640", b: "class ImagePutCommand|515" }, { a: "member createResponse|640", b: "member createResponse|518" }, { a: "member createResponse|640", b: "method createResponse|520" }, { a: "member createResponse|640", b: "class ImageDeleteCommand|522" }, { a: "member createResponse|640", b: "member createResponse|525" }, { a: "member createResponse|640", b: "method createResponse|527" }, { a: "member createResponse|640", b: "class LayoutPatchCommand|535" }, { a: "member createResponse|640", b: "member createResponse|537" }, { a: "member createResponse|640", b: "method createResponse|539" }, { a: "member createResponse|640", b: "class B2bLimitsPatchCommand|541" }, { a: "member createResponse|640", b: "member createResponse|544" }, { a: "member createResponse|640", b: "method createResponse|546" }, { a: "member createResponse|640", b: "class StepNameTranslationPatchCommand|548" }, { a: "member createResponse|640", b: "member createResponse|551" }, { a: "member createResponse|640", b: "method createResponse|553" }, { a: "member createResponse|640", b: "class LayoutCreateCommand|555" }, { a: "member createResponse|640", b: "member createResponse|574" }, { a: "member createResponse|640", b: "method createResponse|576" }, { a: "member createResponse|640", b: "class ProductCreateCommand|612" }, { a: "member createResponse|640", b: "member createResponse|624" }, { a: "member createResponse|640", b: "method createResponse|626" }, { a: "member createResponse|640", b: "class ProductPutCommand|628" }, { a: "member getTypeName|641", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|641", b: "class ProductPutCommand|628" }, { a: "method createResponse|642", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|642", b: "interface IReturnVoid|676" }, { a: "method createResponse|642", b: "class ContentPatchCommand|378" }, { a: "method createResponse|642", b: "member createResponse|381" }, { a: "method createResponse|642", b: "method createResponse|383" }, { a: "method createResponse|642", b: "class CurrencyPatchCommand|385" }, { a: "method createResponse|642", b: "member createResponse|388" }, { a: "method createResponse|642", b: "method createResponse|390" }, { a: "method createResponse|642", b: "class LanguagePatchCommand|392" }, { a: "method createResponse|642", b: "member createResponse|395" }, { a: "method createResponse|642", b: "method createResponse|397" }, { a: "method createResponse|642", b: "class FontFileDeleteCommand|425" }, { a: "method createResponse|642", b: "member createResponse|428" }, { a: "method createResponse|642", b: "method createResponse|430" }, { a: "method createResponse|642", b: "class GiftCardCreateCommand|444" }, { a: "method createResponse|642", b: "member createResponse|457" }, { a: "method createResponse|642", b: "method createResponse|459" }, { a: "method createResponse|642", b: "class GiftCardPutCommand|461" }, { a: "method createResponse|642", b: "member createResponse|473" }, { a: "method createResponse|642", b: "method createResponse|475" }, { a: "method createResponse|642", b: "class GreetingCategoryDeleteCommand|494" }, { a: "method createResponse|642", b: "member createResponse|496" }, { a: "method createResponse|642", b: "method createResponse|498" }, { a: "method createResponse|642", b: "class ImagePutCommand|515" }, { a: "method createResponse|642", b: "member createResponse|518" }, { a: "method createResponse|642", b: "method createResponse|520" }, { a: "method createResponse|642", b: "class ImageDeleteCommand|522" }, { a: "method createResponse|642", b: "member createResponse|525" }, { a: "method createResponse|642", b: "method createResponse|527" }, { a: "method createResponse|642", b: "class LayoutPatchCommand|535" }, { a: "method createResponse|642", b: "member createResponse|537" }, { a: "method createResponse|642", b: "method createResponse|539" }, { a: "method createResponse|642", b: "class B2bLimitsPatchCommand|541" }, { a: "method createResponse|642", b: "member createResponse|544" }, { a: "method createResponse|642", b: "method createResponse|546" }, { a: "method createResponse|642", b: "class StepNameTranslationPatchCommand|548" }, { a: "method createResponse|642", b: "member createResponse|551" }, { a: "method createResponse|642", b: "method createResponse|553" }, { a: "method createResponse|642", b: "class LayoutCreateCommand|555" }, { a: "method createResponse|642", b: "member createResponse|574" }, { a: "method createResponse|642", b: "method createResponse|576" }, { a: "method createResponse|642", b: "class ProductCreateCommand|612" }, { a: "method createResponse|642", b: "member createResponse|624" }, { a: "method createResponse|642", b: "method createResponse|626" }, { a: "method createResponse|642", b: "class ProductPutCommand|628" }, { a: "method getTypeName|643", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|643", b: "class ProductPutCommand|628" }, { a: "class VersionQuery|644", b: "src\\api\\Rest\\dtos.ts" }, { a: "member key|645", b: "src\\api\\Rest\\dtos.ts" }, { a: "member key|645", b: "class VersionQuery|644" }, { a: "member createResponse|646", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|646", b: "interface IReturn|675" }, { a: "member createResponse|646", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|646", b: "member createResponse|402" }, { a: "member createResponse|646", b: "method createResponse|404" }, { a: "member createResponse|646", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|646", b: "member createResponse|409" }, { a: "member createResponse|646", b: "method createResponse|411" }, { a: "member createResponse|646", b: "class FaqQuery|413" }, { a: "member createResponse|646", b: "member createResponse|414" }, { a: "member createResponse|646", b: "method createResponse|416" }, { a: "member createResponse|646", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|646", b: "member createResponse|421" }, { a: "member createResponse|646", b: "method createResponse|423" }, { a: "member createResponse|646", b: "class FontFileGetQuery|432" }, { a: "member createResponse|646", b: "member createResponse|434" }, { a: "member createResponse|646", b: "method createResponse|436" }, { a: "member createResponse|646", b: "class GiftCardQuery|438" }, { a: "member createResponse|646", b: "member createResponse|440" }, { a: "member createResponse|646", b: "method createResponse|442" }, { a: "member createResponse|646", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|646", b: "member createResponse|479" }, { a: "member createResponse|646", b: "method createResponse|481" }, { a: "member createResponse|646", b: "class GreetingCategoryList|483" }, { a: "member createResponse|646", b: "member createResponse|484" }, { a: "member createResponse|646", b: "method createResponse|486" }, { a: "member createResponse|646", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|646", b: "member createResponse|490" }, { a: "member createResponse|646", b: "method createResponse|492" }, { a: "member createResponse|646", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|646", b: "member createResponse|504" }, { a: "member createResponse|646", b: "method createResponse|506" }, { a: "member createResponse|646", b: "class ImageCreateCommand|508" }, { a: "member createResponse|646", b: "member createResponse|511" }, { a: "member createResponse|646", b: "method createResponse|513" }, { a: "member createResponse|646", b: "class LayoutQuery|529" }, { a: "member createResponse|646", b: "member createResponse|531" }, { a: "member createResponse|646", b: "method createResponse|533" }, { a: "member createResponse|646", b: "class LocalizationQuery|578" }, { a: "member createResponse|646", b: "member createResponse|579" }, { a: "member createResponse|646", b: "method createResponse|581" }, { a: "member createResponse|646", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|646", b: "member createResponse|584" }, { a: "member createResponse|646", b: "method createResponse|586" }, { a: "member createResponse|646", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|646", b: "member createResponse|590" }, { a: "member createResponse|646", b: "method createResponse|592" }, { a: "member createResponse|646", b: "class LocationQuery|594" }, { a: "member createResponse|646", b: "member createResponse|595" }, { a: "member createResponse|646", b: "method createResponse|597" }, { a: "member createResponse|646", b: "class OrderCreateCommand|599" }, { a: "member createResponse|646", b: "member createResponse|602" }, { a: "member createResponse|646", b: "method createResponse|604" }, { a: "member createResponse|646", b: "class ProductQuery|606" }, { a: "member createResponse|646", b: "member createResponse|608" }, { a: "member createResponse|646", b: "method createResponse|610" }, { a: "member createResponse|646", b: "class Authenticate|650" }, { a: "member createResponse|646", b: "member createResponse|671" }, { a: "member createResponse|646", b: "method createResponse|673" }, { a: "member createResponse|646", b: "class VersionQuery|644" }, { a: "member getTypeName|647", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|647", b: "class VersionQuery|644" }, { a: "method createResponse|648", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|648", b: "interface IReturn|675" }, { a: "method createResponse|648", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|648", b: "member createResponse|402" }, { a: "method createResponse|648", b: "method createResponse|404" }, { a: "method createResponse|648", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|648", b: "member createResponse|409" }, { a: "method createResponse|648", b: "method createResponse|411" }, { a: "method createResponse|648", b: "class FaqQuery|413" }, { a: "method createResponse|648", b: "member createResponse|414" }, { a: "method createResponse|648", b: "method createResponse|416" }, { a: "method createResponse|648", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|648", b: "member createResponse|421" }, { a: "method createResponse|648", b: "method createResponse|423" }, { a: "method createResponse|648", b: "class FontFileGetQuery|432" }, { a: "method createResponse|648", b: "member createResponse|434" }, { a: "method createResponse|648", b: "method createResponse|436" }, { a: "method createResponse|648", b: "class GiftCardQuery|438" }, { a: "method createResponse|648", b: "member createResponse|440" }, { a: "method createResponse|648", b: "method createResponse|442" }, { a: "method createResponse|648", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|648", b: "member createResponse|479" }, { a: "method createResponse|648", b: "method createResponse|481" }, { a: "method createResponse|648", b: "class GreetingCategoryList|483" }, { a: "method createResponse|648", b: "member createResponse|484" }, { a: "method createResponse|648", b: "method createResponse|486" }, { a: "method createResponse|648", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|648", b: "member createResponse|490" }, { a: "method createResponse|648", b: "method createResponse|492" }, { a: "method createResponse|648", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|648", b: "member createResponse|504" }, { a: "method createResponse|648", b: "method createResponse|506" }, { a: "method createResponse|648", b: "class ImageCreateCommand|508" }, { a: "method createResponse|648", b: "member createResponse|511" }, { a: "method createResponse|648", b: "method createResponse|513" }, { a: "method createResponse|648", b: "class LayoutQuery|529" }, { a: "method createResponse|648", b: "member createResponse|531" }, { a: "method createResponse|648", b: "method createResponse|533" }, { a: "method createResponse|648", b: "class LocalizationQuery|578" }, { a: "method createResponse|648", b: "member createResponse|579" }, { a: "method createResponse|648", b: "method createResponse|581" }, { a: "method createResponse|648", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|648", b: "member createResponse|584" }, { a: "method createResponse|648", b: "method createResponse|586" }, { a: "method createResponse|648", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|648", b: "member createResponse|590" }, { a: "method createResponse|648", b: "method createResponse|592" }, { a: "method createResponse|648", b: "class LocationQuery|594" }, { a: "method createResponse|648", b: "member createResponse|595" }, { a: "method createResponse|648", b: "method createResponse|597" }, { a: "method createResponse|648", b: "class OrderCreateCommand|599" }, { a: "method createResponse|648", b: "member createResponse|602" }, { a: "method createResponse|648", b: "method createResponse|604" }, { a: "method createResponse|648", b: "class ProductQuery|606" }, { a: "method createResponse|648", b: "member createResponse|608" }, { a: "method createResponse|648", b: "method createResponse|610" }, { a: "method createResponse|648", b: "class Authenticate|650" }, { a: "method createResponse|648", b: "member createResponse|671" }, { a: "method createResponse|648", b: "method createResponse|673" }, { a: "method createResponse|648", b: "class VersionQuery|644" }, { a: "method getTypeName|649", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|649", b: "class VersionQuery|644" }, { a: "class Authenticate|650", b: "src\\api\\Rest\\dtos.ts" }, { a: "member provider|651", b: "src\\api\\Rest\\dtos.ts" }, { a: "member provider|651", b: "class Authenticate|650" }, { a: "member state|652", b: "src\\api\\Rest\\dtos.ts" }, { a: "member state|652", b: "class Authenticate|650" }, { a: "member oauth_token|653", b: "src\\api\\Rest\\dtos.ts" }, { a: "member oauth_token|653", b: "class Authenticate|650" }, { a: "member oauth_verifier|654", b: "src\\api\\Rest\\dtos.ts" }, { a: "member oauth_verifier|654", b: "class Authenticate|650" }, { a: "member userName|655", b: "src\\api\\Rest\\dtos.ts" }, { a: "member userName|655", b: "class Authenticate|650" }, { a: "member password|656", b: "src\\api\\Rest\\dtos.ts" }, { a: "member password|656", b: "class Authenticate|650" }, { a: "member rememberMe|657", b: "src\\api\\Rest\\dtos.ts" }, { a: "member rememberMe|657", b: "class Authenticate|650" }, { a: "member continue|658", b: "src\\api\\Rest\\dtos.ts" }, { a: "member continue|658", b: "class Authenticate|650" }, { a: "member errorView|659", b: "src\\api\\Rest\\dtos.ts" }, { a: "member errorView|659", b: "class Authenticate|650" }, { a: "member nonce|660", b: "src\\api\\Rest\\dtos.ts" }, { a: "member nonce|660", b: "class Authenticate|650" }, { a: "member uri|661", b: "src\\api\\Rest\\dtos.ts" }, { a: "member uri|661", b: "class Authenticate|650" }, { a: "member response|662", b: "src\\api\\Rest\\dtos.ts" }, { a: "member response|662", b: "class Authenticate|650" }, { a: "member qop|663", b: "src\\api\\Rest\\dtos.ts" }, { a: "member qop|663", b: "class Authenticate|650" }, { a: "member nc|664", b: "src\\api\\Rest\\dtos.ts" }, { a: "member nc|664", b: "class Authenticate|650" }, { a: "member cnonce|665", b: "src\\api\\Rest\\dtos.ts" }, { a: "member cnonce|665", b: "class Authenticate|650" }, { a: "member useTokenCookie|666", b: "src\\api\\Rest\\dtos.ts" }, { a: "member useTokenCookie|666", b: "class Authenticate|650" }, { a: "member accessToken|667", b: "src\\api\\Rest\\dtos.ts" }, { a: "member accessToken|667", b: "class Authenticate|650" }, { a: "member accessTokenSecret|668", b: "src\\api\\Rest\\dtos.ts" }, { a: "member accessTokenSecret|668", b: "class Authenticate|650" }, { a: "member scope|669", b: "src\\api\\Rest\\dtos.ts" }, { a: "member scope|669", b: "class Authenticate|650" }, { a: "member meta|670", b: "src\\api\\Rest\\dtos.ts" }, { a: "member meta|670", b: "class Authenticate|650" }, { a: "member createResponse|671", b: "src\\api\\Rest\\dtos.ts" }, { a: "member createResponse|671", b: "interface IReturn|675" }, { a: "member createResponse|671", b: "class EngineClientCreateCommand|399" }, { a: "member createResponse|671", b: "member createResponse|402" }, { a: "member createResponse|671", b: "method createResponse|404" }, { a: "member createResponse|671", b: "class EngineClientVerifyCommand|406" }, { a: "member createResponse|671", b: "member createResponse|409" }, { a: "member createResponse|671", b: "method createResponse|411" }, { a: "member createResponse|671", b: "class FaqQuery|413" }, { a: "member createResponse|671", b: "member createResponse|414" }, { a: "member createResponse|671", b: "method createResponse|416" }, { a: "member createResponse|671", b: "class FontFileCreateCommand|418" }, { a: "member createResponse|671", b: "member createResponse|421" }, { a: "member createResponse|671", b: "method createResponse|423" }, { a: "member createResponse|671", b: "class FontFileGetQuery|432" }, { a: "member createResponse|671", b: "member createResponse|434" }, { a: "member createResponse|671", b: "method createResponse|436" }, { a: "member createResponse|671", b: "class GiftCardQuery|438" }, { a: "member createResponse|671", b: "member createResponse|440" }, { a: "member createResponse|671", b: "method createResponse|442" }, { a: "member createResponse|671", b: "class GreetingCategoryQuery|477" }, { a: "member createResponse|671", b: "member createResponse|479" }, { a: "member createResponse|671", b: "method createResponse|481" }, { a: "member createResponse|671", b: "class GreetingCategoryList|483" }, { a: "member createResponse|671", b: "member createResponse|484" }, { a: "member createResponse|671", b: "method createResponse|486" }, { a: "member createResponse|671", b: "class GreetingCategoryCreateCommand|488" }, { a: "member createResponse|671", b: "member createResponse|490" }, { a: "member createResponse|671", b: "method createResponse|492" }, { a: "member createResponse|671", b: "class GreetingCategoryPatchCommand|500" }, { a: "member createResponse|671", b: "member createResponse|504" }, { a: "member createResponse|671", b: "method createResponse|506" }, { a: "member createResponse|671", b: "class ImageCreateCommand|508" }, { a: "member createResponse|671", b: "member createResponse|511" }, { a: "member createResponse|671", b: "method createResponse|513" }, { a: "member createResponse|671", b: "class LayoutQuery|529" }, { a: "member createResponse|671", b: "member createResponse|531" }, { a: "member createResponse|671", b: "method createResponse|533" }, { a: "member createResponse|671", b: "class LocalizationQuery|578" }, { a: "member createResponse|671", b: "member createResponse|579" }, { a: "member createResponse|671", b: "method createResponse|581" }, { a: "member createResponse|671", b: "class LocalizationNotCachedQuery|583" }, { a: "member createResponse|671", b: "member createResponse|584" }, { a: "member createResponse|671", b: "method createResponse|586" }, { a: "member createResponse|671", b: "class ClearLocalizationCommand|588" }, { a: "member createResponse|671", b: "member createResponse|590" }, { a: "member createResponse|671", b: "method createResponse|592" }, { a: "member createResponse|671", b: "class LocationQuery|594" }, { a: "member createResponse|671", b: "member createResponse|595" }, { a: "member createResponse|671", b: "method createResponse|597" }, { a: "member createResponse|671", b: "class OrderCreateCommand|599" }, { a: "member createResponse|671", b: "member createResponse|602" }, { a: "member createResponse|671", b: "method createResponse|604" }, { a: "member createResponse|671", b: "class ProductQuery|606" }, { a: "member createResponse|671", b: "member createResponse|608" }, { a: "member createResponse|671", b: "method createResponse|610" }, { a: "member createResponse|671", b: "class VersionQuery|644" }, { a: "member createResponse|671", b: "member createResponse|646" }, { a: "member createResponse|671", b: "method createResponse|648" }, { a: "member createResponse|671", b: "class Authenticate|650" }, { a: "member getTypeName|672", b: "src\\api\\Rest\\dtos.ts" }, { a: "member getTypeName|672", b: "class Authenticate|650" }, { a: "method createResponse|673", b: "src\\api\\Rest\\dtos.ts" }, { a: "method createResponse|673", b: "interface IReturn|675" }, { a: "method createResponse|673", b: "class EngineClientCreateCommand|399" }, { a: "method createResponse|673", b: "member createResponse|402" }, { a: "method createResponse|673", b: "method createResponse|404" }, { a: "method createResponse|673", b: "class EngineClientVerifyCommand|406" }, { a: "method createResponse|673", b: "member createResponse|409" }, { a: "method createResponse|673", b: "method createResponse|411" }, { a: "method createResponse|673", b: "class FaqQuery|413" }, { a: "method createResponse|673", b: "member createResponse|414" }, { a: "method createResponse|673", b: "method createResponse|416" }, { a: "method createResponse|673", b: "class FontFileCreateCommand|418" }, { a: "method createResponse|673", b: "member createResponse|421" }, { a: "method createResponse|673", b: "method createResponse|423" }, { a: "method createResponse|673", b: "class FontFileGetQuery|432" }, { a: "method createResponse|673", b: "member createResponse|434" }, { a: "method createResponse|673", b: "method createResponse|436" }, { a: "method createResponse|673", b: "class GiftCardQuery|438" }, { a: "method createResponse|673", b: "member createResponse|440" }, { a: "method createResponse|673", b: "method createResponse|442" }, { a: "method createResponse|673", b: "class GreetingCategoryQuery|477" }, { a: "method createResponse|673", b: "member createResponse|479" }, { a: "method createResponse|673", b: "method createResponse|481" }, { a: "method createResponse|673", b: "class GreetingCategoryList|483" }, { a: "method createResponse|673", b: "member createResponse|484" }, { a: "method createResponse|673", b: "method createResponse|486" }, { a: "method createResponse|673", b: "class GreetingCategoryCreateCommand|488" }, { a: "method createResponse|673", b: "member createResponse|490" }, { a: "method createResponse|673", b: "method createResponse|492" }, { a: "method createResponse|673", b: "class GreetingCategoryPatchCommand|500" }, { a: "method createResponse|673", b: "member createResponse|504" }, { a: "method createResponse|673", b: "method createResponse|506" }, { a: "method createResponse|673", b: "class ImageCreateCommand|508" }, { a: "method createResponse|673", b: "member createResponse|511" }, { a: "method createResponse|673", b: "method createResponse|513" }, { a: "method createResponse|673", b: "class LayoutQuery|529" }, { a: "method createResponse|673", b: "member createResponse|531" }, { a: "method createResponse|673", b: "method createResponse|533" }, { a: "method createResponse|673", b: "class LocalizationQuery|578" }, { a: "method createResponse|673", b: "member createResponse|579" }, { a: "method createResponse|673", b: "method createResponse|581" }, { a: "method createResponse|673", b: "class LocalizationNotCachedQuery|583" }, { a: "method createResponse|673", b: "member createResponse|584" }, { a: "method createResponse|673", b: "method createResponse|586" }, { a: "method createResponse|673", b: "class ClearLocalizationCommand|588" }, { a: "method createResponse|673", b: "member createResponse|590" }, { a: "method createResponse|673", b: "method createResponse|592" }, { a: "method createResponse|673", b: "class LocationQuery|594" }, { a: "method createResponse|673", b: "member createResponse|595" }, { a: "method createResponse|673", b: "method createResponse|597" }, { a: "method createResponse|673", b: "class OrderCreateCommand|599" }, { a: "method createResponse|673", b: "member createResponse|602" }, { a: "method createResponse|673", b: "method createResponse|604" }, { a: "method createResponse|673", b: "class ProductQuery|606" }, { a: "method createResponse|673", b: "member createResponse|608" }, { a: "method createResponse|673", b: "method createResponse|610" }, { a: "method createResponse|673", b: "class VersionQuery|644" }, { a: "method createResponse|673", b: "member createResponse|646" }, { a: "method createResponse|673", b: "method createResponse|648" }, { a: "method createResponse|673", b: "class Authenticate|650" }, { a: "method getTypeName|674", b: "src\\api\\Rest\\dtos.ts" }, { a: "method getTypeName|674", b: "class Authenticate|650" }, { a: "interface IReturn|675", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IReturn|675", b: "class EngineClientCreateCommand|399" }, { a: "interface IReturn|675", b: "class EngineClientVerifyCommand|406" }, { a: "interface IReturn|675", b: "class FaqQuery|413" }, { a: "interface IReturn|675", b: "class FontFileCreateCommand|418" }, { a: "interface IReturn|675", b: "class FontFileGetQuery|432" }, { a: "interface IReturn|675", b: "class GiftCardQuery|438" }, { a: "interface IReturn|675", b: "class GreetingCategoryQuery|477" }, { a: "interface IReturn|675", b: "class GreetingCategoryList|483" }, { a: "interface IReturn|675", b: "class GreetingCategoryCreateCommand|488" }, { a: "interface IReturn|675", b: "class GreetingCategoryPatchCommand|500" }, { a: "interface IReturn|675", b: "class ImageCreateCommand|508" }, { a: "interface IReturn|675", b: "class LayoutQuery|529" }, { a: "interface IReturn|675", b: "class LocalizationQuery|578" }, { a: "interface IReturn|675", b: "class LocalizationNotCachedQuery|583" }, { a: "interface IReturn|675", b: "class ClearLocalizationCommand|588" }, { a: "interface IReturn|675", b: "class LocationQuery|594" }, { a: "interface IReturn|675", b: "class OrderCreateCommand|599" }, { a: "interface IReturn|675", b: "class ProductQuery|606" }, { a: "interface IReturn|675", b: "class VersionQuery|644" }, { a: "interface IReturn|675", b: "class Authenticate|650" }, { a: "interface IReturnVoid|676", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IReturnVoid|676", b: "class ContentPatchCommand|378" }, { a: "interface IReturnVoid|676", b: "class CurrencyPatchCommand|385" }, { a: "interface IReturnVoid|676", b: "class LanguagePatchCommand|392" }, { a: "interface IReturnVoid|676", b: "class FontFileDeleteCommand|425" }, { a: "interface IReturnVoid|676", b: "class GiftCardCreateCommand|444" }, { a: "interface IReturnVoid|676", b: "class GiftCardPutCommand|461" }, { a: "interface IReturnVoid|676", b: "class GreetingCategoryDeleteCommand|494" }, { a: "interface IReturnVoid|676", b: "class ImagePutCommand|515" }, { a: "interface IReturnVoid|676", b: "class ImageDeleteCommand|522" }, { a: "interface IReturnVoid|676", b: "class LayoutPatchCommand|535" }, { a: "interface IReturnVoid|676", b: "class B2bLimitsPatchCommand|541" }, { a: "interface IReturnVoid|676", b: "class StepNameTranslationPatchCommand|548" }, { a: "interface IReturnVoid|676", b: "class LayoutCreateCommand|555" }, { a: "interface IReturnVoid|676", b: "class ProductCreateCommand|612" }, { a: "interface IReturnVoid|676", b: "class ProductPutCommand|628" }, { a: "interface IHasSessionId|677", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IHasSessionId|677", b: "class AuthenticateResponse|365" }, { a: "interface IHasBearerToken|678", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IHasBearerToken|678", b: "class AuthenticateResponse|365" }, { a: "interface IPost|679", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IPost|679", b: "class EngineClientCreateCommand|399" }, { a: "interface IPost|679", b: "class EngineClientVerifyCommand|406" }, { a: "interface IPost|679", b: "class GreetingCategoryCreateCommand|488" }, { a: "interface IPost|679", b: "class LayoutCreateCommand|555" }, { a: "interface IPost|679", b: "class ClearLocalizationCommand|588" }, { a: "interface IPost|679", b: "class OrderCreateCommand|599" }, { a: "interface IPost|679", b: "class Authenticate|650" }, { a: "interface IGet|680", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IGet|680", b: "class FaqQuery|413" }, { a: "interface IGet|680", b: "class FontFileGetQuery|432" }, { a: "interface IGet|680", b: "class GiftCardQuery|438" }, { a: "interface IGet|680", b: "class GreetingCategoryQuery|477" }, { a: "interface IGet|680", b: "class GreetingCategoryList|483" }, { a: "interface IGet|680", b: "class LayoutQuery|529" }, { a: "interface IGet|680", b: "class LocalizationQuery|578" }, { a: "interface IGet|680", b: "class LocalizationNotCachedQuery|583" }, { a: "interface IGet|680", b: "class LocationQuery|594" }, { a: "interface IGet|680", b: "class ProductQuery|606" }, { a: "interface IGet|680", b: "class VersionQuery|644" }, { a: "interface IDelete|681", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IDelete|681", b: "class GreetingCategoryDeleteCommand|494" }, { a: "interface IPatch|682", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IPatch|682", b: "class GreetingCategoryPatchCommand|500" }, { a: "interface IContractResolver|683", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IContractResolver|683", b: "interface IJsonPatchDocument|684" }, { a: "interface IJsonPatchDocument|684", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IJsonPatchDocument|684", b: "class JsonPatchDocument|243" }, { a: "interface IJsonPatchDocument|684", b: "class LayoutPatchCommand|535" }, { a: "interface IJsonPatchDocument|684", b: "class B2bLimitsPatchCommand|541" }, { a: "interface IKeyDto|685", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IKeyDto|685", b: "class BaseKeyDto|166" }, { a: "interface IKeyDto|685", b: "class LayoutDto|207" }, { a: "interface IDto|686", b: "src\\api\\Rest\\dtos.ts" }, { a: "interface IDto|686", b: "class BaseKeyDto|166" }, { a: "interface IDto|686", b: "class LayoutDto|207" }, { a: "interface IDto|686", b: "class LocationDto|278" }, { a: "interface IDto|686", b: "interface IKeyDto|685" }, { a: "class Display|687", b: "src\\api\\Display\\Display.ts" }, { a: "class Display|687", b: "var display|711" }, { a: "member cssVariables|688", b: "src\\api\\Display\\Display.ts" }, { a: "member cssVariables|688", b: "class Display|687" }, { a: "member cssVariables|688", b: "member setAccent|696" }, { a: "member cssVariables|688", b: "member setBackgroundColor|697" }, { a: "member cssVariables|688", b: "member setFontFamily|698" }, { a: "member cssVariables|688", b: "member style|708" }, { a: "member title|689", b: "src\\api\\Display\\Display.ts" }, { a: "member title|689", b: "class Display|687" }, { a: "member title|689", b: "member setTitle|703" }, { a: "member step|690", b: "src\\api\\Display\\Display.ts" }, { a: "member step|690", b: "class Display|687" }, { a: "member step|690", b: "member goNextStep|700" }, { a: "member step|690", b: "member goPrevStep|701" }, { a: "member step|690", b: "member tryGoToStep|702" }, { a: "member step|690", b: "member canGoPrevStep|706" }, { a: "member step|690", b: "member canGoNextStep|707" }, { a: "member step|690", b: "var B2cStepsNav|974" }, { a: "member step|690", b: "var B2bStepsNav|975" }, { a: "member step|690", b: "var getHeaders|978" }, { a: "member step|690", b: "var Shop|820" }, { a: "member background|691", b: "src\\api\\Display\\Display.ts" }, { a: "member background|691", b: "class Display|687" }, { a: "member background|691", b: "member setBackground|694" }, { a: "member background|691", b: "var Background|1005" }, { a: "member background|691", b: "var Background|819" }, { a: "member logo|692", b: "src\\api\\Display\\Display.ts" }, { a: "member logo|692", b: "class Display|687" }, { a: "member logo|692", b: "member setLogo|699" }, { a: "member logo|692", b: "var Header|971" }, { a: "member customBlockImages|693", b: "src\\api\\Display\\Display.ts" }, { a: "member customBlockImages|693", b: "class Display|687" }, { a: "member customBlockImages|693", b: "member setCustomBlockImages|695" }, { a: "member customBlockImages|693", b: "class CustomBlockStore|1017" }, { a: "member customBlockImages|693", b: "member isImagesLoading|1030" }, { a: "member customBlockImages|693", b: "member images|1031" }, { a: "member setBackground|694", b: "src\\api\\Display\\Display.ts" }, { a: "member setBackground|694", b: "class Engine|27" }, { a: "member setBackground|694", b: "member loadLayout|38" }, { a: "member setBackground|694", b: "class Display|687" }, { a: "member setCustomBlockImages|695", b: "src\\api\\Display\\Display.ts" }, { a: "member setCustomBlockImages|695", b: "class Engine|27" }, { a: "member setCustomBlockImages|695", b: "member loadLayout|38" }, { a: "member setCustomBlockImages|695", b: "class Display|687" }, { a: "member setAccent|696", b: "src\\api\\Display\\Display.ts" }, { a: "member setAccent|696", b: "class Engine|27" }, { a: "member setAccent|696", b: "member loadLayout|38" }, { a: "member setAccent|696", b: "class Display|687" }, { a: "member setBackgroundColor|697", b: "src\\api\\Display\\Display.ts" }, { a: "member setBackgroundColor|697", b: "class Engine|27" }, { a: "member setBackgroundColor|697", b: "member loadLayout|38" }, { a: "member setBackgroundColor|697", b: "class Display|687" }, { a: "member setFontFamily|698", b: "src\\api\\Display\\Display.ts" }, { a: "member setFontFamily|698", b: "class Engine|27" }, { a: "member setFontFamily|698", b: "member loadLayout|38" }, { a: "member setFontFamily|698", b: "class Display|687" }, { a: "member setLogo|699", b: "src\\api\\Display\\Display.ts" }, { a: "member setLogo|699", b: "class Engine|27" }, { a: "member setLogo|699", b: "member loadLayout|38" }, { a: "member setLogo|699", b: "class Display|687" }, { a: "member goNextStep|700", b: "src\\api\\Display\\Display.ts" }, { a: "member goNextStep|700", b: "class Display|687" }, { a: "member goPrevStep|701", b: "src\\api\\Display\\Display.ts" }, { a: "member goPrevStep|701", b: "class Display|687" }, { a: "member tryGoToStep|702", b: "src\\api\\Display\\Display.ts" }, { a: "member tryGoToStep|702", b: "var goToStep|973" }, { a: "member tryGoToStep|702", b: "class Display|687" }, { a: "member setTitle|703", b: "src\\api\\Display\\Display.ts" }, { a: "member setTitle|703", b: "class Lang|54" }, { a: "member setTitle|703", b: "class Display|687" }, { a: "member setFavicon|704", b: "src\\api\\Display\\Display.ts" }, { a: "member setFavicon|704", b: "class Engine|27" }, { a: "member setFavicon|704", b: "member loadLayout|38" }, { a: "member setFavicon|704", b: "class Display|687" }, { a: "member redirectToErrorFallback|705", b: "src\\api\\Display\\Display.ts" }, { a: "member redirectToErrorFallback|705", b: "class Engine|27" }, { a: "member redirectToErrorFallback|705", b: "member setEngineId|37" }, { a: "member redirectToErrorFallback|705", b: "class Display|687" }, { a: "member canGoPrevStep|706", b: "src\\api\\Display\\Display.ts" }, { a: "member canGoPrevStep|706", b: "class Display|687" }, { a: "member canGoPrevStep|706", b: "member goPrevStep|701" }, { a: "member canGoNextStep|707", b: "src\\api\\Display\\Display.ts" }, { a: "member canGoNextStep|707", b: "class Display|687" }, { a: "member canGoNextStep|707", b: "member goNextStep|700" }, { a: "member style|708", b: "src\\api\\Display\\Display.ts" }, { a: "member style|708", b: "var Shop|820" }, { a: "member style|708", b: "class Display|687" }, { a: "member isB2b|709", b: "src\\api\\Display\\Display.ts" }, { a: "member isB2b|709", b: "class Display|687" }, { a: "member isB2b|709", b: "member canGoNextStep|707" }, { a: "member isB2b|709", b: "var StepsNav|976" }, { a: "var DefaultCssVariables|710", b: "src\\api\\Display\\Display.ts" }, { a: "var DefaultCssVariables|710", b: "class Display|687" }, { a: "var DefaultCssVariables|710", b: "member cssVariables|688" }, { a: "var display|711", b: "src\\api\\Display\\Display.ts" }, { a: "var display|711", b: "class Engine|27" }, { a: "var display|711", b: "member setEngineId|37" }, { a: "var display|711", b: "member loadLayout|38" }, { a: "var display|711", b: "class Lang|54" }, { a: "var display|711", b: "var Background|1005" }, { a: "var display|711", b: "var Header|971" }, { a: "var display|711", b: "var goToStep|973" }, { a: "var display|711", b: "var B2cStepsNav|974" }, { a: "var display|711", b: "var B2bStepsNav|975" }, { a: "var display|711", b: "var StepsNav|976" }, { a: "var display|711", b: "var getHeaders|978" }, { a: "var display|711", b: "class CustomBlockStore|1017" }, { a: "var display|711", b: "member isImagesLoading|1030" }, { a: "var display|711", b: "member images|1031" }, { a: "var display|711", b: "var Background|819" }, { a: "var display|711", b: "var Shop|820" }, { a: "class Router|712", b: "src\\api\\Router\\Router.ts" }, { a: "class Router|712", b: "var router|719" }, { a: "member page|713", b: "src\\api\\Router\\Router.ts" }, { a: "member page|713", b: "class Router|712" }, { a: "member page|713", b: "member setPage|716" }, { a: "member page|713", b: "var Loading|817" }, { a: "member page|713", b: "var Content|2" }, { a: "member hasUsedInit|714", b: "src\\api\\Router\\Router.ts" }, { a: "member hasUsedInit|714", b: "class Router|712" }, { a: "member hasUsedInit|714", b: "member init|717" }, { a: "member hasUsedInit|714", b: "method init|718" }, { a: "member navigo|715", b: "src\\api\\Router\\Router.ts" }, { a: "member navigo|715", b: "class Router|712" }, { a: "member navigo|715", b: "member init|717" }, { a: "member navigo|715", b: "method init|718" }, { a: "member setPage|716", b: "src\\api\\Router\\Router.ts" }, { a: "member setPage|716", b: "class Engine|27" }, { a: "member setPage|716", b: "member setEngineId|37" }, { a: "member setPage|716", b: "class Lang|54" }, { a: "member setPage|716", b: "class Router|712" }, { a: "member setPage|716", b: "member init|717" }, { a: "member setPage|716", b: "method init|718" }, { a: "member init|717", b: "src\\api\\Router\\Router.ts" }, { a: "member init|717", b: "class System|811" }, { a: "member init|717", b: "member init|812" }, { a: "member init|717", b: "class Router|712" }, { a: "method init|718", b: "src\\api\\Router\\Router.ts" }, { a: "method init|718", b: "class System|811" }, { a: "method init|718", b: "member init|812" }, { a: "method init|718", b: "class Router|712" }, { a: "var router|719", b: "src\\api\\Router\\Router.ts" }, { a: "var router|719", b: "class Engine|27" }, { a: "var router|719", b: "member setEngineId|37" }, { a: "var router|719", b: "class Lang|54" }, { a: "var router|719", b: "class System|811" }, { a: "var router|719", b: "member init|812" }, { a: "var router|719", b: "var Loading|817" }, { a: "var router|719", b: "var Content|2" }, { a: "class Storage|720", b: "src\\api\\Storage\\Storage.ts" }, { a: "class Storage|720", b: "var storage|730" }, { a: "member data|721", b: "src\\api\\Storage\\Storage.ts" }, { a: "member data|721", b: "class Storage|720" }, { a: "member data|721", b: "member load|723" }, { a: "member data|721", b: "member save|724" }, { a: "member data|721", b: "member set|725" }, { a: "member data|721", b: "member get|726" }, { a: "member changeTime|722", b: "src\\api\\Storage\\Storage.ts" }, { a: "member changeTime|722", b: "class Storage|720" }, { a: "member changeTime|722", b: "member set|725" }, { a: "member load|723", b: "src\\api\\Storage\\Storage.ts" }, { a: "member load|723", b: "class Storage|720" }, { a: "member save|724", b: "src\\api\\Storage\\Storage.ts" }, { a: "member save|724", b: "class Storage|720" }, { a: "member set|725", b: "src\\api\\Storage\\Storage.ts" }, { a: "member set|725", b: "class Engine|27" }, { a: "member set|725", b: "member setCurrency|34" }, { a: "member set|725", b: "class Lang|54" }, { a: "member set|725", b: "member set|64" }, { a: "member set|725", b: "class Storage|720" }, { a: "member get|726", b: "src\\api\\Storage\\Storage.ts" }, { a: "member get|726", b: "class Basket|12" }, { a: "member get|726", b: "member tryLoadFromStorage|15" }, { a: "member get|726", b: "class Engine|27" }, { a: "member get|726", b: "member setCurrencies|36" }, { a: "member get|726", b: "class Lang|54" }, { a: "member get|726", b: "member setList|67" }, { a: "member get|726", b: "class Storage|720" }, { a: "type_alias LocalStorage|727", b: "src\\api\\Storage\\Storage.ts" }, { a: "type_alias LocalStorage|727", b: "class Storage|720" }, { a: "type_alias LocalStorage|727", b: "member data|721" }, { a: "type_alias LocalStorage|727", b: "member set|725" }, { a: "type_alias LocalStorage|727", b: "member get|726" }, { a: "var storageProxy|728", b: "src\\api\\Storage\\Storage.ts" }, { a: "var storageProxy|728", b: "class Storage|720" }, { a: "var storageProxy|728", b: "member load|723" }, { a: "var storageProxy|728", b: "member save|724" }, { a: "var getKeyFor|729", b: "src\\api\\Storage\\Storage.ts" }, { a: "var getKeyFor|729", b: "class Storage|720" }, { a: "var getKeyFor|729", b: "member load|723" }, { a: "var getKeyFor|729", b: "member save|724" }, { a: "var storage|730", b: "src\\api\\Storage\\Storage.ts" }, { a: "var storage|730", b: "class Basket|12" }, { a: "var storage|730", b: "member tryLoadFromStorage|15" }, { a: "var storage|730", b: "class Engine|27" }, { a: "var storage|730", b: "member setCurrency|34" }, { a: "var storage|730", b: "member setCurrencies|36" }, { a: "var storage|730", b: "class Lang|54" }, { a: "var storage|730", b: "member set|64" }, { a: "var storage|730", b: "member setList|67" }, { a: "type_alias PropsOfHTML|731", b: "src\\api\\Style\\Style.tsx" }, { a: "type_alias PropsOfHTML|731", b: "type_alias Props|732" }, { a: "type_alias Props|732", b: "src\\api\\Style\\Style.tsx" }, { a: "type_alias Props|732", b: "var style|735" }, { a: "var selector|733", b: "src\\api\\Style\\Style.tsx" }, { a: "var selector|733", b: "var createSelector|734" }, { a: "var createSelector|734", b: "src\\api\\Style\\Style.tsx" }, { a: "var createSelector|734", b: "var style|735" }, { a: "var style|735", b: "src\\api\\Style\\Style.tsx" }, { a: "var style|735", b: "var { Div }|902" }, { a: "var style|735", b: "var { Div }|906" }, { a: "var style|735", b: "var { Div }|928" }, { a: "var style|735", b: "var { Div }|816" }, { a: "var style|735", b: "var { Div }|990" }, { a: "var style|735", b: "var { Div }|988" }, { a: "var style|735", b: "var { Div }|955" }, { a: "var style|735", b: "var { Div }|1004" }, { a: "var style|735", b: "var { Div }|962" }, { a: "var style|735", b: "var { Div }|970" }, { a: "var style|735", b: "var { Div }|972" }, { a: "var style|735", b: "var { Div }|977" }, { a: "var style|735", b: "var { Div }|1008" }, { a: "var style|735", b: "var { Div }|1011" }, { a: "var style|735", b: "var { Div }|980" }, { a: "var style|735", b: "var { Div }|818" }, { a: "var style|735", b: "var { Div }|821" }, { a: "var cutHex|736", b: "src\\api\\Utils\\Colors.ts" }, { a: "var cutHex|736", b: "var hexToR|737" }, { a: "var cutHex|736", b: "var hexToG|738" }, { a: "var cutHex|736", b: "var hexToB|739" }, { a: "var hexToR|737", b: "src\\api\\Utils\\Colors.ts" }, { a: "var hexToR|737", b: "var darken|740" }, { a: "var hexToG|738", b: "src\\api\\Utils\\Colors.ts" }, { a: "var hexToG|738", b: "var darken|740" }, { a: "var hexToB|739", b: "src\\api\\Utils\\Colors.ts" }, { a: "var hexToB|739", b: "var darken|740" }, { a: "var darken|740", b: "src\\api\\Utils\\Colors.ts" }, { a: "var darken|740", b: "class Display|687" }, { a: "var darken|740", b: "member setAccent|696" }, { a: "var keysToLowerCase|741", b: "src\\api\\Utils\\Objects.ts" }, { a: "var keysToLowerCase|741", b: "class Prices|941" }, { a: "var keysToLowerCase|741", b: "member setSteps|948" }, { a: "var createEachDelivery|742", b: "src\\api\\Utils\\Objects.ts" }, { a: "var createEachDelivery|742", b: "class Product|764" }, { a: "var createEachDelivery|742", b: "member delivery|773" }, { a: "class Status|743", b: "src\\api\\Utils\\Status.ts" }, { a: "class Status|743", b: "class Product|764" }, { a: "class Status|743", b: "member fetchingStatus|766" }, { a: "member status|744", b: "src\\api\\Utils\\Status.ts" }, { a: "member status|744", b: "class Status|743" }, { a: "member status|744", b: "member start|745" }, { a: "member status|744", b: "member fail|746" }, { a: "member status|744", b: "member success|747" }, { a: "member status|744", b: "member isLoading|748" }, { a: "member status|744", b: "member isDone|749" }, { a: "member status|744", b: "member isPending|750" }, { a: "member status|744", b: "member isFail|751" }, { a: "member status|744", b: "member isSuccess|752" }, { a: "member start|745", b: "src\\api\\Utils\\Status.ts" }, { a: "member start|745", b: "class Status|743" }, { a: "member fail|746", b: "src\\api\\Utils\\Status.ts" }, { a: "member fail|746", b: "class Product|764" }, { a: "member fail|746", b: "member fetch|785" }, { a: "member fail|746", b: "class Status|743" }, { a: "member success|747", b: "src\\api\\Utils\\Status.ts" }, { a: "member success|747", b: "class Product|764" }, { a: "member success|747", b: "member fetch|785" }, { a: "member success|747", b: "class Status|743" }, { a: "member isLoading|748", b: "src\\api\\Utils\\Status.ts" }, { a: "member isLoading|748", b: "class Status|743" }, { a: "member isDone|749", b: "src\\api\\Utils\\Status.ts" }, { a: "member isDone|749", b: "class ProductVm|786" }, { a: "member isDone|749", b: "class Status|743" }, { a: "member isPending|750", b: "src\\api\\Utils\\Status.ts" }, { a: "member isPending|750", b: "class Product|764" }, { a: "member isPending|750", b: "member isVisible|782" }, { a: "member isPending|750", b: "class Status|743" }, { a: "member isPending|750", b: "var ProductView|1009" }, { a: "member isFail|751", b: "src\\api\\Utils\\Status.ts" }, { a: "member isFail|751", b: "class Status|743" }, { a: "member isSuccess|752", b: "src\\api\\Utils\\Status.ts" }, { a: "member isSuccess|752", b: "class Basket|12" }, { a: "member isSuccess|752", b: "member tryLoadFromStorage|15" }, { a: "member isSuccess|752", b: "class Status|743" }, { a: "class Client|753", b: "src\\api\\Gql\\Client.ts" }, { a: "class Client|753", b: "var client|756" }, { a: "member uri|754", b: "src\\api\\Gql\\Client.ts" }, { a: "member uri|754", b: "class Client|753" }, { a: "member uri|754", b: "member get|755" }, { a: "member get|755", b: "src\\api\\Gql\\Client.ts" }, { a: "member get|755", b: "var getProducts|872" }, { a: "member get|755", b: "var getStockInfo|873" }, { a: "member get|755", b: "class Client|753" }, { a: "var client|756", b: "src\\api\\Gql\\Client.ts" }, { a: "var client|756", b: "var getProducts|872" }, { a: "var client|756", b: "var getStockInfo|873" }, { a: "class Stock|757", b: "src\\api\\Stock\\Stock.ts" }, { a: "class Stock|757", b: "var stock|763" }, { a: "member products|758", b: "src\\api\\Stock\\Stock.ts" }, { a: "member products|758", b: "class Stock|757" }, { a: "member products|758", b: "member fetchGql|760" }, { a: "member products|758", b: "member fetchRest|761" }, { a: "member products|758", b: "member isEmpty|762" }, { a: "member products|758", b: "class Basket|12" }, { a: "member products|758", b: "member tryLoadFromStorage|15" }, { a: "member products|758", b: "var StepProducts|981" }, { a: "member skuProducts|759", b: "src\\api\\Stock\\Stock.ts" }, { a: "member skuProducts|759", b: "class Stock|757" }, { a: "member skuProducts|759", b: "member fetchGql|760" }, { a: "member fetchGql|760", b: "src\\api\\Stock\\Stock.ts" }, { a: "member fetchGql|760", b: "class Engine|27" }, { a: "member fetchGql|760", b: "member loadSideEffects|39" }, { a: "member fetchGql|760", b: "class Stock|757" }, { a: "member fetchRest|761", b: "src\\api\\Stock\\Stock.ts" }, { a: "member fetchRest|761", b: "class Engine|27" }, { a: "member fetchRest|761", b: "member loadSideEffects|39" }, { a: "member fetchRest|761", b: "class Stock|757" }, { a: "member isEmpty|762", b: "src\\api\\Stock\\Stock.ts" }, { a: "member isEmpty|762", b: "class Stock|757" }, { a: "var stock|763", b: "src\\api\\Stock\\Stock.ts" }, { a: "var stock|763", b: "class Basket|12" }, { a: "var stock|763", b: "member tryLoadFromStorage|15" }, { a: "var stock|763", b: "class Engine|27" }, { a: "var stock|763", b: "member loadSideEffects|39" }, { a: "var stock|763", b: "var StepProducts|981" }, { a: "class Product|764", b: "src\\api\\Stock\\Product.ts" }, { a: "class Product|764", b: "class DeliveryProduct|886" }, { a: "class Product|764", b: "member product|892" }, { a: "class Product|764", b: "class Stock|757" }, { a: "class Product|764", b: "member products|758" }, { a: "class Product|764", b: "member fetchGql|760" }, { a: "class Product|764", b: "class BasketProduct|824" }, { a: "class Product|764", b: "member product|826" }, { a: "class Product|764", b: "member isMatch|828" }, { a: "class Product|764", b: "class ProductVm|786" }, { a: "class Product|764", b: "member product|790" }, { a: "class Product|764", b: "class Basket|12" }, { a: "class Product|764", b: "member getProduct|16" }, { a: "class Product|764", b: "member removeProduct|17" }, { a: "class Product|764", b: "type_alias Props|1015" }, { a: "class Product|764", b: "type_alias Props|1007" }, { a: "member id|765", b: "src\\api\\Stock\\Product.ts" }, { a: "member id|765", b: "class Product|764" }, { a: "member id|765", b: "member fetch|785" }, { a: "member id|765", b: "var StepProducts|981" }, { a: "member fetchingStatus|766", b: "src\\api\\Stock\\Product.ts" }, { a: "member fetchingStatus|766", b: "class ProductVm|786" }, { a: "member fetchingStatus|766", b: "class Product|764" }, { a: "member fetchingStatus|766", b: "member isVisible|782" }, { a: "member fetchingStatus|766", b: "member fetch|785" }, { a: "member fetchingStatus|766", b: "class Basket|12" }, { a: "member fetchingStatus|766", b: "member tryLoadFromStorage|15" }, { a: "member fetchingStatus|766", b: "var ProductView|1009" }, { a: "member isMobilePayEnabled|767", b: "src\\api\\Stock\\Product.ts" }, { a: "member isMobilePayEnabled|767", b: "class Product|764" }, { a: "member isMobilePayEnabled|767", b: "member setMobilePay|776" }, { a: "member isMobilePayEnabled|767", b: "var ProductView|1009" }, { a: "member mobilePayLink|768", b: "src\\api\\Stock\\Product.ts" }, { a: "member mobilePayLink|768", b: "class Product|764" }, { a: "member mobilePayLink|768", b: "member setMobilePay|776" }, { a: "member skuProducts|769", b: "src\\api\\Stock\\Product.ts" }, { a: "member skuProducts|769", b: "class Product|764" }, { a: "member skuProducts|769", b: "member setSkuProducts|780" }, { a: "member skuProducts|769", b: "member isVisible|782" }, { a: "member skuProducts|769", b: "member fetch|785" }, { a: "member defaultLang|770", b: "src\\api\\Stock\\Product.ts" }, { a: "member defaultLang|770", b: "class Product|764" }, { a: "member defaultLang|770", b: "member setDefaultLang|777" }, { a: "member defaultLang|770", b: "member name|783" }, { a: "member defaultLang|770", b: "member description|784" }, { a: "member names|771", b: "src\\api\\Stock\\Product.ts" }, { a: "member names|771", b: "class Product|764" }, { a: "member names|771", b: "member setNames|778" }, { a: "member names|771", b: "member name|783" }, { a: "member descs|772", b: "src\\api\\Stock\\Product.ts" }, { a: "member descs|772", b: "class Product|764" }, { a: "member descs|772", b: "member setDescriptions|779" }, { a: "member descs|772", b: "member description|784" }, { a: "member delivery|773", b: "src\\api\\Stock\\Product.ts" }, { a: "member delivery|773", b: "class ProductVm|786" }, { a: "member delivery|773", b: "member productPreview|791" }, { a: "member delivery|773", b: "member setAnyDeliveryMethod|792" }, { a: "member delivery|773", b: "member pricesWithLabels|795" }, { a: "member delivery|773", b: "member prices|796" }, { a: "member delivery|773", b: "class Product|764" }, { a: "member delivery|773", b: "member setSkuProducts|780" }, { a: "member delivery|773", b: "member setDelivery|781" }, { a: "member delivery|773", b: "member isVisible|782" }, { a: "member delivery|773", b: "class Stock|757" }, { a: "member delivery|773", b: "member fetchRest|761" }, { a: "member delivery|773", b: "var DeliverySelector|1016" }, { a: "member realId|774", b: "src\\api\\Stock\\Product.ts" }, { a: "member realId|774", b: "class Product|764" }, { a: "member realId|774", b: "member fetch|785" }, { a: "member realId|774", b: "class Stock|757" }, { a: "member realId|774", b: "member fetchRest|761" }, { a: "member useViewModel|775", b: "src\\api\\Stock\\Product.ts" }, { a: "member useViewModel|775", b: "var ProductView|1009" }, { a: "member useViewModel|775", b: "class Product|764" }, { a: "member setMobilePay|776", b: "src\\api\\Stock\\Product.ts" }, { a: "member setMobilePay|776", b: "class Stock|757" }, { a: "member setMobilePay|776", b: "member fetchRest|761" }, { a: "member setMobilePay|776", b: "class Product|764" }, { a: "member setDefaultLang|777", b: "src\\api\\Stock\\Product.ts" }, { a: "member setDefaultLang|777", b: "class Stock|757" }, { a: "member setDefaultLang|777", b: "member fetchGql|760" }, { a: "member setDefaultLang|777", b: "class Product|764" }, { a: "member setNames|778", b: "src\\api\\Stock\\Product.ts" }, { a: "member setNames|778", b: "class Stock|757" }, { a: "member setNames|778", b: "member fetchGql|760" }, { a: "member setNames|778", b: "class Product|764" }, { a: "member setDescriptions|779", b: "src\\api\\Stock\\Product.ts" }, { a: "member setDescriptions|779", b: "class Stock|757" }, { a: "member setDescriptions|779", b: "member fetchRest|761" }, { a: "member setDescriptions|779", b: "class Product|764" }, { a: "member setSkuProducts|780", b: "src\\api\\Stock\\Product.ts" }, { a: "member setSkuProducts|780", b: "class Stock|757" }, { a: "member setSkuProducts|780", b: "member fetchGql|760" }, { a: "member setSkuProducts|780", b: "class Product|764" }, { a: "member setDelivery|781", b: "src\\api\\Stock\\Product.ts" }, { a: "member setDelivery|781", b: "class Stock|757" }, { a: "member setDelivery|781", b: "member fetchRest|761" }, { a: "member setDelivery|781", b: "class Product|764" }, { a: "member isVisible|782", b: "src\\api\\Stock\\Product.ts" }, { a: "member isVisible|782", b: "class Stock|757" }, { a: "member isVisible|782", b: "member isEmpty|762" }, { a: "member isVisible|782", b: "var Product|1010" }, { a: "member isVisible|782", b: "class Product|764" }, { a: "member name|783", b: "src\\api\\Stock\\Product.ts" }, { a: "member name|783", b: "var ProductView|1009" }, { a: "member name|783", b: "class Product|764" }, { a: "member description|784", b: "src\\api\\Stock\\Product.ts" }, { a: "member description|784", b: "var ProductView|1009" }, { a: "member description|784", b: "class Product|764" }, { a: "member fetch|785", b: "src\\api\\Stock\\Product.ts" }, { a: "member fetch|785", b: "class Product|764" }, { a: "class ProductVm|786", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "class ProductVm|786", b: "class Product|764" }, { a: "class ProductVm|786", b: "member useViewModel|775" }, { a: "class ProductVm|786", b: "type_alias Props|1015" }, { a: "member deliveryMethod|787", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member deliveryMethod|787", b: "class ProductVm|786" }, { a: "member deliveryMethod|787", b: "member productPreview|791" }, { a: "member deliveryMethod|787", b: "member setDeliveryMethod|793" }, { a: "member deliveryMethod|787", b: "member pricesWithLabels|795" }, { a: "member deliveryMethod|787", b: "member prices|796" }, { a: "member deliveryMethod|787", b: "member pushToBasket|801" }, { a: "member deliveryMethod|787", b: "var DeliverySelector|1016" }, { a: "member currentPrice|788", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member currentPrice|788", b: "class ProductVm|786" }, { a: "member currentPrice|788", b: "member setPrice|794" }, { a: "member currentPrice|788", b: "member price|797" }, { a: "member amount|789", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member amount|789", b: "class ProductVm|786" }, { a: "member amount|789", b: "member value|798" }, { a: "member amount|789", b: "member moveAmount|799" }, { a: "member amount|789", b: "member changeAmount|800" }, { a: "member amount|789", b: "member pushToBasket|801" }, { a: "member amount|789", b: "var ProductView|1009" }, { a: "member product|790", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member product|790", b: "class ProductVm|786" }, { a: "member product|790", b: "member productPreview|791" }, { a: "member product|790", b: "member setAnyDeliveryMethod|792" }, { a: "member product|790", b: "member pricesWithLabels|795" }, { a: "member product|790", b: "member prices|796" }, { a: "member product|790", b: "member pushToBasket|801" }, { a: "member productPreview|791", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member productPreview|791", b: "var ProductView|1009" }, { a: "member productPreview|791", b: "class ProductVm|786" }, { a: "member setAnyDeliveryMethod|792", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member setAnyDeliveryMethod|792", b: "class ProductVm|786" }, { a: "member setDeliveryMethod|793", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member setDeliveryMethod|793", b: "class ProductVm|786" }, { a: "member setDeliveryMethod|793", b: "member setAnyDeliveryMethod|792" }, { a: "member setDeliveryMethod|793", b: "var DeliverySelector|1016" }, { a: "member setPrice|794", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member setPrice|794", b: "var ProductView|1009" }, { a: "member setPrice|794", b: "class ProductVm|786" }, { a: "member pricesWithLabels|795", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member pricesWithLabels|795", b: "var ProductView|1009" }, { a: "member pricesWithLabels|795", b: "class ProductVm|786" }, { a: "member prices|796", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member prices|796", b: "class ProductVm|786" }, { a: "member prices|796", b: "member pricesWithLabels|795" }, { a: "member prices|796", b: "member price|797" }, { a: "member price|797", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member price|797", b: "class ProductVm|786" }, { a: "member price|797", b: "member value|798" }, { a: "member price|797", b: "var ProductView|1009" }, { a: "member value|798", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member value|798", b: "var ProductView|1009" }, { a: "member value|798", b: "class ProductVm|786" }, { a: "member moveAmount|799", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member moveAmount|799", b: "var ProductView|1009" }, { a: "member moveAmount|799", b: "class ProductVm|786" }, { a: "member changeAmount|800", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member changeAmount|800", b: "class ProductVm|786" }, { a: "member changeAmount|800", b: "member pushToBasket|801" }, { a: "member changeAmount|800", b: "var ProductView|1009" }, { a: "member pushToBasket|801", b: "src\\api\\Stock\\Product.vm.ts" }, { a: "member pushToBasket|801", b: "var ProductView|1009" }, { a: "member pushToBasket|801", b: "class ProductVm|786" }, { a: "class Tracking|802", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "class Tracking|802", b: "var tracking|810" }, { a: "member googleId|803", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member googleId|803", b: "class Tracking|802" }, { a: "member googleId|803", b: "member isGoogleEnabled|806" }, { a: "member googleId|803", b: "member setGoogleId|808" }, { a: "member googleId|803", b: "var GoogleTag|815" }, { a: "member pixelId|804", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member pixelId|804", b: "class Tracking|802" }, { a: "member pixelId|804", b: "member isPixelEnabled|807" }, { a: "member pixelId|804", b: "member setPixelId|809" }, { a: "member pixelId|804", b: "var FacebookPixel|814" }, { a: "member isTrackingEnabled|805", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member isTrackingEnabled|805", b: "class Tracking|802" }, { a: "member isTrackingEnabled|805", b: "member isGoogleEnabled|806" }, { a: "member isTrackingEnabled|805", b: "member isPixelEnabled|807" }, { a: "member isGoogleEnabled|806", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member isGoogleEnabled|806", b: "var GoogleTag|815" }, { a: "member isGoogleEnabled|806", b: "class Tracking|802" }, { a: "member isPixelEnabled|807", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member isPixelEnabled|807", b: "var FacebookPixel|814" }, { a: "member isPixelEnabled|807", b: "class Tracking|802" }, { a: "member setGoogleId|808", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member setGoogleId|808", b: "class Engine|27" }, { a: "member setGoogleId|808", b: "member loadLayout|38" }, { a: "member setGoogleId|808", b: "class Tracking|802" }, { a: "member setPixelId|809", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "member setPixelId|809", b: "class Engine|27" }, { a: "member setPixelId|809", b: "member loadLayout|38" }, { a: "member setPixelId|809", b: "class Tracking|802" }, { a: "var tracking|810", b: "src\\api\\Tracking\\Tracking.ts" }, { a: "var tracking|810", b: "class Engine|27" }, { a: "var tracking|810", b: "member loadLayout|38" }, { a: "var tracking|810", b: "var FacebookPixel|814" }, { a: "var tracking|810", b: "var GoogleTag|815" }, { a: "class System|811", b: "src\\api\\System\\System.ts" }, { a: "class System|811", b: "var system|813" }, { a: "member init|812", b: "src\\api\\System\\System.ts" }, { a: "member init|812", b: "class System|811" }, { a: "var system|813", b: "src\\api\\System\\System.ts" }, { a: "var FacebookPixel|814", b: "src\\lib\\FacebookPixel.tsx" }, { a: "var FacebookPixel|814", b: "var App|3" }, { a: "var GoogleTag|815", b: "src\\lib\\GoogleTag.tsx" }, { a: "var GoogleTag|815", b: "var App|3" }, { a: "var { Div }|816", b: "src\\App\\Loading\\Loading.tsx" }, { a: "var Loading|817", b: "src\\App\\Loading\\Loading.tsx" }, { a: "var Loading|817", b: "var Content|2" }, { a: "var { Div }|818", b: "src\\App\\Shop\\Shop.tsx" }, { a: "var Background|819", b: "src\\App\\Shop\\Shop.tsx" }, { a: "var Background|819", b: "var Shop|820" }, { a: "var Shop|820", b: "src\\App\\Shop\\Shop.tsx" }, { a: "var Shop|820", b: "var Content|2" }, { a: "var { Div }|821", b: "src\\App\\Suspense\\Suspense.tsx" }, { a: "var Before|822", b: "src\\App\\Suspense\\Suspense.tsx" }, { a: "var Before|822", b: "var Content|2" }, { a: "var After|823", b: "src\\App\\Suspense\\Suspense.tsx" }, { a: "var After|823", b: "var Content|2" }, { a: "class BasketProduct|824", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "class BasketProduct|824", b: "class Basket|12" }, { a: "class BasketProduct|824", b: "member products|14" }, { a: "class BasketProduct|824", b: "member getProduct|16" }, { a: "member amount|825", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member amount|825", b: "class BasketProduct|824" }, { a: "member amount|825", b: "member addAmount|829" }, { a: "member amount|825", b: "member increaseAmount|830" }, { a: "member amount|825", b: "member decreaseAmount|831" }, { a: "member product|826", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member product|826", b: "class BasketProduct|824" }, { a: "member product|826", b: "member isMatch|828" }, { a: "member product|826", b: "member remove|832" }, { a: "member product|826", b: "class Basket|12" }, { a: "member product|826", b: "member removeProduct|17" }, { a: "member method|827", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member method|827", b: "class BasketProduct|824" }, { a: "member method|827", b: "member isMatch|828" }, { a: "member isMatch|828", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member isMatch|828", b: "class Basket|12" }, { a: "member isMatch|828", b: "member getProduct|16" }, { a: "member isMatch|828", b: "class BasketProduct|824" }, { a: "member addAmount|829", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member addAmount|829", b: "class ProductVm|786" }, { a: "member addAmount|829", b: "member pushToBasket|801" }, { a: "member addAmount|829", b: "class BasketProduct|824" }, { a: "member increaseAmount|830", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member increaseAmount|830", b: "class BasketProduct|824" }, { a: "member decreaseAmount|831", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member decreaseAmount|831", b: "class BasketProduct|824" }, { a: "member remove|832", b: "src\\api\\Basket\\BasketProduct.ts" }, { a: "member remove|832", b: "class BasketProduct|824" }, { a: "class Suspense|833", b: "src\\api\\Engine\\Suspense.ts" }, { a: "class Suspense|833", b: "class Engine|27" }, { a: "class Suspense|833", b: "member suspense|31" }, { a: "member isEnabled|834", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member isEnabled|834", b: "class Suspense|833" }, { a: "member isEnabled|834", b: "member setData|839" }, { a: "member isEnabled|834", b: "member isPreShop|840" }, { a: "member isEnabled|834", b: "member isPostShop|841" }, { a: "member startTime|835", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member startTime|835", b: "class Suspense|833" }, { a: "member startTime|835", b: "member setData|839" }, { a: "member startTime|835", b: "member isPreShop|840" }, { a: "member endTime|836", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member endTime|836", b: "class Suspense|833" }, { a: "member endTime|836", b: "member setData|839" }, { a: "member endTime|836", b: "member isPostShop|841" }, { a: "member beforeImage|837", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member beforeImage|837", b: "class Suspense|833" }, { a: "member beforeImage|837", b: "member setData|839" }, { a: "member beforeImage|837", b: "var Before|822" }, { a: "member afterImage|838", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member afterImage|838", b: "class Suspense|833" }, { a: "member afterImage|838", b: "member setData|839" }, { a: "member afterImage|838", b: "var After|823" }, { a: "member setData|839", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member setData|839", b: "class Engine|27" }, { a: "member setData|839", b: "member loadLayout|38" }, { a: "member setData|839", b: "class Suspense|833" }, { a: "member isPreShop|840", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member isPreShop|840", b: "var Content|2" }, { a: "member isPreShop|840", b: "class Suspense|833" }, { a: "member isPostShop|841", b: "src\\api\\Engine\\Suspense.ts" }, { a: "member isPostShop|841", b: "var Content|2" }, { a: "member isPostShop|841", b: "class Suspense|833" }, { a: "type_alias Dict|842", b: "src\\api\\Lang\\Dict.ts" }, { a: "type_alias Dict|842", b: "class DictAccessor|844" }, { a: "type_alias Dict|842", b: "member set|848" }, { a: "type_alias Dict|842", b: "method set|851" }, { a: "type_alias Dict|842", b: "member tryGet|849" }, { a: "type_alias Dict|842", b: "method tryGet|852" }, { a: "type_alias Dict|842", b: "member get|850" }, { a: "type_alias Dict|842", b: "method get|853" }, { a: "type_alias Dict|842", b: "class Lang|54" }, { a: "type_alias Dict|842", b: "member extendDictionary|62" }, { a: "var defaultDict|843", b: "src\\api\\Lang\\Dict.ts" }, { a: "var defaultDict|843", b: "type_alias Dict|842" }, { a: "var defaultDict|843", b: "var fallbackDict|69" }, { a: "class DictAccessor|844", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "class DictAccessor|844", b: "var fallbackDict|69" }, { a: "class DictAccessor|844", b: "class Lang|54" }, { a: "class DictAccessor|844", b: "member dicts|58" }, { a: "class DictAccessor|844", b: "member getDictOf|60" }, { a: "class DictAccessor|844", b: "member dict|63" }, { a: "member atom|845", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "member atom|845", b: "class DictAccessor|844" }, { a: "member atom|845", b: "member set|848" }, { a: "member atom|845", b: "method set|851" }, { a: "member atom|845", b: "member tryGet|849" }, { a: "member atom|845", b: "method tryGet|852" }, { a: "member atom|845", b: "member get|850" }, { a: "member atom|845", b: "method get|853" }, { a: "member dict|846", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "member dict|846", b: "class DictAccessor|844" }, { a: "member dict|846", b: "member set|848" }, { a: "member dict|846", b: "method set|851" }, { a: "member dict|846", b: "member tryGet|849" }, { a: "member dict|846", b: "method tryGet|852" }, { a: "member dict|846", b: "member get|850" }, { a: "member dict|846", b: "method get|853" }, { a: "member dict|846", b: "class Lang|54" }, { a: "member lang|847", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "member lang|847", b: "class DictAccessor|844" }, { a: "member lang|847", b: "member get|850" }, { a: "member lang|847", b: "method get|853" }, { a: "member set|848", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "member set|848", b: "var fallbackDict|69" }, { a: "member set|848", b: "class Lang|54" }, { a: "member set|848", b: "member fetchLanguages|61" }, { a: "member set|848", b: "member extendDictionary|62" }, { a: "member set|848", b: "class DictAccessor|844" }, { a: "member tryGet|849", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "member tryGet|849", b: "class DictAccessor|844" }, { a: "member tryGet|849", b: "method tryGet|852" }, { a: "member tryGet|849", b: "class Lang|54" }, { a: "member tryGet|849", b: "var getHeaders|978" }, { a: "member get|850", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "member get|850", b: "class DictAccessor|844" }, { a: "member get|850", b: "method get|853" }, { a: "member get|850", b: "class SettingsStore|992" }, { a: "member get|850", b: "member optionsLanguages|1001" }, { a: "member get|850", b: "var Settings|991" }, { a: "member get|850", b: "var Menu|989" }, { a: "member get|850", b: "var BasketScreen|1006" }, { a: "member get|850", b: "var B2cStepsNav|974" }, { a: "member get|850", b: "var B2bStepsNav|975" }, { a: "member get|850", b: "var ProductView|1009" }, { a: "member get|850", b: "class CustomBlockStore|1017" }, { a: "member get|850", b: "member header|1022" }, { a: "member get|850", b: "member content|1023" }, { a: "member get|850", b: "var Shop|820" }, { a: "method set|851", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "method set|851", b: "var fallbackDict|69" }, { a: "method set|851", b: "class Lang|54" }, { a: "method set|851", b: "member fetchLanguages|61" }, { a: "method set|851", b: "member extendDictionary|62" }, { a: "method set|851", b: "class DictAccessor|844" }, { a: "method tryGet|852", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "method tryGet|852", b: "class DictAccessor|844" }, { a: "method tryGet|852", b: "member tryGet|849" }, { a: "method tryGet|852", b: "class Lang|54" }, { a: "method tryGet|852", b: "var getHeaders|978" }, { a: "method get|853", b: "src\\api\\Lang\\DictAccessor.ts" }, { a: "method get|853", b: "class DictAccessor|844" }, { a: "method get|853", b: "member get|850" }, { a: "method get|853", b: "class SettingsStore|992" }, { a: "method get|853", b: "member optionsLanguages|1001" }, { a: "method get|853", b: "var Settings|991" }, { a: "method get|853", b: "var Menu|989" }, { a: "method get|853", b: "var BasketScreen|1006" }, { a: "method get|853", b: "var B2cStepsNav|974" }, { a: "method get|853", b: "var B2bStepsNav|975" }, { a: "method get|853", b: "var ProductView|1009" }, { a: "method get|853", b: "class CustomBlockStore|1017" }, { a: "method get|853", b: "member header|1022" }, { a: "method get|853", b: "member content|1023" }, { a: "method get|853", b: "var Shop|820" }, { a: "var getLayout|854", b: "src\\api\\Rest\\queries\\getLayout.ts" }, { a: "var getLayout|854", b: "class Engine|27" }, { a: "var getLayout|854", b: "member loadLayout|38" }, { a: "var getLanguages|855", b: "src\\api\\Rest\\queries\\getLanguages.ts" }, { a: "var getLanguages|855", b: "class Lang|54" }, { a: "var getLanguages|855", b: "member fetchLanguages|61" }, { a: "type_alias ProductType|856", b: "src\\api\\Rest\\queries\\getProducts.ts" }, { a: "type_alias ProductType|856", b: "var getProducts|857" }, { a: "var getProducts|857", b: "src\\api\\Rest\\queries\\getProducts.ts" }, { a: "var getProducts|857", b: "class Stock|757" }, { a: "var getProducts|857", b: "member fetchRest|761" }, { a: "var Languages|858", b: "src\\api\\Rest\\types\\getLanguages.ts" }, { a: "var Languages|858", b: "var getLanguages|855" }, { a: "var Language|859", b: "src\\api\\Rest\\types\\getLayout.ts" }, { a: "var Language|859", b: "var Layout|863" }, { a: "var Currency|860", b: "src\\api\\Rest\\types\\getLayout.ts" }, { a: "var Currency|860", b: "var Layout|863" }, { a: "var LayoutContent|861", b: "src\\api\\Rest\\types\\getLayout.ts" }, { a: "var LayoutContent|861", b: "var Layout|863" }, { a: "var StepNames|862", b: "src\\api\\Rest\\types\\getLayout.ts" }, { a: "var StepNames|862", b: "var Layout|863" }, { a: "var Layout|863", b: "src\\api\\Rest\\types\\getLayout.ts" }, { a: "var Layout|863", b: "var getLayout|854" }, { a: "var PriceId|864", b: "src\\api\\Rest\\types\\getProducts.ts" }, { a: "var PriceId|864", b: "var AmountDescription|865" }, { a: "var AmountDescription|865", b: "src\\api\\Rest\\types\\getProducts.ts" }, { a: "var AmountDescription|865", b: "var ProductTranslation|866" }, { a: "var ProductTranslation|866", b: "src\\api\\Rest\\types\\getProducts.ts" }, { a: "var ProductTranslation|866", b: "var Product|867" }, { a: "var Product|867", b: "src\\api\\Rest\\types\\getProducts.ts" }, { a: "var Product|867", b: "type_alias ProductType|856" }, { a: "var Product|867", b: "var getProducts|857" }, { a: "var IdBasedImage|868", b: "src\\api\\Rest\\types\\Image.ts" }, { a: "var IdBasedImage|868", b: "var Image|870" }, { a: "var Base64Image|869", b: "src\\api\\Rest\\types\\Image.ts" }, { a: "var Base64Image|869", b: "var Image|870" }, { a: "var Image|870", b: "src\\api\\Rest\\types\\Image.ts" }, { a: "var Image|870", b: "var Layout|863" }, { a: "var Image|870", b: "var Product|867" }, { a: "type_alias Input|871", b: "src\\api\\Gql\\queries\\getProducts.ts" }, { a: "type_alias Input|871", b: "var getProducts|872" }, { a: "var getProducts|872", b: "src\\api\\Gql\\queries\\getProducts.ts" }, { a: "var getProducts|872", b: "class Stock|757" }, { a: "var getProducts|872", b: "member fetchGql|760" }, { a: "var getStockInfo|873", b: "src\\api\\Gql\\queries\\getStockInfo.ts" }, { a: "var getStockInfo|873", b: "class Product|764" }, { a: "var getStockInfo|873", b: "member fetch|785" }, { a: "var AllLangs|874", b: "src\\api\\Gql\\types\\getProducts.ts" }, { a: "var AllLangs|874", b: "var Products|877" }, { a: "var AllCurrencies|875", b: "src\\api\\Gql\\types\\getProducts.ts" }, { a: "var AllCurrencies|875", b: "var DeliveryMethodEntry|876" }, { a: "var DeliveryMethodEntry|876", b: "src\\api\\Gql\\types\\getProducts.ts" }, { a: "var DeliveryMethodEntry|876", b: "var Products|877" }, { a: "var Products|877", b: "src\\api\\Gql\\types\\getProducts.ts" }, { a: "var Products|877", b: "var getProducts|872" }, { a: "var StockInfo|878", b: "src\\api\\Gql\\types\\getStockInfo.ts" }, { a: "var StockInfo|878", b: "var getStockInfo|873" }, { a: "class SkuProduct|879", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "class SkuProduct|879", b: "class DeliveryProduct|886" }, { a: "class SkuProduct|879", b: "member skuProducts|889" }, { a: "class SkuProduct|879", b: "member addSkuProduct|893" }, { a: "class SkuProduct|879", b: "class Product|764" }, { a: "class SkuProduct|879", b: "member skuProducts|769" }, { a: "class SkuProduct|879", b: "member setSkuProducts|780" }, { a: "class SkuProduct|879", b: "class Stock|757" }, { a: "class SkuProduct|879", b: "member skuProducts|759" }, { a: "class SkuProduct|879", b: "member fetchGql|760" }, { a: "member inStock|880", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "member inStock|880", b: "class SkuProduct|879" }, { a: "member inStock|880", b: "member setStockStatus|884" }, { a: "member inStock|880", b: "member isVisible|885" }, { a: "member prices|881", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "member prices|881", b: "class SkuProduct|879" }, { a: "member prices|881", b: "member isVisible|885" }, { a: "member prices|881", b: "class DeliveryProduct|886" }, { a: "member prices|881", b: "member prices|898" }, { a: "member prices|881", b: "class Stock|757" }, { a: "member prices|881", b: "member fetchGql|760" }, { a: "member sku|882", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "member sku|882", b: "class Product|764" }, { a: "member sku|882", b: "member fetch|785" }, { a: "member sku|882", b: "class SkuProduct|879" }, { a: "member deliveryMethod|883", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "member deliveryMethod|883", b: "class DeliveryProduct|886" }, { a: "member deliveryMethod|883", b: "member prices|898" }, { a: "member deliveryMethod|883", b: "class Product|764" }, { a: "member deliveryMethod|883", b: "member setSkuProducts|780" }, { a: "member deliveryMethod|883", b: "member fetch|785" }, { a: "member deliveryMethod|883", b: "class SkuProduct|879" }, { a: "member setStockStatus|884", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "member setStockStatus|884", b: "class Product|764" }, { a: "member setStockStatus|884", b: "member fetch|785" }, { a: "member setStockStatus|884", b: "class SkuProduct|879" }, { a: "member isVisible|885", b: "src\\api\\Stock\\SkuProduct.ts" }, { a: "member isVisible|885", b: "class DeliveryProduct|886" }, { a: "member isVisible|885", b: "member isPossible|895" }, { a: "member isVisible|885", b: "member prices|898" }, { a: "member isVisible|885", b: "class Product|764" }, { a: "member isVisible|885", b: "member isVisible|782" }, { a: "member isVisible|885", b: "class SkuProduct|879" }, { a: "class DeliveryProduct|886", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "class DeliveryProduct|886", b: "class Product|764" }, { a: "class DeliveryProduct|886", b: "member delivery|773" }, { a: "member preview|887", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member preview|887", b: "class ProductVm|786" }, { a: "member preview|887", b: "member productPreview|791" }, { a: "member preview|887", b: "class DeliveryProduct|886" }, { a: "member preview|887", b: "member setPreview|899" }, { a: "member isEnabled|888", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member isEnabled|888", b: "class DeliveryProduct|886" }, { a: "member isEnabled|888", b: "member enable|894" }, { a: "member isEnabled|888", b: "member isPossible|895" }, { a: "member skuProducts|889", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member skuProducts|889", b: "class DeliveryProduct|886" }, { a: "member skuProducts|889", b: "member addSkuProduct|893" }, { a: "member skuProducts|889", b: "member isPossible|895" }, { a: "member skuProducts|889", b: "member prices|898" }, { a: "member priceLabels|890", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member priceLabels|890", b: "class DeliveryProduct|886" }, { a: "member priceLabels|890", b: "member addPriceLabel|896" }, { a: "member priceLabels|890", b: "member getPriceLabel|897" }, { a: "member method|891", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member method|891", b: "class DeliveryProduct|886" }, { a: "member method|891", b: "member prices|898" }, { a: "member product|892", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member product|892", b: "class DeliveryProduct|886" }, { a: "member addSkuProduct|893", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member addSkuProduct|893", b: "class Product|764" }, { a: "member addSkuProduct|893", b: "member setSkuProducts|780" }, { a: "member addSkuProduct|893", b: "class DeliveryProduct|886" }, { a: "member enable|894", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member enable|894", b: "class Product|764" }, { a: "member enable|894", b: "member setDelivery|781" }, { a: "member enable|894", b: "class DeliveryProduct|886" }, { a: "member isPossible|895", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member isPossible|895", b: "class ProductVm|786" }, { a: "member isPossible|895", b: "member setAnyDeliveryMethod|792" }, { a: "member isPossible|895", b: "class DeliveryProduct|886" }, { a: "member isPossible|895", b: "member prices|898" }, { a: "member isPossible|895", b: "class Product|764" }, { a: "member isPossible|895", b: "member isVisible|782" }, { a: "member isPossible|895", b: "var DeliverySelector|1016" }, { a: "member addPriceLabel|896", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member addPriceLabel|896", b: "class Stock|757" }, { a: "member addPriceLabel|896", b: "member fetchRest|761" }, { a: "member addPriceLabel|896", b: "class DeliveryProduct|886" }, { a: "member getPriceLabel|897", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member getPriceLabel|897", b: "class ProductVm|786" }, { a: "member getPriceLabel|897", b: "member pricesWithLabels|795" }, { a: "member getPriceLabel|897", b: "class DeliveryProduct|886" }, { a: "member prices|898", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member prices|898", b: "class ProductVm|786" }, { a: "member prices|898", b: "member prices|796" }, { a: "member prices|898", b: "class DeliveryProduct|886" }, { a: "member setPreview|899", b: "src\\api\\Stock\\DeliveryProduct.ts" }, { a: "member setPreview|899", b: "class Stock|757" }, { a: "member setPreview|899", b: "member fetchRest|761" }, { a: "member setPreview|899", b: "class DeliveryProduct|886" }, { a: "type_alias Props|900", b: "src\\lib\\Icon\\Icon.tsx" }, { a: "type_alias Props|900", b: "var possibleSizes|901" }, { a: "type_alias Props|900", b: "var RawIcon|903" }, { a: "var possibleSizes|901", b: "src\\lib\\Icon\\Icon.tsx" }, { a: "var possibleSizes|901", b: "var RawIcon|903" }, { a: "var { Div }|902", b: "src\\lib\\Icon\\Icon.tsx" }, { a: "var RawIcon|903", b: "src\\lib\\Icon\\Icon.tsx" }, { a: "var RawIcon|903", b: "var Icon|904" }, { a: "var Icon|904", b: "src\\lib\\Icon\\Icon.tsx" }, { a: "var Icon|904", b: "var Button|907" }, { a: "var Icon|904", b: "var Settings|991" }, { a: "var Icon|904", b: "var Menu|989" }, { a: "var Icon|904", b: "var LeftBar|956" }, { a: "var Icon|904", b: "var BasketScreen|1006" }, { a: "var Icon|904", b: "var Basket|963" }, { a: "var Icon|904", b: "var Header|971" }, { a: "var Icon|904", b: "var ProductView|1009" }, { a: "type_alias Props|905", b: "src\\lib\\Button\\Button.tsx" }, { a: "type_alias Props|905", b: "var Button|907" }, { a: "var { Div }|906", b: "src\\lib\\Button\\Button.tsx" }, { a: "var Button|907", b: "src\\lib\\Button\\Button.tsx" }, { a: "var Button|907", b: "var Settings|991" }, { a: "var Button|907", b: "var BasketScreen|1006" }, { a: "var Button|907", b: "var DeliverySelector|1016" }, { a: "var Button|907", b: "var ProductView|1009" }, { a: "var Button|907", b: "var Shop|820" }, { a: "class Select|908", b: "src\\lib\\Select\\Select.tsx" }, { a: "class Select|908", b: "var Settings|991" }, { a: "class Select|908", b: "var ProductView|1009" }, { a: "member state|909", b: "src\\lib\\Select\\Select.tsx" }, { a: "member state|909", b: "class Select|908" }, { a: "member state|909", b: "member close|912" }, { a: "member state|909", b: "member open|913" }, { a: "member state|909", b: "member selectHovered|915" }, { a: "member state|909", b: "member render|923" }, { a: "member state|909", b: "method render|925" }, { a: "member state|909", b: "class Input|929" }, { a: "member state|909", b: "member state|930" }, { a: "member state|909", b: "member render|934" }, { a: "member state|909", b: "method render|935" }, { a: "member rootDiv|910", b: "src\\lib\\Select\\Select.tsx" }, { a: "member rootDiv|910", b: "class Select|908" }, { a: "member rootDiv|910", b: "member clickOutside|918" }, { a: "member rootDiv|910", b: "member render|923" }, { a: "member rootDiv|910", b: "method render|925" }, { a: "member change|911", b: "src\\lib\\Select\\Select.tsx" }, { a: "member change|911", b: "class Select|908" }, { a: "member close|912", b: "src\\lib\\Select\\Select.tsx" }, { a: "member close|912", b: "class Select|908" }, { a: "member close|912", b: "member selectHovered|915" }, { a: "member close|912", b: "member clickOutside|918" }, { a: "member close|912", b: "member keyboardNavigation|919" }, { a: "member close|912", b: "member delegateSetValue|921" }, { a: "member close|912", b: "member render|923" }, { a: "member close|912", b: "method render|925" }, { a: "member open|913", b: "src\\lib\\Select\\Select.tsx" }, { a: "member open|913", b: "class Select|908" }, { a: "member open|913", b: "member render|923" }, { a: "member open|913", b: "method render|925" }, { a: "member hoverMove|914", b: "src\\lib\\Select\\Select.tsx" }, { a: "member hoverMove|914", b: "class Select|908" }, { a: "member hoverMove|914", b: "member keyboardNavigation|919" }, { a: "member selectHovered|915", b: "src\\lib\\Select\\Select.tsx" }, { a: "member selectHovered|915", b: "class Select|908" }, { a: "member selectHovered|915", b: "member setByIndex|917" }, { a: "member selectHovered|915", b: "member keyboardNavigation|919" }, { a: "member hoverByIndex|916", b: "src\\lib\\Select\\Select.tsx" }, { a: "member hoverByIndex|916", b: "class Select|908" }, { a: "member hoverByIndex|916", b: "member render|923" }, { a: "member hoverByIndex|916", b: "method render|925" }, { a: "member setByIndex|917", b: "src\\lib\\Select\\Select.tsx" }, { a: "member setByIndex|917", b: "class Select|908" }, { a: "member clickOutside|918", b: "src\\lib\\Select\\Select.tsx" }, { a: "member clickOutside|918", b: "class Select|908" }, { a: "member clickOutside|918", b: "member close|912" }, { a: "member clickOutside|918", b: "member open|913" }, { a: "member keyboardNavigation|919", b: "src\\lib\\Select\\Select.tsx" }, { a: "member keyboardNavigation|919", b: "class Select|908" }, { a: "member keyboardNavigation|919", b: "member close|912" }, { a: "member keyboardNavigation|919", b: "member open|913" }, { a: "member setRawValue|920", b: "src\\lib\\Select\\Select.tsx" }, { a: "member setRawValue|920", b: "class Select|908" }, { a: "member setRawValue|920", b: "member change|911" }, { a: "member setRawValue|920", b: "member selectHovered|915" }, { a: "member setRawValue|920", b: "member delegateSetValue|921" }, { a: "member setRawValue|920", b: "member componentDidMount|922" }, { a: "member setRawValue|920", b: "method componentDidMount|924" }, { a: "member delegateSetValue|921", b: "src\\lib\\Select\\Select.tsx" }, { a: "member delegateSetValue|921", b: "class Select|908" }, { a: "member delegateSetValue|921", b: "member render|923" }, { a: "member delegateSetValue|921", b: "method render|925" }, { a: "member componentDidMount|922", b: "src\\lib\\Select\\Select.tsx" }, { a: "member componentDidMount|922", b: "class Input|929" }, { a: "member componentDidMount|922", b: "member componentDidMount|932" }, { a: "member componentDidMount|922", b: "class Select|908" }, { a: "member render|923", b: "src\\lib\\Select\\Select.tsx" }, { a: "member render|923", b: "class Input|929" }, { a: "member render|923", b: "member render|934" }, { a: "member render|923", b: "method render|935" }, { a: "member render|923", b: "class Select|908" }, { a: "method componentDidMount|924", b: "src\\lib\\Select\\Select.tsx" }, { a: "method componentDidMount|924", b: "class Input|929" }, { a: "method componentDidMount|924", b: "member componentDidMount|932" }, { a: "method componentDidMount|924", b: "class Select|908" }, { a: "method render|925", b: "src\\lib\\Select\\Select.tsx" }, { a: "method render|925", b: "class Input|929" }, { a: "method render|925", b: "member render|934" }, { a: "method render|925", b: "method render|935" }, { a: "method render|925", b: "class Select|908" }, { a: "type_alias Props|926", b: "src\\lib\\Select\\Select.tsx" }, { a: "type_alias Props|926", b: "class Select|908" }, { a: "type_alias State|927", b: "src\\lib\\Select\\Select.tsx" }, { a: "type_alias State|927", b: "class Select|908" }, { a: "type_alias State|927", b: "member state|909" }, { a: "var { Div }|928", b: "src\\lib\\Select\\Select.tsx" }, { a: "class Input|929", b: "src\\lib\\Input\\Input.tsx" }, { a: "member state|930", b: "src\\lib\\Input\\Input.tsx" }, { a: "member state|930", b: "class Select|908" }, { a: "member state|930", b: "member state|909" }, { a: "member state|930", b: "member close|912" }, { a: "member state|930", b: "member open|913" }, { a: "member state|930", b: "member selectHovered|915" }, { a: "member state|930", b: "member render|923" }, { a: "member state|930", b: "method render|925" }, { a: "member state|930", b: "class Input|929" }, { a: "member state|930", b: "member render|934" }, { a: "member state|930", b: "method render|935" }, { a: "member id|931", b: "src\\lib\\Input\\Input.tsx" }, { a: "member id|931", b: "class Input|929" }, { a: "member id|931", b: "member render|934" }, { a: "member id|931", b: "method render|935" }, { a: "member componentDidMount|932", b: "src\\lib\\Input\\Input.tsx" }, { a: "member componentDidMount|932", b: "class Select|908" }, { a: "member componentDidMount|932", b: "member componentDidMount|922" }, { a: "member componentDidMount|932", b: "method componentDidMount|924" }, { a: "member componentDidMount|932", b: "class Input|929" }, { a: "member componentDidUpdate|933", b: "src\\lib\\Input\\Input.tsx" }, { a: "member componentDidUpdate|933", b: "class Input|929" }, { a: "member render|934", b: "src\\lib\\Input\\Input.tsx" }, { a: "member render|934", b: "class Select|908" }, { a: "member render|934", b: "member render|923" }, { a: "member render|934", b: "method render|925" }, { a: "member render|934", b: "class Input|929" }, { a: "method render|935", b: "src\\lib\\Input\\Input.tsx" }, { a: "method render|935", b: "class Select|908" }, { a: "method render|935", b: "member render|923" }, { a: "method render|935", b: "method render|925" }, { a: "method render|935", b: "class Input|929" }, { a: "type_alias Props|936", b: "src\\lib\\Input\\Input.tsx" }, { a: "type_alias Props|936", b: "class Input|929" }, { a: "type_alias Props|936", b: "member componentDidUpdate|933" }, { a: "type_alias State|937", b: "src\\lib\\Input\\Input.tsx" }, { a: "type_alias State|937", b: "class Input|929" }, { a: "type_alias State|937", b: "member state|930" }, { a: "var id|938", b: "src\\lib\\Input\\Input.tsx" }, { a: "var id|938", b: "class Input|929" }, { a: "var errorColour|939", b: "src\\lib\\Input\\Input.tsx" }, { a: "var errorColour|939", b: "class Input|929" }, { a: "var errorColour|939", b: "member componentDidUpdate|933" }, { a: "var errorColour|939", b: "member render|934" }, { a: "var errorColour|939", b: "method render|935" }, { a: "var Scroll|940", b: "src\\lib\\Scroll\\Scroll.tsx" }, { a: "var Scroll|940", b: "class Select|908" }, { a: "var Scroll|940", b: "member render|923" }, { a: "var Scroll|940", b: "method render|925" }, { a: "var Scroll|940", b: "var CustomBlock|1013" }, { a: "class Prices|941", b: "src\\api\\Stock\\Prices.ts" }, { a: "class Prices|941", b: "class SkuProduct|879" }, { a: "class Prices|941", b: "member prices|881" }, { a: "member prices|942", b: "src\\api\\Stock\\Prices.ts" }, { a: "member prices|942", b: "class Prices|941" }, { a: "member prices|942", b: "member clear|943" }, { a: "member prices|942", b: "member get|944" }, { a: "member prices|942", b: "member getOrCreate|945" }, { a: "member prices|942", b: "member all|946" }, { a: "member clear|943", b: "src\\api\\Stock\\Prices.ts" }, { a: "member clear|943", b: "class Prices|941" }, { a: "member clear|943", b: "member setSimple|947" }, { a: "member clear|943", b: "member setSteps|948" }, { a: "member get|944", b: "src\\api\\Stock\\Prices.ts" }, { a: "member get|944", b: "class Prices|941" }, { a: "member getOrCreate|945", b: "src\\api\\Stock\\Prices.ts" }, { a: "member getOrCreate|945", b: "class Prices|941" }, { a: "member getOrCreate|945", b: "member setSimple|947" }, { a: "member getOrCreate|945", b: "member setSteps|948" }, { a: "member all|946", b: "src\\api\\Stock\\Prices.ts" }, { a: "member all|946", b: "class SkuProduct|879" }, { a: "member all|946", b: "member isVisible|885" }, { a: "member all|946", b: "class DeliveryProduct|886" }, { a: "member all|946", b: "member prices|898" }, { a: "member all|946", b: "class Prices|941" }, { a: "member setSimple|947", b: "src\\api\\Stock\\Prices.ts" }, { a: "member setSimple|947", b: "class Stock|757" }, { a: "member setSimple|947", b: "member fetchGql|760" }, { a: "member setSimple|947", b: "class Prices|941" }, { a: "member setSteps|948", b: "src\\api\\Stock\\Prices.ts" }, { a: "member setSteps|948", b: "class Stock|757" }, { a: "member setSteps|948", b: "member fetchGql|760" }, { a: "member setSteps|948", b: "class Prices|941" }, { a: "type_alias RawPrices|949", b: "src\\api\\Stock\\Prices.ts" }, { a: "type_alias RawPrices|949", b: "class Prices|941" }, { a: "type_alias RawPrices|949", b: "member setSimple|947" }, { a: "type_alias RawPrices|949", b: "member setSteps|948" }, { a: "type_alias Props|950", b: "src\\lib\\Logic\\If\\If.tsx" }, { a: "type_alias Props|950", b: "var If|951" }, { a: "var If|951", b: "src\\lib\\Logic\\If\\If.tsx" }, { a: "var If|951", b: "var ProductView|1009" }, { a: "type_alias Props|952", b: "src\\lib\\Logic\\If\\Each.tsx" }, { a: "type_alias Props|952", b: "type_alias EachType|953" }, { a: "type_alias Props|952", b: "var Each|954" }, { a: "type_alias EachType|953", b: "src\\lib\\Logic\\If\\Each.tsx" }, { a: "type_alias EachType|953", b: "var Each|954" }, { a: "var Each|954", b: "src\\lib\\Logic\\If\\Each.tsx" }, { a: "var { Div }|955", b: "src\\App\\Shop\\LeftBar\\LeftBar.tsx" }, { a: "var LeftBar|956", b: "src\\App\\Shop\\LeftBar\\LeftBar.tsx" }, { a: "var LeftBar|956", b: "var Shop|820" }, { a: "class LeftBarStore|957", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "class LeftBarStore|957", b: "var leftBarStore|961" }, { a: "member isVisible|958", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "member isVisible|958", b: "class LeftBarStore|957" }, { a: "member isVisible|958", b: "member open|959" }, { a: "member isVisible|958", b: "member close|960" }, { a: "member isVisible|958", b: "var Menu|989" }, { a: "member isVisible|958", b: "var LeftBar|956" }, { a: "member open|959", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "member open|959", b: "var LeftBar|956" }, { a: "member open|959", b: "var Header|971" }, { a: "member open|959", b: "class LeftBarStore|957" }, { a: "member close|960", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "member close|960", b: "var Menu|989" }, { a: "member close|960", b: "class LeftBarStore|957" }, { a: "var leftBarStore|961", b: "src\\App\\Shop\\LeftBar\\LeftBar.store.ts" }, { a: "var leftBarStore|961", b: "var Menu|989" }, { a: "var leftBarStore|961", b: "var LeftBar|956" }, { a: "var leftBarStore|961", b: "var Header|971" }, { a: "var { Div }|962", b: "src\\App\\Shop\\Basket\\Basket.tsx" }, { a: "var Basket|963", b: "src\\App\\Shop\\Basket\\Basket.tsx" }, { a: "var Basket|963", b: "var Shop|820" }, { a: "class BasketStore|964", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "class BasketStore|964", b: "var basketStore|969" }, { a: "member isVisible|965", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "member isVisible|965", b: "class BasketStore|964" }, { a: "member isVisible|965", b: "member open|966" }, { a: "member isVisible|965", b: "member close|967" }, { a: "member isVisible|965", b: "var Basket|963" }, { a: "member isVisible|965", b: "var Header|971" }, { a: "member open|966", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "member open|966", b: "var Basket|963" }, { a: "member open|966", b: "var Header|971" }, { a: "member open|966", b: "class BasketStore|964" }, { a: "member close|967", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "member close|967", b: "var BasketScreen|1006" }, { a: "member close|967", b: "class BasketStore|964" }, { a: "member count|968", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "member count|968", b: "var Basket|963" }, { a: "member count|968", b: "class BasketStore|964" }, { a: "var basketStore|969", b: "src\\App\\Shop\\Basket\\Basket.store.ts" }, { a: "var basketStore|969", b: "var BasketScreen|1006" }, { a: "var basketStore|969", b: "var Basket|963" }, { a: "var basketStore|969", b: "var Header|971" }, { a: "var { Div }|970", b: "src\\App\\Shop\\Header\\Header.tsx" }, { a: "var Header|971", b: "src\\App\\Shop\\Header\\Header.tsx" }, { a: "var Header|971", b: "var Shop|820" }, { a: "var { Div }|972", b: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { a: "var goToStep|973", b: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { a: "var goToStep|973", b: "var B2cStepsNav|974" }, { a: "var goToStep|973", b: "var B2bStepsNav|975" }, { a: "var B2cStepsNav|974", b: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { a: "var B2cStepsNav|974", b: "var StepsNav|976" }, { a: "var B2bStepsNav|975", b: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { a: "var B2bStepsNav|975", b: "var StepsNav|976" }, { a: "var StepsNav|976", b: "src\\App\\Shop\\StepsNav\\StepsNav.tsx" }, { a: "var StepsNav|976", b: "var Shop|820" }, { a: "var { Div }|977", b: "src\\App\\Shop\\StepHeader\\StepHeader.tsx" }, { a: "var getHeaders|978", b: "src\\App\\Shop\\StepHeader\\StepHeader.tsx" }, { a: "var getHeaders|978", b: "var StepHeader|979" }, { a: "var StepHeader|979", b: "src\\App\\Shop\\StepHeader\\StepHeader.tsx" }, { a: "var StepHeader|979", b: "var Shop|820" }, { a: "var { Div }|980", b: "src\\App\\Shop\\StepProducts\\StepProducts.tsx" }, { a: "var StepProducts|981", b: "src\\App\\Shop\\StepProducts\\StepProducts.tsx" }, { a: "var StepProducts|981", b: "var Shop|820" }, { a: "class Price|982", b: "src\\api\\Stock\\Price.ts" }, { a: "class Price|982", b: "class Prices|941" }, { a: "class Price|982", b: "member prices|942" }, { a: "class Price|982", b: "member getOrCreate|945" }, { a: "member prices|983", b: "src\\api\\Stock\\Price.ts" }, { a: "member prices|983", b: "class Price|982" }, { a: "member prices|983", b: "member setValue|984" }, { a: "member prices|983", b: "member isValid|985" }, { a: "member prices|983", b: "member forHuman|986" }, { a: "member setValue|984", b: "src\\api\\Stock\\Price.ts" }, { a: "member setValue|984", b: "class Prices|941" }, { a: "member setValue|984", b: "member setSimple|947" }, { a: "member setValue|984", b: "member setSteps|948" }, { a: "member setValue|984", b: "class Price|982" }, { a: "member isValid|985", b: "src\\api\\Stock\\Price.ts" }, { a: "member isValid|985", b: "class Prices|941" }, { a: "member isValid|985", b: "member all|946" }, { a: "member isValid|985", b: "class Price|982" }, { a: "member forHuman|986", b: "src\\api\\Stock\\Price.ts" }, { a: "member forHuman|986", b: "class ProductVm|786" }, { a: "member forHuman|986", b: "member prices|796" }, { a: "member forHuman|986", b: "class Price|982" }, { a: "type_alias CurrencyCode|987", b: "src\\api\\Stock\\Price.ts" }, { a: "type_alias CurrencyCode|987", b: "class Price|982" }, { a: "type_alias CurrencyCode|987", b: "member prices|983" }, { a: "type_alias CurrencyCode|987", b: "member setValue|984" }, { a: "var { Div }|988", b: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx" }, { a: "var Menu|989", b: "src\\App\\Shop\\LeftBar\\Menu\\Menu.tsx" }, { a: "var Menu|989", b: "var LeftBar|956" }, { a: "var { Div }|990", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx" }, { a: "var Settings|991", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.tsx" }, { a: "var Settings|991", b: "var LeftBar|956" }, { a: "class SettingsStore|992", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "class SettingsStore|992", b: "var settingsStore|1003" }, { a: "member isActive|993", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member isActive|993", b: "class SettingsStore|992" }, { a: "member isActive|993", b: "member open|996" }, { a: "member isActive|993", b: "member close|997" }, { a: "member isActive|993", b: "var Settings|991" }, { a: "member selectedLang|994", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member selectedLang|994", b: "class SettingsStore|992" }, { a: "member selectedLang|994", b: "member open|996" }, { a: "member selectedLang|994", b: "member close|997" }, { a: "member selectedLang|994", b: "member selectLang|998" }, { a: "member selectedLang|994", b: "member save|1000" }, { a: "member selectedLang|994", b: "var Settings|991" }, { a: "member selectedCurrency|995", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member selectedCurrency|995", b: "class SettingsStore|992" }, { a: "member selectedCurrency|995", b: "member open|996" }, { a: "member selectedCurrency|995", b: "member close|997" }, { a: "member selectedCurrency|995", b: "member selectCurrency|999" }, { a: "member selectedCurrency|995", b: "member save|1000" }, { a: "member selectedCurrency|995", b: "var Settings|991" }, { a: "member open|996", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member open|996", b: "var Menu|989" }, { a: "member open|996", b: "class SettingsStore|992" }, { a: "member close|997", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member close|997", b: "class SettingsStore|992" }, { a: "member close|997", b: "member save|1000" }, { a: "member close|997", b: "var Settings|991" }, { a: "member close|997", b: "class LeftBarStore|957" }, { a: "member close|997", b: "member close|960" }, { a: "member selectLang|998", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member selectLang|998", b: "var Settings|991" }, { a: "member selectLang|998", b: "class SettingsStore|992" }, { a: "member selectCurrency|999", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member selectCurrency|999", b: "var Settings|991" }, { a: "member selectCurrency|999", b: "class SettingsStore|992" }, { a: "member save|1000", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member save|1000", b: "var Settings|991" }, { a: "member save|1000", b: "class SettingsStore|992" }, { a: "member optionsLanguages|1001", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member optionsLanguages|1001", b: "var Settings|991" }, { a: "member optionsLanguages|1001", b: "class SettingsStore|992" }, { a: "member optionsCurrencies|1002", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "member optionsCurrencies|1002", b: "var Settings|991" }, { a: "member optionsCurrencies|1002", b: "class SettingsStore|992" }, { a: "var settingsStore|1003", b: "src\\App\\Shop\\LeftBar\\Settings\\Settings.store.ts" }, { a: "var settingsStore|1003", b: "var Settings|991" }, { a: "var settingsStore|1003", b: "class LeftBarStore|957" }, { a: "var settingsStore|1003", b: "member close|960" }, { a: "var settingsStore|1003", b: "var Menu|989" }, { a: "var { Div }|1004", b: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx" }, { a: "var Background|1005", b: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx" }, { a: "var Background|1005", b: "var BasketScreen|1006" }, { a: "var BasketScreen|1006", b: "src\\App\\Shop\\Basket\\BasketScreen\\BasketScreen.tsx" }, { a: "var BasketScreen|1006", b: "var Basket|963" }, { a: "type_alias Props|1007", b: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx" }, { a: "type_alias Props|1007", b: "var ProductView|1009" }, { a: "type_alias Props|1007", b: "var Product|1010" }, { a: "var { Div }|1008", b: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx" }, { a: "var ProductView|1009", b: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx" }, { a: "var ProductView|1009", b: "var Product|1010" }, { a: "var Product|1010", b: "src\\App\\Shop\\StepProducts\\Product\\Product.tsx" }, { a: "var Product|1010", b: "var StepProducts|981" }, { a: "var { Div }|1011", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx" }, { a: "var CustomBlockImages|1012", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx" }, { a: "var CustomBlockImages|1012", b: "var CustomBlock|1013" }, { a: "var CustomBlock|1013", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.tsx" }, { a: "var CustomBlock|1013", b: "var StepProducts|981" }, { a: "var getLinks|1014", b: "src\\App\\Shop\\LeftBar\\Menu\\links.ts" }, { a: "var getLinks|1014", b: "var Menu|989" }, { a: "type_alias Props|1015", b: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx" }, { a: "type_alias Props|1015", b: "var DeliverySelector|1016" }, { a: "var DeliverySelector|1016", b: "src\\App\\Shop\\StepProducts\\Product\\DeliverySelector.tsx" }, { a: "var DeliverySelector|1016", b: "var ProductView|1009" }, { a: "class CustomBlockStore|1017", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "class CustomBlockStore|1017", b: "var customBlockStore|1032" }, { a: "member imagesSlider|1018", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member imagesSlider|1018", b: "class CustomBlockStore|1017" }, { a: "member imagesSlider|1018", b: "member images|1031" }, { a: "member sliderInterval|1019", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member sliderInterval|1019", b: "class CustomBlockStore|1017" }, { a: "member sliderInterval|1019", b: "member clearTicker|1028" }, { a: "member sliderInterval|1019", b: "member startTicking|1029" }, { a: "member currentStep|1020", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member currentStep|1020", b: "class CustomBlockStore|1017" }, { a: "member currentStep|1020", b: "member goToNextStep|1027" }, { a: "member currentStep|1020", b: "member startTicking|1029" }, { a: "member currentStep|1020", b: "member images|1031" }, { a: "member maxStep|1021", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member maxStep|1021", b: "class CustomBlockStore|1017" }, { a: "member maxStep|1021", b: "member getPrevStep|1025" }, { a: "member maxStep|1021", b: "member getNextStep|1026" }, { a: "member maxStep|1021", b: "member images|1031" }, { a: "member header|1022", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member header|1022", b: "var CustomBlock|1013" }, { a: "member header|1022", b: "class CustomBlockStore|1017" }, { a: "member content|1023", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member content|1023", b: "var CustomBlock|1013" }, { a: "member content|1023", b: "class CustomBlockStore|1017" }, { a: "member sanitizeHtml|1024", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member sanitizeHtml|1024", b: "class CustomBlockStore|1017" }, { a: "member sanitizeHtml|1024", b: "member header|1022" }, { a: "member sanitizeHtml|1024", b: "member content|1023" }, { a: "member getPrevStep|1025", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member getPrevStep|1025", b: "class CustomBlockStore|1017" }, { a: "member getPrevStep|1025", b: "member images|1031" }, { a: "member getNextStep|1026", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member getNextStep|1026", b: "class CustomBlockStore|1017" }, { a: "member getNextStep|1026", b: "member goToNextStep|1027" }, { a: "member goToNextStep|1027", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member goToNextStep|1027", b: "class CustomBlockStore|1017" }, { a: "member goToNextStep|1027", b: "member startTicking|1029" }, { a: "member clearTicker|1028", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member clearTicker|1028", b: "class CustomBlockStore|1017" }, { a: "member clearTicker|1028", b: "member imagesSlider|1018" }, { a: "member startTicking|1029", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member startTicking|1029", b: "class CustomBlockStore|1017" }, { a: "member startTicking|1029", b: "member imagesSlider|1018" }, { a: "member isImagesLoading|1030", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member isImagesLoading|1030", b: "var CustomBlockImages|1012" }, { a: "member isImagesLoading|1030", b: "class CustomBlockStore|1017" }, { a: "member images|1031", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "member images|1031", b: "var CustomBlockImages|1012" }, { a: "member images|1031", b: "class CustomBlockStore|1017" }, { a: "var customBlockStore|1032", b: "src\\App\\Shop\\StepProducts\\CustomBlock\\CustomBlock.store.ts" }, { a: "var customBlockStore|1032", b: "var CustomBlockImages|1012" }, { a: "var customBlockStore|1032", b: "var CustomBlock|1013" }];
var data_mine_default = { nodes, edges };

// src/Tree.tsx
var import_react = __toESM(require_react());
var createTree = (data, sigma) => {
  const tree = /* @__PURE__ */ new Set();
  data.nodes.forEach((el) => {
    if (!el.file) {
      return;
    }
    const parts = el.file.split(/(\/|\\)/g);
    const cwd = [];
    for (const part of parts) {
      cwd.push(part);
      tree.add(cwd.join("\\"));
    }
  });
  console.log(tree);
  return class Tree extends import_react.default.Component {
    render() {
      return "Hello";
    }
  };
};

export {
  __toESM,
  require_react,
  require_react_dom,
  require_sigma2 as require_sigma,
  require_graphology_umd_min,
  require_graphology_layout_forceatlas2,
  require_graphology_layout_noverlap,
  data_mine_default,
  createTree
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
